
HardHackLEDCube.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000266c  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  08002778  08002778  00003778  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080027b0  080027b0  0000400c  2**0
                  CONTENTS
  4 .ARM          00000000  080027b0  080027b0  0000400c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080027b0  080027b0  0000400c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080027b0  080027b0  000037b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080027b4  080027b4  000037b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  080027b8  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000cc  2000000c  080027c4  0000400c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000d8  080027c4  000040d8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000400c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000078aa  00000000  00000000  00004035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001573  00000000  00000000  0000b8df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000008d8  00000000  00000000  0000ce58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000006d9  00000000  00000000  0000d730  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001632e  00000000  00000000  0000de09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000aaee  00000000  00000000  00024137  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000804f8  00000000  00000000  0002ec25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000af11d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002440  00000000  00000000  000af160  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  000b15a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000000c 	.word	0x2000000c
 8000128:	00000000 	.word	0x00000000
 800012c:	08002760 	.word	0x08002760

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000010 	.word	0x20000010
 8000148:	08002760 	.word	0x08002760

0800014c <setPCAOutput>:
}

/**
 * TODO write function header comment explaining functionality here
 */
void setPCAOutput(uint8_t ledID, bool on) {
 800014c:	b580      	push	{r7, lr}
 800014e:	b086      	sub	sp, #24
 8000150:	af02      	add	r7, sp, #8
 8000152:	4603      	mov	r3, r0
 8000154:	460a      	mov	r2, r1
 8000156:	71fb      	strb	r3, [r7, #7]
 8000158:	4613      	mov	r3, r2
 800015a:	71bb      	strb	r3, [r7, #6]
  uint8_t buf[5];
  buf[0] = (ledID == 16)? ALL_LED_ON_L : LED0_ON_L + (4 * ledID);
 800015c:	79fb      	ldrb	r3, [r7, #7]
 800015e:	2b10      	cmp	r3, #16
 8000160:	d005      	beq.n	800016e <setPCAOutput+0x22>
 8000162:	79fb      	ldrb	r3, [r7, #7]
 8000164:	009b      	lsls	r3, r3, #2
 8000166:	b2db      	uxtb	r3, r3
 8000168:	3306      	adds	r3, #6
 800016a:	b2db      	uxtb	r3, r3
 800016c:	e000      	b.n	8000170 <setPCAOutput+0x24>
 800016e:	23fa      	movs	r3, #250	@ 0xfa
 8000170:	723b      	strb	r3, [r7, #8]
  buf[1] = 0;
 8000172:	2300      	movs	r3, #0
 8000174:	727b      	strb	r3, [r7, #9]
  buf[2] = on? 0b00010000 : 0; // on high byte
 8000176:	79bb      	ldrb	r3, [r7, #6]
 8000178:	2b00      	cmp	r3, #0
 800017a:	d001      	beq.n	8000180 <setPCAOutput+0x34>
 800017c:	2310      	movs	r3, #16
 800017e:	e000      	b.n	8000182 <setPCAOutput+0x36>
 8000180:	2300      	movs	r3, #0
 8000182:	72bb      	strb	r3, [r7, #10]
  buf[3] = 0;
 8000184:	2300      	movs	r3, #0
 8000186:	72fb      	strb	r3, [r7, #11]
  buf[4] = on? 0 : 0b00010000; // off high byte
 8000188:	79bb      	ldrb	r3, [r7, #6]
 800018a:	2b00      	cmp	r3, #0
 800018c:	d001      	beq.n	8000192 <setPCAOutput+0x46>
 800018e:	2300      	movs	r3, #0
 8000190:	e000      	b.n	8000194 <setPCAOutput+0x48>
 8000192:	2310      	movs	r3, #16
 8000194:	733b      	strb	r3, [r7, #12]
  HAL_I2C_Master_Transmit(&hi2c2, PCA9685_ADDR, buf, 5, HAL_MAX_DELAY);
 8000196:	f107 0208 	add.w	r2, r7, #8
 800019a:	f04f 33ff 	mov.w	r3, #4294967295
 800019e:	9300      	str	r3, [sp, #0]
 80001a0:	2305      	movs	r3, #5
 80001a2:	21e0      	movs	r1, #224	@ 0xe0
 80001a4:	4803      	ldr	r0, [pc, #12]	@ (80001b4 <setPCAOutput+0x68>)
 80001a6:	f001 fad7 	bl	8001758 <HAL_I2C_Master_Transmit>
}
 80001aa:	bf00      	nop
 80001ac:	3710      	adds	r7, #16
 80001ae:	46bd      	mov	sp, r7
 80001b0:	bd80      	pop	{r7, pc}
 80001b2:	bf00      	nop
 80001b4:	20000028 	.word	0x20000028

080001b8 <testLEDs>:
    // turn off the depth transistor (pull it low)
    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[depth], GPIO_PIN_RESET);
  }
}

void testLEDs() {
 80001b8:	b580      	push	{r7, lr}
 80001ba:	b084      	sub	sp, #16
 80001bc:	af00      	add	r7, sp, #0
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[0], GPIO_PIN_SET);
 80001be:	2310      	movs	r3, #16
 80001c0:	2201      	movs	r2, #1
 80001c2:	4619      	mov	r1, r3
 80001c4:	4839      	ldr	r0, [pc, #228]	@ (80002ac <testLEDs+0xf4>)
 80001c6:	f001 f96b 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[1], GPIO_PIN_RESET);
 80001ca:	2320      	movs	r3, #32
 80001cc:	2200      	movs	r2, #0
 80001ce:	4619      	mov	r1, r3
 80001d0:	4836      	ldr	r0, [pc, #216]	@ (80002ac <testLEDs+0xf4>)
 80001d2:	f001 f965 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[2], GPIO_PIN_RESET);
 80001d6:	2340      	movs	r3, #64	@ 0x40
 80001d8:	2200      	movs	r2, #0
 80001da:	4619      	mov	r1, r3
 80001dc:	4833      	ldr	r0, [pc, #204]	@ (80002ac <testLEDs+0xf4>)
 80001de:	f001 f95f 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[3], GPIO_PIN_RESET);
 80001e2:	2380      	movs	r3, #128	@ 0x80
 80001e4:	2200      	movs	r2, #0
 80001e6:	4619      	mov	r1, r3
 80001e8:	4830      	ldr	r0, [pc, #192]	@ (80002ac <testLEDs+0xf4>)
 80001ea:	f001 f959 	bl	80014a0 <HAL_GPIO_WritePin>

  for (int dep = 0; dep < 4; dep++) {
 80001ee:	2300      	movs	r3, #0
 80001f0:	60fb      	str	r3, [r7, #12]
 80001f2:	e053      	b.n	800029c <testLEDs+0xe4>

    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[0], dep == 0);
 80001f4:	2110      	movs	r1, #16
 80001f6:	68fb      	ldr	r3, [r7, #12]
 80001f8:	2b00      	cmp	r3, #0
 80001fa:	bf0c      	ite	eq
 80001fc:	2301      	moveq	r3, #1
 80001fe:	2300      	movne	r3, #0
 8000200:	b2db      	uxtb	r3, r3
 8000202:	461a      	mov	r2, r3
 8000204:	4829      	ldr	r0, [pc, #164]	@ (80002ac <testLEDs+0xf4>)
 8000206:	f001 f94b 	bl	80014a0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[1], dep == 1);
 800020a:	2120      	movs	r1, #32
 800020c:	68fb      	ldr	r3, [r7, #12]
 800020e:	2b01      	cmp	r3, #1
 8000210:	bf0c      	ite	eq
 8000212:	2301      	moveq	r3, #1
 8000214:	2300      	movne	r3, #0
 8000216:	b2db      	uxtb	r3, r3
 8000218:	461a      	mov	r2, r3
 800021a:	4824      	ldr	r0, [pc, #144]	@ (80002ac <testLEDs+0xf4>)
 800021c:	f001 f940 	bl	80014a0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[2], dep == 2);
 8000220:	2140      	movs	r1, #64	@ 0x40
 8000222:	68fb      	ldr	r3, [r7, #12]
 8000224:	2b02      	cmp	r3, #2
 8000226:	bf0c      	ite	eq
 8000228:	2301      	moveq	r3, #1
 800022a:	2300      	movne	r3, #0
 800022c:	b2db      	uxtb	r3, r3
 800022e:	461a      	mov	r2, r3
 8000230:	481e      	ldr	r0, [pc, #120]	@ (80002ac <testLEDs+0xf4>)
 8000232:	f001 f935 	bl	80014a0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[3], dep == 3);
 8000236:	2180      	movs	r1, #128	@ 0x80
 8000238:	68fb      	ldr	r3, [r7, #12]
 800023a:	2b03      	cmp	r3, #3
 800023c:	bf0c      	ite	eq
 800023e:	2301      	moveq	r3, #1
 8000240:	2300      	movne	r3, #0
 8000242:	b2db      	uxtb	r3, r3
 8000244:	461a      	mov	r2, r3
 8000246:	4819      	ldr	r0, [pc, #100]	@ (80002ac <testLEDs+0xf4>)
 8000248:	f001 f92a 	bl	80014a0 <HAL_GPIO_WritePin>

    for (int i = 0; i < 16; i++) {
 800024c:	2300      	movs	r3, #0
 800024e:	60bb      	str	r3, [r7, #8]
 8000250:	e01e      	b.n	8000290 <testLEDs+0xd8>
      setPCAOutput(i, false);
 8000252:	68bb      	ldr	r3, [r7, #8]
 8000254:	b2db      	uxtb	r3, r3
 8000256:	2100      	movs	r1, #0
 8000258:	4618      	mov	r0, r3
 800025a:	f7ff ff77 	bl	800014c <setPCAOutput>
      for (int j = 0; j < 16; j++) {
 800025e:	2300      	movs	r3, #0
 8000260:	607b      	str	r3, [r7, #4]
 8000262:	e00c      	b.n	800027e <testLEDs+0xc6>
        if (j != i) {
 8000264:	687a      	ldr	r2, [r7, #4]
 8000266:	68bb      	ldr	r3, [r7, #8]
 8000268:	429a      	cmp	r2, r3
 800026a:	d005      	beq.n	8000278 <testLEDs+0xc0>
          setPCAOutput(j, true);
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	b2db      	uxtb	r3, r3
 8000270:	2101      	movs	r1, #1
 8000272:	4618      	mov	r0, r3
 8000274:	f7ff ff6a 	bl	800014c <setPCAOutput>
      for (int j = 0; j < 16; j++) {
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	3301      	adds	r3, #1
 800027c:	607b      	str	r3, [r7, #4]
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	2b0f      	cmp	r3, #15
 8000282:	ddef      	ble.n	8000264 <testLEDs+0xac>
        }
      }
      HAL_Delay(50);
 8000284:	2032      	movs	r0, #50	@ 0x32
 8000286:	f000 fe7f 	bl	8000f88 <HAL_Delay>
    for (int i = 0; i < 16; i++) {
 800028a:	68bb      	ldr	r3, [r7, #8]
 800028c:	3301      	adds	r3, #1
 800028e:	60bb      	str	r3, [r7, #8]
 8000290:	68bb      	ldr	r3, [r7, #8]
 8000292:	2b0f      	cmp	r3, #15
 8000294:	dddd      	ble.n	8000252 <testLEDs+0x9a>
  for (int dep = 0; dep < 4; dep++) {
 8000296:	68fb      	ldr	r3, [r7, #12]
 8000298:	3301      	adds	r3, #1
 800029a:	60fb      	str	r3, [r7, #12]
 800029c:	68fb      	ldr	r3, [r7, #12]
 800029e:	2b03      	cmp	r3, #3
 80002a0:	dda8      	ble.n	80001f4 <testLEDs+0x3c>
    }
  }
}
 80002a2:	bf00      	nop
 80002a4:	bf00      	nop
 80002a6:	3710      	adds	r7, #16
 80002a8:	46bd      	mov	sp, r7
 80002aa:	bd80      	pop	{r7, pc}
 80002ac:	40010c00 	.word	0x40010c00

080002b0 <resetEverything>:
    HAL_Delay(500);
  }
}


void resetEverything() {
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
  for (int i = 0; i < 16; i++) {
 80002b6:	2300      	movs	r3, #0
 80002b8:	607b      	str	r3, [r7, #4]
 80002ba:	e008      	b.n	80002ce <resetEverything+0x1e>
    setPCAOutput(i, true);
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	b2db      	uxtb	r3, r3
 80002c0:	2101      	movs	r1, #1
 80002c2:	4618      	mov	r0, r3
 80002c4:	f7ff ff42 	bl	800014c <setPCAOutput>
  for (int i = 0; i < 16; i++) {
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	3301      	adds	r3, #1
 80002cc:	607b      	str	r3, [r7, #4]
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	2b0f      	cmp	r3, #15
 80002d2:	ddf3      	ble.n	80002bc <resetEverything+0xc>
  }
}
 80002d4:	bf00      	nop
 80002d6:	bf00      	nop
 80002d8:	3708      	adds	r7, #8
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
	...

080002e0 <sideAnimDONTUSE>:

void sideAnimDONTUSE() {
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
  resetEverything();
 80002e4:	f7ff ffe4 	bl	80002b0 <resetEverything>

  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[0], GPIO_PIN_SET);
 80002e8:	2310      	movs	r3, #16
 80002ea:	2201      	movs	r2, #1
 80002ec:	4619      	mov	r1, r3
 80002ee:	4836      	ldr	r0, [pc, #216]	@ (80003c8 <sideAnimDONTUSE+0xe8>)
 80002f0:	f001 f8d6 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[1], GPIO_PIN_SET);
 80002f4:	2320      	movs	r3, #32
 80002f6:	2201      	movs	r2, #1
 80002f8:	4619      	mov	r1, r3
 80002fa:	4833      	ldr	r0, [pc, #204]	@ (80003c8 <sideAnimDONTUSE+0xe8>)
 80002fc:	f001 f8d0 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[2], GPIO_PIN_SET);
 8000300:	2340      	movs	r3, #64	@ 0x40
 8000302:	2201      	movs	r2, #1
 8000304:	4619      	mov	r1, r3
 8000306:	4830      	ldr	r0, [pc, #192]	@ (80003c8 <sideAnimDONTUSE+0xe8>)
 8000308:	f001 f8ca 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[3], GPIO_PIN_SET);
 800030c:	2380      	movs	r3, #128	@ 0x80
 800030e:	2201      	movs	r2, #1
 8000310:	4619      	mov	r1, r3
 8000312:	482d      	ldr	r0, [pc, #180]	@ (80003c8 <sideAnimDONTUSE+0xe8>)
 8000314:	f001 f8c4 	bl	80014a0 <HAL_GPIO_WritePin>


  setPCAOutput(0, !true);
 8000318:	2100      	movs	r1, #0
 800031a:	2000      	movs	r0, #0
 800031c:	f7ff ff16 	bl	800014c <setPCAOutput>
  setPCAOutput(1, !true);
 8000320:	2100      	movs	r1, #0
 8000322:	2001      	movs	r0, #1
 8000324:	f7ff ff12 	bl	800014c <setPCAOutput>
  setPCAOutput(2, !true);
 8000328:	2100      	movs	r1, #0
 800032a:	2002      	movs	r0, #2
 800032c:	f7ff ff0e 	bl	800014c <setPCAOutput>
  setPCAOutput(3, !true);
 8000330:	2100      	movs	r1, #0
 8000332:	2003      	movs	r0, #3
 8000334:	f7ff ff0a 	bl	800014c <setPCAOutput>

  HAL_Delay(500);
 8000338:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800033c:	f000 fe24 	bl	8000f88 <HAL_Delay>

  setPCAOutput(4, !true);
 8000340:	2100      	movs	r1, #0
 8000342:	2004      	movs	r0, #4
 8000344:	f7ff ff02 	bl	800014c <setPCAOutput>
  setPCAOutput(5, !true);
 8000348:	2100      	movs	r1, #0
 800034a:	2005      	movs	r0, #5
 800034c:	f7ff fefe 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !true);
 8000350:	2100      	movs	r1, #0
 8000352:	2006      	movs	r0, #6
 8000354:	f7ff fefa 	bl	800014c <setPCAOutput>
  setPCAOutput(7, !true);
 8000358:	2100      	movs	r1, #0
 800035a:	2007      	movs	r0, #7
 800035c:	f7ff fef6 	bl	800014c <setPCAOutput>

  HAL_Delay(500);
 8000360:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000364:	f000 fe10 	bl	8000f88 <HAL_Delay>

  setPCAOutput(8, !true);
 8000368:	2100      	movs	r1, #0
 800036a:	2008      	movs	r0, #8
 800036c:	f7ff feee 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !true);
 8000370:	2100      	movs	r1, #0
 8000372:	2009      	movs	r0, #9
 8000374:	f7ff feea 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !true);
 8000378:	2100      	movs	r1, #0
 800037a:	200a      	movs	r0, #10
 800037c:	f7ff fee6 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !true);
 8000380:	2100      	movs	r1, #0
 8000382:	200b      	movs	r0, #11
 8000384:	f7ff fee2 	bl	800014c <setPCAOutput>

  HAL_Delay(500);
 8000388:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800038c:	f000 fdfc 	bl	8000f88 <HAL_Delay>

  setPCAOutput(12, !true);
 8000390:	2100      	movs	r1, #0
 8000392:	200c      	movs	r0, #12
 8000394:	f7ff feda 	bl	800014c <setPCAOutput>
  setPCAOutput(13, !true);
 8000398:	2100      	movs	r1, #0
 800039a:	200d      	movs	r0, #13
 800039c:	f7ff fed6 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !true);
 80003a0:	2100      	movs	r1, #0
 80003a2:	200e      	movs	r0, #14
 80003a4:	f7ff fed2 	bl	800014c <setPCAOutput>
  setPCAOutput(15, !true);
 80003a8:	2100      	movs	r1, #0
 80003aa:	200f      	movs	r0, #15
 80003ac:	f7ff fece 	bl	800014c <setPCAOutput>

  HAL_Delay(500);
 80003b0:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80003b4:	f000 fde8 	bl	8000f88 <HAL_Delay>
  resetEverything();
 80003b8:	f7ff ff7a 	bl	80002b0 <resetEverything>
  HAL_Delay(500);
 80003bc:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80003c0:	f000 fde2 	bl	8000f88 <HAL_Delay>
}
 80003c4:	bf00      	nop
 80003c6:	bd80      	pop	{r7, pc}
 80003c8:	40010c00 	.word	0x40010c00

080003cc <spinningColumn>:


void spinningColumn() {
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b082      	sub	sp, #8
 80003d0:	af00      	add	r7, sp, #0
  resetEverything();
 80003d2:	f7ff ff6d 	bl	80002b0 <resetEverything>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[0], GPIO_PIN_SET);
 80003d6:	2310      	movs	r3, #16
 80003d8:	2201      	movs	r2, #1
 80003da:	4619      	mov	r1, r3
 80003dc:	481c      	ldr	r0, [pc, #112]	@ (8000450 <spinningColumn+0x84>)
 80003de:	f001 f85f 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[1], GPIO_PIN_SET);
 80003e2:	2320      	movs	r3, #32
 80003e4:	2201      	movs	r2, #1
 80003e6:	4619      	mov	r1, r3
 80003e8:	4819      	ldr	r0, [pc, #100]	@ (8000450 <spinningColumn+0x84>)
 80003ea:	f001 f859 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[2], GPIO_PIN_SET);
 80003ee:	2340      	movs	r3, #64	@ 0x40
 80003f0:	2201      	movs	r2, #1
 80003f2:	4619      	mov	r1, r3
 80003f4:	4816      	ldr	r0, [pc, #88]	@ (8000450 <spinningColumn+0x84>)
 80003f6:	f001 f853 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[3], GPIO_PIN_SET);
 80003fa:	2380      	movs	r3, #128	@ 0x80
 80003fc:	2201      	movs	r2, #1
 80003fe:	4619      	mov	r1, r3
 8000400:	4813      	ldr	r0, [pc, #76]	@ (8000450 <spinningColumn+0x84>)
 8000402:	f001 f84d 	bl	80014a0 <HAL_GPIO_WritePin>
  for (int i = 0; i < 16; i++) {
 8000406:	2300      	movs	r3, #0
 8000408:	607b      	str	r3, [r7, #4]
 800040a:	e019      	b.n	8000440 <spinningColumn+0x74>
      if (i == 5 || i == 6 || i == 9 || i == 10) {
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	2b05      	cmp	r3, #5
 8000410:	d012      	beq.n	8000438 <spinningColumn+0x6c>
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	2b06      	cmp	r3, #6
 8000416:	d00f      	beq.n	8000438 <spinningColumn+0x6c>
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	2b09      	cmp	r3, #9
 800041c:	d00c      	beq.n	8000438 <spinningColumn+0x6c>
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	2b0a      	cmp	r3, #10
 8000422:	d009      	beq.n	8000438 <spinningColumn+0x6c>
          continue;
      }
      setPCAOutput(i, !true);
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	b2db      	uxtb	r3, r3
 8000428:	2100      	movs	r1, #0
 800042a:	4618      	mov	r0, r3
 800042c:	f7ff fe8e 	bl	800014c <setPCAOutput>
      HAL_Delay(100);
 8000430:	2064      	movs	r0, #100	@ 0x64
 8000432:	f000 fda9 	bl	8000f88 <HAL_Delay>
 8000436:	e000      	b.n	800043a <spinningColumn+0x6e>
          continue;
 8000438:	bf00      	nop
  for (int i = 0; i < 16; i++) {
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	3301      	adds	r3, #1
 800043e:	607b      	str	r3, [r7, #4]
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	2b0f      	cmp	r3, #15
 8000444:	dde2      	ble.n	800040c <spinningColumn+0x40>
  }
}
 8000446:	bf00      	nop
 8000448:	bf00      	nop
 800044a:	3708      	adds	r7, #8
 800044c:	46bd      	mov	sp, r7
 800044e:	bd80      	pop	{r7, pc}
 8000450:	40010c00 	.word	0x40010c00

08000454 <checkerboard>:

void checkerboard() {
 8000454:	b580      	push	{r7, lr}
 8000456:	af00      	add	r7, sp, #0
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[0], GPIO_PIN_SET);
 8000458:	2310      	movs	r3, #16
 800045a:	2201      	movs	r2, #1
 800045c:	4619      	mov	r1, r3
 800045e:	484f      	ldr	r0, [pc, #316]	@ (800059c <checkerboard+0x148>)
 8000460:	f001 f81e 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[1], GPIO_PIN_SET);
 8000464:	2320      	movs	r3, #32
 8000466:	2201      	movs	r2, #1
 8000468:	4619      	mov	r1, r3
 800046a:	484c      	ldr	r0, [pc, #304]	@ (800059c <checkerboard+0x148>)
 800046c:	f001 f818 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[2], GPIO_PIN_SET);
 8000470:	2340      	movs	r3, #64	@ 0x40
 8000472:	2201      	movs	r2, #1
 8000474:	4619      	mov	r1, r3
 8000476:	4849      	ldr	r0, [pc, #292]	@ (800059c <checkerboard+0x148>)
 8000478:	f001 f812 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[3], GPIO_PIN_SET);
 800047c:	2380      	movs	r3, #128	@ 0x80
 800047e:	2201      	movs	r2, #1
 8000480:	4619      	mov	r1, r3
 8000482:	4846      	ldr	r0, [pc, #280]	@ (800059c <checkerboard+0x148>)
 8000484:	f001 f80c 	bl	80014a0 <HAL_GPIO_WritePin>

  setPCAOutput(0, false);
 8000488:	2100      	movs	r1, #0
 800048a:	2000      	movs	r0, #0
 800048c:	f7ff fe5e 	bl	800014c <setPCAOutput>
  setPCAOutput(2, false);
 8000490:	2100      	movs	r1, #0
 8000492:	2002      	movs	r0, #2
 8000494:	f7ff fe5a 	bl	800014c <setPCAOutput>
  setPCAOutput(5, false);
 8000498:	2100      	movs	r1, #0
 800049a:	2005      	movs	r0, #5
 800049c:	f7ff fe56 	bl	800014c <setPCAOutput>
  setPCAOutput(7, false);
 80004a0:	2100      	movs	r1, #0
 80004a2:	2007      	movs	r0, #7
 80004a4:	f7ff fe52 	bl	800014c <setPCAOutput>

  setPCAOutput(8, false);
 80004a8:	2100      	movs	r1, #0
 80004aa:	2008      	movs	r0, #8
 80004ac:	f7ff fe4e 	bl	800014c <setPCAOutput>
  setPCAOutput(10, false);
 80004b0:	2100      	movs	r1, #0
 80004b2:	200a      	movs	r0, #10
 80004b4:	f7ff fe4a 	bl	800014c <setPCAOutput>
  setPCAOutput(13, false);
 80004b8:	2100      	movs	r1, #0
 80004ba:	200d      	movs	r0, #13
 80004bc:	f7ff fe46 	bl	800014c <setPCAOutput>
  setPCAOutput(15, false);
 80004c0:	2100      	movs	r1, #0
 80004c2:	200f      	movs	r0, #15
 80004c4:	f7ff fe42 	bl	800014c <setPCAOutput>

  HAL_Delay(1000);
 80004c8:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80004cc:	f000 fd5c 	bl	8000f88 <HAL_Delay>

  setPCAOutput(0, true);
 80004d0:	2101      	movs	r1, #1
 80004d2:	2000      	movs	r0, #0
 80004d4:	f7ff fe3a 	bl	800014c <setPCAOutput>
  setPCAOutput(2, true);
 80004d8:	2101      	movs	r1, #1
 80004da:	2002      	movs	r0, #2
 80004dc:	f7ff fe36 	bl	800014c <setPCAOutput>
  setPCAOutput(5, true);
 80004e0:	2101      	movs	r1, #1
 80004e2:	2005      	movs	r0, #5
 80004e4:	f7ff fe32 	bl	800014c <setPCAOutput>
  setPCAOutput(7, true);
 80004e8:	2101      	movs	r1, #1
 80004ea:	2007      	movs	r0, #7
 80004ec:	f7ff fe2e 	bl	800014c <setPCAOutput>

  setPCAOutput(8, !false);
 80004f0:	2101      	movs	r1, #1
 80004f2:	2008      	movs	r0, #8
 80004f4:	f7ff fe2a 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !false);
 80004f8:	2101      	movs	r1, #1
 80004fa:	200a      	movs	r0, #10
 80004fc:	f7ff fe26 	bl	800014c <setPCAOutput>
  setPCAOutput(13, !false);
 8000500:	2101      	movs	r1, #1
 8000502:	200d      	movs	r0, #13
 8000504:	f7ff fe22 	bl	800014c <setPCAOutput>
  setPCAOutput(15, !false);
 8000508:	2101      	movs	r1, #1
 800050a:	200f      	movs	r0, #15
 800050c:	f7ff fe1e 	bl	800014c <setPCAOutput>

  setPCAOutput(1, !true);
 8000510:	2100      	movs	r1, #0
 8000512:	2001      	movs	r0, #1
 8000514:	f7ff fe1a 	bl	800014c <setPCAOutput>
  setPCAOutput(3, !true);
 8000518:	2100      	movs	r1, #0
 800051a:	2003      	movs	r0, #3
 800051c:	f7ff fe16 	bl	800014c <setPCAOutput>
  setPCAOutput(4, !true);
 8000520:	2100      	movs	r1, #0
 8000522:	2004      	movs	r0, #4
 8000524:	f7ff fe12 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !true);
 8000528:	2100      	movs	r1, #0
 800052a:	2006      	movs	r0, #6
 800052c:	f7ff fe0e 	bl	800014c <setPCAOutput>

  setPCAOutput(9, !true);
 8000530:	2100      	movs	r1, #0
 8000532:	2009      	movs	r0, #9
 8000534:	f7ff fe0a 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !true);
 8000538:	2100      	movs	r1, #0
 800053a:	200b      	movs	r0, #11
 800053c:	f7ff fe06 	bl	800014c <setPCAOutput>
  setPCAOutput(12, !true);
 8000540:	2100      	movs	r1, #0
 8000542:	200c      	movs	r0, #12
 8000544:	f7ff fe02 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !true);
 8000548:	2100      	movs	r1, #0
 800054a:	200e      	movs	r0, #14
 800054c:	f7ff fdfe 	bl	800014c <setPCAOutput>

  HAL_Delay(1000);
 8000550:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000554:	f000 fd18 	bl	8000f88 <HAL_Delay>

  setPCAOutput(1, !false);
 8000558:	2101      	movs	r1, #1
 800055a:	2001      	movs	r0, #1
 800055c:	f7ff fdf6 	bl	800014c <setPCAOutput>
  setPCAOutput(3, !false);
 8000560:	2101      	movs	r1, #1
 8000562:	2003      	movs	r0, #3
 8000564:	f7ff fdf2 	bl	800014c <setPCAOutput>
  setPCAOutput(4, !false);
 8000568:	2101      	movs	r1, #1
 800056a:	2004      	movs	r0, #4
 800056c:	f7ff fdee 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !false);
 8000570:	2101      	movs	r1, #1
 8000572:	2006      	movs	r0, #6
 8000574:	f7ff fdea 	bl	800014c <setPCAOutput>

  setPCAOutput(9, !false);
 8000578:	2101      	movs	r1, #1
 800057a:	2009      	movs	r0, #9
 800057c:	f7ff fde6 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !false);
 8000580:	2101      	movs	r1, #1
 8000582:	200b      	movs	r0, #11
 8000584:	f7ff fde2 	bl	800014c <setPCAOutput>
  setPCAOutput(12, !false);
 8000588:	2101      	movs	r1, #1
 800058a:	200c      	movs	r0, #12
 800058c:	f7ff fdde 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !false);
 8000590:	2101      	movs	r1, #1
 8000592:	200e      	movs	r0, #14
 8000594:	f7ff fdda 	bl	800014c <setPCAOutput>
}
 8000598:	bf00      	nop
 800059a:	bd80      	pop	{r7, pc}
 800059c:	40010c00 	.word	0x40010c00

080005a0 <corners>:

void corners() {
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b082      	sub	sp, #8
 80005a4:	af00      	add	r7, sp, #0
  resetEverything();
 80005a6:	f7ff fe83 	bl	80002b0 <resetEverything>

  for (int i = 0; i < 4; i++) {
 80005aa:	2300      	movs	r3, #0
 80005ac:	607b      	str	r3, [r7, #4]
 80005ae:	e080      	b.n	80006b2 <corners+0x112>
    for (int j = 0; j < 4; j++) {
 80005b0:	2300      	movs	r3, #0
 80005b2:	603b      	str	r3, [r7, #0]
 80005b4:	e00b      	b.n	80005ce <corners+0x2e>
      HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[j], GPIO_PIN_RESET);
 80005b6:	4a43      	ldr	r2, [pc, #268]	@ (80006c4 <corners+0x124>)
 80005b8:	683b      	ldr	r3, [r7, #0]
 80005ba:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80005be:	2200      	movs	r2, #0
 80005c0:	4619      	mov	r1, r3
 80005c2:	4841      	ldr	r0, [pc, #260]	@ (80006c8 <corners+0x128>)
 80005c4:	f000 ff6c 	bl	80014a0 <HAL_GPIO_WritePin>
    for (int j = 0; j < 4; j++) {
 80005c8:	683b      	ldr	r3, [r7, #0]
 80005ca:	3301      	adds	r3, #1
 80005cc:	603b      	str	r3, [r7, #0]
 80005ce:	683b      	ldr	r3, [r7, #0]
 80005d0:	2b03      	cmp	r3, #3
 80005d2:	ddf0      	ble.n	80005b6 <corners+0x16>
    }

    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[i], GPIO_PIN_SET);
 80005d4:	4a3b      	ldr	r2, [pc, #236]	@ (80006c4 <corners+0x124>)
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80005dc:	2201      	movs	r2, #1
 80005de:	4619      	mov	r1, r3
 80005e0:	4839      	ldr	r0, [pc, #228]	@ (80006c8 <corners+0x128>)
 80005e2:	f000 ff5d 	bl	80014a0 <HAL_GPIO_WritePin>

    setPCAOutput(3, false);
 80005e6:	2100      	movs	r1, #0
 80005e8:	2003      	movs	r0, #3
 80005ea:	f7ff fdaf 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 80005ee:	20c8      	movs	r0, #200	@ 0xc8
 80005f0:	f000 fcca 	bl	8000f88 <HAL_Delay>

    setPCAOutput(2, false);
 80005f4:	2100      	movs	r1, #0
 80005f6:	2002      	movs	r0, #2
 80005f8:	f7ff fda8 	bl	800014c <setPCAOutput>
    setPCAOutput(7, false);
 80005fc:	2100      	movs	r1, #0
 80005fe:	2007      	movs	r0, #7
 8000600:	f7ff fda4 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 8000604:	20c8      	movs	r0, #200	@ 0xc8
 8000606:	f000 fcbf 	bl	8000f88 <HAL_Delay>

    setPCAOutput(1, false);
 800060a:	2100      	movs	r1, #0
 800060c:	2001      	movs	r0, #1
 800060e:	f7ff fd9d 	bl	800014c <setPCAOutput>
    setPCAOutput(6, false);
 8000612:	2100      	movs	r1, #0
 8000614:	2006      	movs	r0, #6
 8000616:	f7ff fd99 	bl	800014c <setPCAOutput>
    setPCAOutput(11, false);
 800061a:	2100      	movs	r1, #0
 800061c:	200b      	movs	r0, #11
 800061e:	f7ff fd95 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 8000622:	20c8      	movs	r0, #200	@ 0xc8
 8000624:	f000 fcb0 	bl	8000f88 <HAL_Delay>

    setPCAOutput(0, false);
 8000628:	2100      	movs	r1, #0
 800062a:	2000      	movs	r0, #0
 800062c:	f7ff fd8e 	bl	800014c <setPCAOutput>
    setPCAOutput(5, false);
 8000630:	2100      	movs	r1, #0
 8000632:	2005      	movs	r0, #5
 8000634:	f7ff fd8a 	bl	800014c <setPCAOutput>
    setPCAOutput(10, false);
 8000638:	2100      	movs	r1, #0
 800063a:	200a      	movs	r0, #10
 800063c:	f7ff fd86 	bl	800014c <setPCAOutput>
    setPCAOutput(15, false);
 8000640:	2100      	movs	r1, #0
 8000642:	200f      	movs	r0, #15
 8000644:	f7ff fd82 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 8000648:	20c8      	movs	r0, #200	@ 0xc8
 800064a:	f000 fc9d 	bl	8000f88 <HAL_Delay>

    setPCAOutput(4, false);
 800064e:	2100      	movs	r1, #0
 8000650:	2004      	movs	r0, #4
 8000652:	f7ff fd7b 	bl	800014c <setPCAOutput>
    setPCAOutput(9, false);
 8000656:	2100      	movs	r1, #0
 8000658:	2009      	movs	r0, #9
 800065a:	f7ff fd77 	bl	800014c <setPCAOutput>
    setPCAOutput(14, false);
 800065e:	2100      	movs	r1, #0
 8000660:	200e      	movs	r0, #14
 8000662:	f7ff fd73 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 8000666:	20c8      	movs	r0, #200	@ 0xc8
 8000668:	f000 fc8e 	bl	8000f88 <HAL_Delay>

    setPCAOutput(8, false);
 800066c:	2100      	movs	r1, #0
 800066e:	2008      	movs	r0, #8
 8000670:	f7ff fd6c 	bl	800014c <setPCAOutput>
    setPCAOutput(13, false);
 8000674:	2100      	movs	r1, #0
 8000676:	200d      	movs	r0, #13
 8000678:	f7ff fd68 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 800067c:	20c8      	movs	r0, #200	@ 0xc8
 800067e:	f000 fc83 	bl	8000f88 <HAL_Delay>

    setPCAOutput(12, false);
 8000682:	2100      	movs	r1, #0
 8000684:	200c      	movs	r0, #12
 8000686:	f7ff fd61 	bl	800014c <setPCAOutput>
    HAL_Delay(200);
 800068a:	20c8      	movs	r0, #200	@ 0xc8
 800068c:	f000 fc7c 	bl	8000f88 <HAL_Delay>

    HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[i], GPIO_PIN_RESET);
 8000690:	4a0c      	ldr	r2, [pc, #48]	@ (80006c4 <corners+0x124>)
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000698:	2200      	movs	r2, #0
 800069a:	4619      	mov	r1, r3
 800069c:	480a      	ldr	r0, [pc, #40]	@ (80006c8 <corners+0x128>)
 800069e:	f000 feff 	bl	80014a0 <HAL_GPIO_WritePin>

    resetEverything();
 80006a2:	f7ff fe05 	bl	80002b0 <resetEverything>
    HAL_Delay(200);
 80006a6:	20c8      	movs	r0, #200	@ 0xc8
 80006a8:	f000 fc6e 	bl	8000f88 <HAL_Delay>
  for (int i = 0; i < 4; i++) {
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	3301      	adds	r3, #1
 80006b0:	607b      	str	r3, [r7, #4]
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	2b03      	cmp	r3, #3
 80006b6:	f77f af7b 	ble.w	80005b0 <corners+0x10>
  }
}
 80006ba:	bf00      	nop
 80006bc:	bf00      	nop
 80006be:	3708      	adds	r7, #8
 80006c0:	46bd      	mov	sp, r7
 80006c2:	bd80      	pop	{r7, pc}
 80006c4:	08002778 	.word	0x08002778
 80006c8:	40010c00 	.word	0x40010c00

080006cc <tunneling>:

void tunneling() {
 80006cc:	b580      	push	{r7, lr}
 80006ce:	af00      	add	r7, sp, #0
  resetEverything();
 80006d0:	f7ff fdee 	bl	80002b0 <resetEverything>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[0], GPIO_PIN_RESET);
 80006d4:	2310      	movs	r3, #16
 80006d6:	2200      	movs	r2, #0
 80006d8:	4619      	mov	r1, r3
 80006da:	48b1      	ldr	r0, [pc, #708]	@ (80009a0 <tunneling+0x2d4>)
 80006dc:	f000 fee0 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[1], GPIO_PIN_SET);
 80006e0:	2320      	movs	r3, #32
 80006e2:	2201      	movs	r2, #1
 80006e4:	4619      	mov	r1, r3
 80006e6:	48ae      	ldr	r0, [pc, #696]	@ (80009a0 <tunneling+0x2d4>)
 80006e8:	f000 feda 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[2], GPIO_PIN_SET);
 80006ec:	2340      	movs	r3, #64	@ 0x40
 80006ee:	2201      	movs	r2, #1
 80006f0:	4619      	mov	r1, r3
 80006f2:	48ab      	ldr	r0, [pc, #684]	@ (80009a0 <tunneling+0x2d4>)
 80006f4:	f000 fed4 	bl	80014a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(TRANSISTOR_PORT, transistorPinMap[3], GPIO_PIN_RESET);
 80006f8:	2380      	movs	r3, #128	@ 0x80
 80006fa:	2200      	movs	r2, #0
 80006fc:	4619      	mov	r1, r3
 80006fe:	48a8      	ldr	r0, [pc, #672]	@ (80009a0 <tunneling+0x2d4>)
 8000700:	f000 fece 	bl	80014a0 <HAL_GPIO_WritePin>

  setPCAOutput(4, !true);
 8000704:	2100      	movs	r1, #0
 8000706:	2004      	movs	r0, #4
 8000708:	f7ff fd20 	bl	800014c <setPCAOutput>
  setPCAOutput(8, !true);
 800070c:	2100      	movs	r1, #0
 800070e:	2008      	movs	r0, #8
 8000710:	f7ff fd1c 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000714:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000718:	f000 fc36 	bl	8000f88 <HAL_Delay>

  setPCAOutput(5, !true);
 800071c:	2100      	movs	r1, #0
 800071e:	2005      	movs	r0, #5
 8000720:	f7ff fd14 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !true);
 8000724:	2100      	movs	r1, #0
 8000726:	2009      	movs	r0, #9
 8000728:	f7ff fd10 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 800072c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000730:	f000 fc2a 	bl	8000f88 <HAL_Delay>

  setPCAOutput(6, !true);
 8000734:	2100      	movs	r1, #0
 8000736:	2006      	movs	r0, #6
 8000738:	f7ff fd08 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !true);
 800073c:	2100      	movs	r1, #0
 800073e:	200a      	movs	r0, #10
 8000740:	f7ff fd04 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000744:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000748:	f000 fc1e 	bl	8000f88 <HAL_Delay>

  setPCAOutput(7, !true);
 800074c:	2100      	movs	r1, #0
 800074e:	2007      	movs	r0, #7
 8000750:	f7ff fcfc 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !true);
 8000754:	2100      	movs	r1, #0
 8000756:	200b      	movs	r0, #11
 8000758:	f7ff fcf8 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 800075c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000760:	f000 fc12 	bl	8000f88 <HAL_Delay>

  setPCAOutput(4, !false);
 8000764:	2101      	movs	r1, #1
 8000766:	2004      	movs	r0, #4
 8000768:	f7ff fcf0 	bl	800014c <setPCAOutput>
  setPCAOutput(8, !false);
 800076c:	2101      	movs	r1, #1
 800076e:	2008      	movs	r0, #8
 8000770:	f7ff fcec 	bl	800014c <setPCAOutput>
  setPCAOutput(5, !false);
 8000774:	2101      	movs	r1, #1
 8000776:	2005      	movs	r0, #5
 8000778:	f7ff fce8 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !false);
 800077c:	2101      	movs	r1, #1
 800077e:	2009      	movs	r0, #9
 8000780:	f7ff fce4 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !false);
 8000784:	2101      	movs	r1, #1
 8000786:	2006      	movs	r0, #6
 8000788:	f7ff fce0 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !false);
 800078c:	2101      	movs	r1, #1
 800078e:	200a      	movs	r0, #10
 8000790:	f7ff fcdc 	bl	800014c <setPCAOutput>
  setPCAOutput(7, !false);
 8000794:	2101      	movs	r1, #1
 8000796:	2007      	movs	r0, #7
 8000798:	f7ff fcd8 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !false);
 800079c:	2101      	movs	r1, #1
 800079e:	200b      	movs	r0, #11
 80007a0:	f7ff fcd4 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 80007a4:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80007a8:	f000 fbee 	bl	8000f88 <HAL_Delay>

  setPCAOutput(13, !true);
 80007ac:	2100      	movs	r1, #0
 80007ae:	200d      	movs	r0, #13
 80007b0:	f7ff fccc 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !true);
 80007b4:	2100      	movs	r1, #0
 80007b6:	200e      	movs	r0, #14
 80007b8:	f7ff fcc8 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 80007bc:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80007c0:	f000 fbe2 	bl	8000f88 <HAL_Delay>

  setPCAOutput(9, !true);
 80007c4:	2100      	movs	r1, #0
 80007c6:	2009      	movs	r0, #9
 80007c8:	f7ff fcc0 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !true);
 80007cc:	2100      	movs	r1, #0
 80007ce:	200a      	movs	r0, #10
 80007d0:	f7ff fcbc 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 80007d4:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80007d8:	f000 fbd6 	bl	8000f88 <HAL_Delay>

  setPCAOutput(5, !true);
 80007dc:	2100      	movs	r1, #0
 80007de:	2005      	movs	r0, #5
 80007e0:	f7ff fcb4 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !true);
 80007e4:	2100      	movs	r1, #0
 80007e6:	2006      	movs	r0, #6
 80007e8:	f7ff fcb0 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 80007ec:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80007f0:	f000 fbca 	bl	8000f88 <HAL_Delay>

  setPCAOutput(1, !true);
 80007f4:	2100      	movs	r1, #0
 80007f6:	2001      	movs	r0, #1
 80007f8:	f7ff fca8 	bl	800014c <setPCAOutput>
  setPCAOutput(2, !true);
 80007fc:	2100      	movs	r1, #0
 80007fe:	2002      	movs	r0, #2
 8000800:	f7ff fca4 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000804:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000808:	f000 fbbe 	bl	8000f88 <HAL_Delay>

  setPCAOutput(13, !false);
 800080c:	2101      	movs	r1, #1
 800080e:	200d      	movs	r0, #13
 8000810:	f7ff fc9c 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !false);
 8000814:	2101      	movs	r1, #1
 8000816:	200e      	movs	r0, #14
 8000818:	f7ff fc98 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !false);
 800081c:	2101      	movs	r1, #1
 800081e:	2009      	movs	r0, #9
 8000820:	f7ff fc94 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !false);
 8000824:	2101      	movs	r1, #1
 8000826:	200a      	movs	r0, #10
 8000828:	f7ff fc90 	bl	800014c <setPCAOutput>
  setPCAOutput(5, !false);
 800082c:	2101      	movs	r1, #1
 800082e:	2005      	movs	r0, #5
 8000830:	f7ff fc8c 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !false);
 8000834:	2101      	movs	r1, #1
 8000836:	2006      	movs	r0, #6
 8000838:	f7ff fc88 	bl	800014c <setPCAOutput>
  setPCAOutput(1, !false);
 800083c:	2101      	movs	r1, #1
 800083e:	2001      	movs	r0, #1
 8000840:	f7ff fc84 	bl	800014c <setPCAOutput>
  setPCAOutput(2, !false);
 8000844:	2101      	movs	r1, #1
 8000846:	2002      	movs	r0, #2
 8000848:	f7ff fc80 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 800084c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000850:	f000 fb9a 	bl	8000f88 <HAL_Delay>

  setPCAOutput(7, !true);
 8000854:	2100      	movs	r1, #0
 8000856:	2007      	movs	r0, #7
 8000858:	f7ff fc78 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !true);
 800085c:	2100      	movs	r1, #0
 800085e:	200b      	movs	r0, #11
 8000860:	f7ff fc74 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000864:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000868:	f000 fb8e 	bl	8000f88 <HAL_Delay>

  setPCAOutput(6, !true);
 800086c:	2100      	movs	r1, #0
 800086e:	2006      	movs	r0, #6
 8000870:	f7ff fc6c 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !true);
 8000874:	2100      	movs	r1, #0
 8000876:	200a      	movs	r0, #10
 8000878:	f7ff fc68 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 800087c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000880:	f000 fb82 	bl	8000f88 <HAL_Delay>

  setPCAOutput(5, !true);
 8000884:	2100      	movs	r1, #0
 8000886:	2005      	movs	r0, #5
 8000888:	f7ff fc60 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !true);
 800088c:	2100      	movs	r1, #0
 800088e:	2009      	movs	r0, #9
 8000890:	f7ff fc5c 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000894:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000898:	f000 fb76 	bl	8000f88 <HAL_Delay>

  setPCAOutput(4, !true);
 800089c:	2100      	movs	r1, #0
 800089e:	2004      	movs	r0, #4
 80008a0:	f7ff fc54 	bl	800014c <setPCAOutput>
  setPCAOutput(8, !true);
 80008a4:	2100      	movs	r1, #0
 80008a6:	2008      	movs	r0, #8
 80008a8:	f7ff fc50 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 80008ac:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80008b0:	f000 fb6a 	bl	8000f88 <HAL_Delay>

  setPCAOutput(4, !false);
 80008b4:	2101      	movs	r1, #1
 80008b6:	2004      	movs	r0, #4
 80008b8:	f7ff fc48 	bl	800014c <setPCAOutput>
  setPCAOutput(8, !false);
 80008bc:	2101      	movs	r1, #1
 80008be:	2008      	movs	r0, #8
 80008c0:	f7ff fc44 	bl	800014c <setPCAOutput>
  setPCAOutput(5, !false);
 80008c4:	2101      	movs	r1, #1
 80008c6:	2005      	movs	r0, #5
 80008c8:	f7ff fc40 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !false);
 80008cc:	2101      	movs	r1, #1
 80008ce:	2009      	movs	r0, #9
 80008d0:	f7ff fc3c 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !false);
 80008d4:	2101      	movs	r1, #1
 80008d6:	2006      	movs	r0, #6
 80008d8:	f7ff fc38 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !false);
 80008dc:	2101      	movs	r1, #1
 80008de:	200a      	movs	r0, #10
 80008e0:	f7ff fc34 	bl	800014c <setPCAOutput>
  setPCAOutput(7, !false);
 80008e4:	2101      	movs	r1, #1
 80008e6:	2007      	movs	r0, #7
 80008e8:	f7ff fc30 	bl	800014c <setPCAOutput>
  setPCAOutput(11, !false);
 80008ec:	2101      	movs	r1, #1
 80008ee:	200b      	movs	r0, #11
 80008f0:	f7ff fc2c 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 80008f4:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 80008f8:	f000 fb46 	bl	8000f88 <HAL_Delay>
  setPCAOutput(1, !true);
 80008fc:	2100      	movs	r1, #0
 80008fe:	2001      	movs	r0, #1
 8000900:	f7ff fc24 	bl	800014c <setPCAOutput>
  setPCAOutput(2, !true);
 8000904:	2100      	movs	r1, #0
 8000906:	2002      	movs	r0, #2
 8000908:	f7ff fc20 	bl	800014c <setPCAOutput>


  HAL_Delay(300);
 800090c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000910:	f000 fb3a 	bl	8000f88 <HAL_Delay>

  setPCAOutput(5, !true);
 8000914:	2100      	movs	r1, #0
 8000916:	2005      	movs	r0, #5
 8000918:	f7ff fc18 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !true);
 800091c:	2100      	movs	r1, #0
 800091e:	2006      	movs	r0, #6
 8000920:	f7ff fc14 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000924:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000928:	f000 fb2e 	bl	8000f88 <HAL_Delay>

  setPCAOutput(9, !true);
 800092c:	2100      	movs	r1, #0
 800092e:	2009      	movs	r0, #9
 8000930:	f7ff fc0c 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !true);
 8000934:	2100      	movs	r1, #0
 8000936:	200a      	movs	r0, #10
 8000938:	f7ff fc08 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 800093c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000940:	f000 fb22 	bl	8000f88 <HAL_Delay>

  setPCAOutput(13, !true);
 8000944:	2100      	movs	r1, #0
 8000946:	200d      	movs	r0, #13
 8000948:	f7ff fc00 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !true);
 800094c:	2100      	movs	r1, #0
 800094e:	200e      	movs	r0, #14
 8000950:	f7ff fbfc 	bl	800014c <setPCAOutput>

  HAL_Delay(300);
 8000954:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000958:	f000 fb16 	bl	8000f88 <HAL_Delay>

  setPCAOutput(13, !false);
 800095c:	2101      	movs	r1, #1
 800095e:	200d      	movs	r0, #13
 8000960:	f7ff fbf4 	bl	800014c <setPCAOutput>
  setPCAOutput(14, !false);
 8000964:	2101      	movs	r1, #1
 8000966:	200e      	movs	r0, #14
 8000968:	f7ff fbf0 	bl	800014c <setPCAOutput>
  setPCAOutput(9, !false);
 800096c:	2101      	movs	r1, #1
 800096e:	2009      	movs	r0, #9
 8000970:	f7ff fbec 	bl	800014c <setPCAOutput>
  setPCAOutput(10, !false);
 8000974:	2101      	movs	r1, #1
 8000976:	200a      	movs	r0, #10
 8000978:	f7ff fbe8 	bl	800014c <setPCAOutput>
  setPCAOutput(5, !false);
 800097c:	2101      	movs	r1, #1
 800097e:	2005      	movs	r0, #5
 8000980:	f7ff fbe4 	bl	800014c <setPCAOutput>
  setPCAOutput(6, !false);
 8000984:	2101      	movs	r1, #1
 8000986:	2006      	movs	r0, #6
 8000988:	f7ff fbe0 	bl	800014c <setPCAOutput>
  setPCAOutput(1, !false);
 800098c:	2101      	movs	r1, #1
 800098e:	2001      	movs	r0, #1
 8000990:	f7ff fbdc 	bl	800014c <setPCAOutput>
  setPCAOutput(2, !false);
 8000994:	2101      	movs	r1, #1
 8000996:	2002      	movs	r0, #2
 8000998:	f7ff fbd8 	bl	800014c <setPCAOutput>
}
 800099c:	bf00      	nop
 800099e:	bd80      	pop	{r7, pc}
 80009a0:	40010c00 	.word	0x40010c00

080009a4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80009a4:	b580      	push	{r7, lr}
 80009a6:	b08a      	sub	sp, #40	@ 0x28
 80009a8:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80009aa:	f000 fa8b 	bl	8000ec4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80009ae:	f000 f859 	bl	8000a64 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80009b2:	f000 f8f3 	bl	8000b9c <MX_GPIO_Init>
  MX_I2C2_Init();
 80009b6:	f000 f891 	bl	8000adc <MX_I2C2_Init>
  MX_SPI2_Init();
 80009ba:	f000 f8bd 	bl	8000b38 <MX_SPI2_Init>
  /* USER CODE BEGIN 2 */

  // write to mode register 1 (needed to turn off the PWM "sleep")
  uint8_t buf[2];
  buf[0] = 0x00;
 80009be:	2300      	movs	r3, #0
 80009c0:	713b      	strb	r3, [r7, #4]
  buf[1] = 0b00100001;
 80009c2:	2321      	movs	r3, #33	@ 0x21
 80009c4:	717b      	strb	r3, [r7, #5]
  HAL_I2C_Master_Transmit(&hi2c2, PCA9685_ADDR, buf, 2, HAL_MAX_DELAY);
 80009c6:	1d3a      	adds	r2, r7, #4
 80009c8:	f04f 33ff 	mov.w	r3, #4294967295
 80009cc:	9300      	str	r3, [sp, #0]
 80009ce:	2302      	movs	r3, #2
 80009d0:	21e0      	movs	r1, #224	@ 0xe0
 80009d2:	4823      	ldr	r0, [pc, #140]	@ (8000a60 <main+0xbc>)
 80009d4:	f000 fec0 	bl	8001758 <HAL_I2C_Master_Transmit>

    /* USER CODE BEGIN 3 */
    // wait until SPI data is received
    // drive LEDs with helper function
//    driveLEDs(rawState);
    for (int i = 0; i < 5; i++) {
 80009d8:	2300      	movs	r3, #0
 80009da:	61fb      	str	r3, [r7, #28]
 80009dc:	e004      	b.n	80009e8 <main+0x44>
      testLEDs();
 80009de:	f7ff fbeb 	bl	80001b8 <testLEDs>
    for (int i = 0; i < 5; i++) {
 80009e2:	69fb      	ldr	r3, [r7, #28]
 80009e4:	3301      	adds	r3, #1
 80009e6:	61fb      	str	r3, [r7, #28]
 80009e8:	69fb      	ldr	r3, [r7, #28]
 80009ea:	2b04      	cmp	r3, #4
 80009ec:	ddf7      	ble.n	80009de <main+0x3a>
    }

    for (int i = 0; i < 5; i++) {
 80009ee:	2300      	movs	r3, #0
 80009f0:	61bb      	str	r3, [r7, #24]
 80009f2:	e004      	b.n	80009fe <main+0x5a>
      sideAnimDONTUSE();
 80009f4:	f7ff fc74 	bl	80002e0 <sideAnimDONTUSE>
    for (int i = 0; i < 5; i++) {
 80009f8:	69bb      	ldr	r3, [r7, #24]
 80009fa:	3301      	adds	r3, #1
 80009fc:	61bb      	str	r3, [r7, #24]
 80009fe:	69bb      	ldr	r3, [r7, #24]
 8000a00:	2b04      	cmp	r3, #4
 8000a02:	ddf7      	ble.n	80009f4 <main+0x50>
    }

    for (int i = 0; i < 5; i++) {
 8000a04:	2300      	movs	r3, #0
 8000a06:	617b      	str	r3, [r7, #20]
 8000a08:	e004      	b.n	8000a14 <main+0x70>
      spinningColumn();
 8000a0a:	f7ff fcdf 	bl	80003cc <spinningColumn>
    for (int i = 0; i < 5; i++) {
 8000a0e:	697b      	ldr	r3, [r7, #20]
 8000a10:	3301      	adds	r3, #1
 8000a12:	617b      	str	r3, [r7, #20]
 8000a14:	697b      	ldr	r3, [r7, #20]
 8000a16:	2b04      	cmp	r3, #4
 8000a18:	ddf7      	ble.n	8000a0a <main+0x66>
    }

    for (int i = 0; i < 5; i++) {
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	613b      	str	r3, [r7, #16]
 8000a1e:	e004      	b.n	8000a2a <main+0x86>
      checkerboard();
 8000a20:	f7ff fd18 	bl	8000454 <checkerboard>
    for (int i = 0; i < 5; i++) {
 8000a24:	693b      	ldr	r3, [r7, #16]
 8000a26:	3301      	adds	r3, #1
 8000a28:	613b      	str	r3, [r7, #16]
 8000a2a:	693b      	ldr	r3, [r7, #16]
 8000a2c:	2b04      	cmp	r3, #4
 8000a2e:	ddf7      	ble.n	8000a20 <main+0x7c>
    }

    for (int i = 0; i < 5; i++) {
 8000a30:	2300      	movs	r3, #0
 8000a32:	60fb      	str	r3, [r7, #12]
 8000a34:	e004      	b.n	8000a40 <main+0x9c>
      corners();
 8000a36:	f7ff fdb3 	bl	80005a0 <corners>
    for (int i = 0; i < 5; i++) {
 8000a3a:	68fb      	ldr	r3, [r7, #12]
 8000a3c:	3301      	adds	r3, #1
 8000a3e:	60fb      	str	r3, [r7, #12]
 8000a40:	68fb      	ldr	r3, [r7, #12]
 8000a42:	2b04      	cmp	r3, #4
 8000a44:	ddf7      	ble.n	8000a36 <main+0x92>
    }

    for (int i = 0; i < 5; i++) {
 8000a46:	2300      	movs	r3, #0
 8000a48:	60bb      	str	r3, [r7, #8]
 8000a4a:	e004      	b.n	8000a56 <main+0xb2>
      tunneling();
 8000a4c:	f7ff fe3e 	bl	80006cc <tunneling>
    for (int i = 0; i < 5; i++) {
 8000a50:	68bb      	ldr	r3, [r7, #8]
 8000a52:	3301      	adds	r3, #1
 8000a54:	60bb      	str	r3, [r7, #8]
 8000a56:	68bb      	ldr	r3, [r7, #8]
 8000a58:	2b04      	cmp	r3, #4
 8000a5a:	ddf7      	ble.n	8000a4c <main+0xa8>
    for (int i = 0; i < 5; i++) {
 8000a5c:	e7bc      	b.n	80009d8 <main+0x34>
 8000a5e:	bf00      	nop
 8000a60:	20000028 	.word	0x20000028

08000a64 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a64:	b580      	push	{r7, lr}
 8000a66:	b090      	sub	sp, #64	@ 0x40
 8000a68:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a6a:	f107 0318 	add.w	r3, r7, #24
 8000a6e:	2228      	movs	r2, #40	@ 0x28
 8000a70:	2100      	movs	r1, #0
 8000a72:	4618      	mov	r0, r3
 8000a74:	f001 fe48 	bl	8002708 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a78:	1d3b      	adds	r3, r7, #4
 8000a7a:	2200      	movs	r2, #0
 8000a7c:	601a      	str	r2, [r3, #0]
 8000a7e:	605a      	str	r2, [r3, #4]
 8000a80:	609a      	str	r2, [r3, #8]
 8000a82:	60da      	str	r2, [r3, #12]
 8000a84:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000a86:	2302      	movs	r3, #2
 8000a88:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000a8a:	2301      	movs	r3, #1
 8000a8c:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000a8e:	2310      	movs	r3, #16
 8000a90:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000a92:	2300      	movs	r3, #0
 8000a94:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a96:	f107 0318 	add.w	r3, r7, #24
 8000a9a:	4618      	mov	r0, r3
 8000a9c:	f001 f9b4 	bl	8001e08 <HAL_RCC_OscConfig>
 8000aa0:	4603      	mov	r3, r0
 8000aa2:	2b00      	cmp	r3, #0
 8000aa4:	d001      	beq.n	8000aaa <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000aa6:	f000 f8fd 	bl	8000ca4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000aaa:	230f      	movs	r3, #15
 8000aac:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000aae:	2300      	movs	r3, #0
 8000ab0:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ab2:	2300      	movs	r3, #0
 8000ab4:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000ab6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000aba:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000abc:	2300      	movs	r3, #0
 8000abe:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000ac0:	1d3b      	adds	r3, r7, #4
 8000ac2:	2100      	movs	r1, #0
 8000ac4:	4618      	mov	r0, r3
 8000ac6:	f001 fc21 	bl	800230c <HAL_RCC_ClockConfig>
 8000aca:	4603      	mov	r3, r0
 8000acc:	2b00      	cmp	r3, #0
 8000ace:	d001      	beq.n	8000ad4 <SystemClock_Config+0x70>
  {
    Error_Handler();
 8000ad0:	f000 f8e8 	bl	8000ca4 <Error_Handler>
  }
}
 8000ad4:	bf00      	nop
 8000ad6:	3740      	adds	r7, #64	@ 0x40
 8000ad8:	46bd      	mov	sp, r7
 8000ada:	bd80      	pop	{r7, pc}

08000adc <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8000adc:	b580      	push	{r7, lr}
 8000ade:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8000ae0:	4b12      	ldr	r3, [pc, #72]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000ae2:	4a13      	ldr	r2, [pc, #76]	@ (8000b30 <MX_I2C2_Init+0x54>)
 8000ae4:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 400000;
 8000ae6:	4b11      	ldr	r3, [pc, #68]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000ae8:	4a12      	ldr	r2, [pc, #72]	@ (8000b34 <MX_I2C2_Init+0x58>)
 8000aea:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000aec:	4b0f      	ldr	r3, [pc, #60]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000aee:	2200      	movs	r2, #0
 8000af0:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 8000af2:	4b0e      	ldr	r3, [pc, #56]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000af4:	2200      	movs	r2, #0
 8000af6:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000af8:	4b0c      	ldr	r3, [pc, #48]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000afa:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000afe:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b00:	4b0a      	ldr	r3, [pc, #40]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8000b06:	4b09      	ldr	r3, [pc, #36]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000b08:	2200      	movs	r2, #0
 8000b0a:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b0c:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000b0e:	2200      	movs	r2, #0
 8000b10:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b12:	4b06      	ldr	r3, [pc, #24]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000b14:	2200      	movs	r2, #0
 8000b16:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000b18:	4804      	ldr	r0, [pc, #16]	@ (8000b2c <MX_I2C2_Init+0x50>)
 8000b1a:	f000 fcd9 	bl	80014d0 <HAL_I2C_Init>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d001      	beq.n	8000b28 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8000b24:	f000 f8be 	bl	8000ca4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000b28:	bf00      	nop
 8000b2a:	bd80      	pop	{r7, pc}
 8000b2c:	20000028 	.word	0x20000028
 8000b30:	40005800 	.word	0x40005800
 8000b34:	00061a80 	.word	0x00061a80

08000b38 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000b3c:	4b15      	ldr	r3, [pc, #84]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b3e:	4a16      	ldr	r2, [pc, #88]	@ (8000b98 <MX_SPI2_Init+0x60>)
 8000b40:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_SLAVE;
 8000b42:	4b14      	ldr	r3, [pc, #80]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 8000b48:	4b12      	ldr	r3, [pc, #72]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b4a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000b4e:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8000b50:	4b10      	ldr	r3, [pc, #64]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b52:	2200      	movs	r2, #0
 8000b54:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000b56:	4b0f      	ldr	r3, [pc, #60]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b58:	2200      	movs	r2, #0
 8000b5a:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000b5c:	4b0d      	ldr	r3, [pc, #52]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b5e:	2200      	movs	r2, #0
 8000b60:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_HARD_INPUT;
 8000b62:	4b0c      	ldr	r3, [pc, #48]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b64:	2200      	movs	r2, #0
 8000b66:	619a      	str	r2, [r3, #24]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000b68:	4b0a      	ldr	r3, [pc, #40]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b6a:	2200      	movs	r2, #0
 8000b6c:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000b6e:	4b09      	ldr	r3, [pc, #36]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b70:	2200      	movs	r2, #0
 8000b72:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000b74:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b76:	2200      	movs	r2, #0
 8000b78:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 8000b7a:	4b06      	ldr	r3, [pc, #24]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b7c:	220a      	movs	r2, #10
 8000b7e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8000b80:	4804      	ldr	r0, [pc, #16]	@ (8000b94 <MX_SPI2_Init+0x5c>)
 8000b82:	f001 fd3d 	bl	8002600 <HAL_SPI_Init>
 8000b86:	4603      	mov	r3, r0
 8000b88:	2b00      	cmp	r3, #0
 8000b8a:	d001      	beq.n	8000b90 <MX_SPI2_Init+0x58>
  {
    Error_Handler();
 8000b8c:	f000 f88a 	bl	8000ca4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8000b90:	bf00      	nop
 8000b92:	bd80      	pop	{r7, pc}
 8000b94:	2000007c 	.word	0x2000007c
 8000b98:	40003800 	.word	0x40003800

08000b9c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	b088      	sub	sp, #32
 8000ba0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ba2:	f107 0310 	add.w	r3, r7, #16
 8000ba6:	2200      	movs	r2, #0
 8000ba8:	601a      	str	r2, [r3, #0]
 8000baa:	605a      	str	r2, [r3, #4]
 8000bac:	609a      	str	r2, [r3, #8]
 8000bae:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000bb0:	4b38      	ldr	r3, [pc, #224]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bb2:	699b      	ldr	r3, [r3, #24]
 8000bb4:	4a37      	ldr	r2, [pc, #220]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bb6:	f043 0310 	orr.w	r3, r3, #16
 8000bba:	6193      	str	r3, [r2, #24]
 8000bbc:	4b35      	ldr	r3, [pc, #212]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bbe:	699b      	ldr	r3, [r3, #24]
 8000bc0:	f003 0310 	and.w	r3, r3, #16
 8000bc4:	60fb      	str	r3, [r7, #12]
 8000bc6:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bc8:	4b32      	ldr	r3, [pc, #200]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bca:	699b      	ldr	r3, [r3, #24]
 8000bcc:	4a31      	ldr	r2, [pc, #196]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bce:	f043 0320 	orr.w	r3, r3, #32
 8000bd2:	6193      	str	r3, [r2, #24]
 8000bd4:	4b2f      	ldr	r3, [pc, #188]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bd6:	699b      	ldr	r3, [r3, #24]
 8000bd8:	f003 0320 	and.w	r3, r3, #32
 8000bdc:	60bb      	str	r3, [r7, #8]
 8000bde:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000be0:	4b2c      	ldr	r3, [pc, #176]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000be2:	699b      	ldr	r3, [r3, #24]
 8000be4:	4a2b      	ldr	r2, [pc, #172]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000be6:	f043 0304 	orr.w	r3, r3, #4
 8000bea:	6193      	str	r3, [r2, #24]
 8000bec:	4b29      	ldr	r3, [pc, #164]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bee:	699b      	ldr	r3, [r3, #24]
 8000bf0:	f003 0304 	and.w	r3, r3, #4
 8000bf4:	607b      	str	r3, [r7, #4]
 8000bf6:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bf8:	4b26      	ldr	r3, [pc, #152]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bfa:	699b      	ldr	r3, [r3, #24]
 8000bfc:	4a25      	ldr	r2, [pc, #148]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000bfe:	f043 0308 	orr.w	r3, r3, #8
 8000c02:	6193      	str	r3, [r2, #24]
 8000c04:	4b23      	ldr	r3, [pc, #140]	@ (8000c94 <MX_GPIO_Init+0xf8>)
 8000c06:	699b      	ldr	r3, [r3, #24]
 8000c08:	f003 0308 	and.w	r3, r3, #8
 8000c0c:	603b      	str	r3, [r7, #0]
 8000c0e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000c10:	2200      	movs	r2, #0
 8000c12:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000c16:	4820      	ldr	r0, [pc, #128]	@ (8000c98 <MX_GPIO_Init+0xfc>)
 8000c18:	f000 fc42 	bl	80014a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, CORNER_LED_0_Pin|CORNER_LED_1_Pin|CORNER_LED_2_Pin|CORNER_LED_3_Pin
 8000c1c:	2200      	movs	r2, #0
 8000c1e:	21ff      	movs	r1, #255	@ 0xff
 8000c20:	481e      	ldr	r0, [pc, #120]	@ (8000c9c <MX_GPIO_Init+0x100>)
 8000c22:	f000 fc3d 	bl	80014a0 <HAL_GPIO_WritePin>
                          |CORNER_LED_4_Pin|CORNER_LED_5_Pin|CORNER_LED_6_Pin|CORNER_LED_7_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, TRANSISTOR_0_Pin|TRANSISTOR_1_Pin|TRANSISTOR_2_Pin|TRANSISTOR_3_Pin
 8000c26:	2200      	movs	r2, #0
 8000c28:	f44f 717c 	mov.w	r1, #1008	@ 0x3f0
 8000c2c:	481c      	ldr	r0, [pc, #112]	@ (8000ca0 <MX_GPIO_Init+0x104>)
 8000c2e:	f000 fc37 	bl	80014a0 <HAL_GPIO_WritePin>
                          |TRANSISTOR_4_Pin|TRANSISTOR_5_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000c32:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000c36:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c38:	2301      	movs	r3, #1
 8000c3a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c40:	2302      	movs	r3, #2
 8000c42:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c44:	f107 0310 	add.w	r3, r7, #16
 8000c48:	4619      	mov	r1, r3
 8000c4a:	4813      	ldr	r0, [pc, #76]	@ (8000c98 <MX_GPIO_Init+0xfc>)
 8000c4c:	f000 faa4 	bl	8001198 <HAL_GPIO_Init>

  /*Configure GPIO pins : CORNER_LED_0_Pin CORNER_LED_1_Pin CORNER_LED_2_Pin CORNER_LED_3_Pin
                           CORNER_LED_4_Pin CORNER_LED_5_Pin CORNER_LED_6_Pin CORNER_LED_7_Pin */
  GPIO_InitStruct.Pin = CORNER_LED_0_Pin|CORNER_LED_1_Pin|CORNER_LED_2_Pin|CORNER_LED_3_Pin
 8000c50:	23ff      	movs	r3, #255	@ 0xff
 8000c52:	613b      	str	r3, [r7, #16]
                          |CORNER_LED_4_Pin|CORNER_LED_5_Pin|CORNER_LED_6_Pin|CORNER_LED_7_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c54:	2301      	movs	r3, #1
 8000c56:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c58:	2300      	movs	r3, #0
 8000c5a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c5c:	2302      	movs	r3, #2
 8000c5e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c60:	f107 0310 	add.w	r3, r7, #16
 8000c64:	4619      	mov	r1, r3
 8000c66:	480d      	ldr	r0, [pc, #52]	@ (8000c9c <MX_GPIO_Init+0x100>)
 8000c68:	f000 fa96 	bl	8001198 <HAL_GPIO_Init>

  /*Configure GPIO pins : TRANSISTOR_0_Pin TRANSISTOR_1_Pin TRANSISTOR_2_Pin TRANSISTOR_3_Pin
                           TRANSISTOR_4_Pin TRANSISTOR_5_Pin */
  GPIO_InitStruct.Pin = TRANSISTOR_0_Pin|TRANSISTOR_1_Pin|TRANSISTOR_2_Pin|TRANSISTOR_3_Pin
 8000c6c:	f44f 737c 	mov.w	r3, #1008	@ 0x3f0
 8000c70:	613b      	str	r3, [r7, #16]
                          |TRANSISTOR_4_Pin|TRANSISTOR_5_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c72:	2301      	movs	r3, #1
 8000c74:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c76:	2300      	movs	r3, #0
 8000c78:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c7a:	2302      	movs	r3, #2
 8000c7c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c7e:	f107 0310 	add.w	r3, r7, #16
 8000c82:	4619      	mov	r1, r3
 8000c84:	4806      	ldr	r0, [pc, #24]	@ (8000ca0 <MX_GPIO_Init+0x104>)
 8000c86:	f000 fa87 	bl	8001198 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000c8a:	bf00      	nop
 8000c8c:	3720      	adds	r7, #32
 8000c8e:	46bd      	mov	sp, r7
 8000c90:	bd80      	pop	{r7, pc}
 8000c92:	bf00      	nop
 8000c94:	40021000 	.word	0x40021000
 8000c98:	40011000 	.word	0x40011000
 8000c9c:	40010800 	.word	0x40010800
 8000ca0:	40010c00 	.word	0x40010c00

08000ca4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000ca4:	b480      	push	{r7}
 8000ca6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000ca8:	b672      	cpsid	i
}
 8000caa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000cac:	bf00      	nop
 8000cae:	e7fd      	b.n	8000cac <Error_Handler+0x8>

08000cb0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000cb0:	b480      	push	{r7}
 8000cb2:	b085      	sub	sp, #20
 8000cb4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000cb6:	4b15      	ldr	r3, [pc, #84]	@ (8000d0c <HAL_MspInit+0x5c>)
 8000cb8:	699b      	ldr	r3, [r3, #24]
 8000cba:	4a14      	ldr	r2, [pc, #80]	@ (8000d0c <HAL_MspInit+0x5c>)
 8000cbc:	f043 0301 	orr.w	r3, r3, #1
 8000cc0:	6193      	str	r3, [r2, #24]
 8000cc2:	4b12      	ldr	r3, [pc, #72]	@ (8000d0c <HAL_MspInit+0x5c>)
 8000cc4:	699b      	ldr	r3, [r3, #24]
 8000cc6:	f003 0301 	and.w	r3, r3, #1
 8000cca:	60bb      	str	r3, [r7, #8]
 8000ccc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000cce:	4b0f      	ldr	r3, [pc, #60]	@ (8000d0c <HAL_MspInit+0x5c>)
 8000cd0:	69db      	ldr	r3, [r3, #28]
 8000cd2:	4a0e      	ldr	r2, [pc, #56]	@ (8000d0c <HAL_MspInit+0x5c>)
 8000cd4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000cd8:	61d3      	str	r3, [r2, #28]
 8000cda:	4b0c      	ldr	r3, [pc, #48]	@ (8000d0c <HAL_MspInit+0x5c>)
 8000cdc:	69db      	ldr	r3, [r3, #28]
 8000cde:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ce2:	607b      	str	r3, [r7, #4]
 8000ce4:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000ce6:	4b0a      	ldr	r3, [pc, #40]	@ (8000d10 <HAL_MspInit+0x60>)
 8000ce8:	685b      	ldr	r3, [r3, #4]
 8000cea:	60fb      	str	r3, [r7, #12]
 8000cec:	68fb      	ldr	r3, [r7, #12]
 8000cee:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000cf2:	60fb      	str	r3, [r7, #12]
 8000cf4:	68fb      	ldr	r3, [r7, #12]
 8000cf6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000cfa:	60fb      	str	r3, [r7, #12]
 8000cfc:	4a04      	ldr	r2, [pc, #16]	@ (8000d10 <HAL_MspInit+0x60>)
 8000cfe:	68fb      	ldr	r3, [r7, #12]
 8000d00:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d02:	bf00      	nop
 8000d04:	3714      	adds	r7, #20
 8000d06:	46bd      	mov	sp, r7
 8000d08:	bc80      	pop	{r7}
 8000d0a:	4770      	bx	lr
 8000d0c:	40021000 	.word	0x40021000
 8000d10:	40010000 	.word	0x40010000

08000d14 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000d14:	b580      	push	{r7, lr}
 8000d16:	b088      	sub	sp, #32
 8000d18:	af00      	add	r7, sp, #0
 8000d1a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d1c:	f107 0310 	add.w	r3, r7, #16
 8000d20:	2200      	movs	r2, #0
 8000d22:	601a      	str	r2, [r3, #0]
 8000d24:	605a      	str	r2, [r3, #4]
 8000d26:	609a      	str	r2, [r3, #8]
 8000d28:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C2)
 8000d2a:	687b      	ldr	r3, [r7, #4]
 8000d2c:	681b      	ldr	r3, [r3, #0]
 8000d2e:	4a16      	ldr	r2, [pc, #88]	@ (8000d88 <HAL_I2C_MspInit+0x74>)
 8000d30:	4293      	cmp	r3, r2
 8000d32:	d124      	bne.n	8000d7e <HAL_I2C_MspInit+0x6a>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d34:	4b15      	ldr	r3, [pc, #84]	@ (8000d8c <HAL_I2C_MspInit+0x78>)
 8000d36:	699b      	ldr	r3, [r3, #24]
 8000d38:	4a14      	ldr	r2, [pc, #80]	@ (8000d8c <HAL_I2C_MspInit+0x78>)
 8000d3a:	f043 0308 	orr.w	r3, r3, #8
 8000d3e:	6193      	str	r3, [r2, #24]
 8000d40:	4b12      	ldr	r3, [pc, #72]	@ (8000d8c <HAL_I2C_MspInit+0x78>)
 8000d42:	699b      	ldr	r3, [r3, #24]
 8000d44:	f003 0308 	and.w	r3, r3, #8
 8000d48:	60fb      	str	r3, [r7, #12]
 8000d4a:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8000d4c:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8000d50:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d52:	2312      	movs	r3, #18
 8000d54:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000d56:	2303      	movs	r3, #3
 8000d58:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d5a:	f107 0310 	add.w	r3, r7, #16
 8000d5e:	4619      	mov	r1, r3
 8000d60:	480b      	ldr	r0, [pc, #44]	@ (8000d90 <HAL_I2C_MspInit+0x7c>)
 8000d62:	f000 fa19 	bl	8001198 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000d66:	4b09      	ldr	r3, [pc, #36]	@ (8000d8c <HAL_I2C_MspInit+0x78>)
 8000d68:	69db      	ldr	r3, [r3, #28]
 8000d6a:	4a08      	ldr	r2, [pc, #32]	@ (8000d8c <HAL_I2C_MspInit+0x78>)
 8000d6c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000d70:	61d3      	str	r3, [r2, #28]
 8000d72:	4b06      	ldr	r3, [pc, #24]	@ (8000d8c <HAL_I2C_MspInit+0x78>)
 8000d74:	69db      	ldr	r3, [r3, #28]
 8000d76:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000d7a:	60bb      	str	r3, [r7, #8]
 8000d7c:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8000d7e:	bf00      	nop
 8000d80:	3720      	adds	r7, #32
 8000d82:	46bd      	mov	sp, r7
 8000d84:	bd80      	pop	{r7, pc}
 8000d86:	bf00      	nop
 8000d88:	40005800 	.word	0x40005800
 8000d8c:	40021000 	.word	0x40021000
 8000d90:	40010c00 	.word	0x40010c00

08000d94 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	b088      	sub	sp, #32
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d9c:	f107 0310 	add.w	r3, r7, #16
 8000da0:	2200      	movs	r2, #0
 8000da2:	601a      	str	r2, [r3, #0]
 8000da4:	605a      	str	r2, [r3, #4]
 8000da6:	609a      	str	r2, [r3, #8]
 8000da8:	60da      	str	r2, [r3, #12]
  if(hspi->Instance==SPI2)
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	4a16      	ldr	r2, [pc, #88]	@ (8000e08 <HAL_SPI_MspInit+0x74>)
 8000db0:	4293      	cmp	r3, r2
 8000db2:	d124      	bne.n	8000dfe <HAL_SPI_MspInit+0x6a>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8000db4:	4b15      	ldr	r3, [pc, #84]	@ (8000e0c <HAL_SPI_MspInit+0x78>)
 8000db6:	69db      	ldr	r3, [r3, #28]
 8000db8:	4a14      	ldr	r2, [pc, #80]	@ (8000e0c <HAL_SPI_MspInit+0x78>)
 8000dba:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000dbe:	61d3      	str	r3, [r2, #28]
 8000dc0:	4b12      	ldr	r3, [pc, #72]	@ (8000e0c <HAL_SPI_MspInit+0x78>)
 8000dc2:	69db      	ldr	r3, [r3, #28]
 8000dc4:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000dc8:	60fb      	str	r3, [r7, #12]
 8000dca:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000dcc:	4b0f      	ldr	r3, [pc, #60]	@ (8000e0c <HAL_SPI_MspInit+0x78>)
 8000dce:	699b      	ldr	r3, [r3, #24]
 8000dd0:	4a0e      	ldr	r2, [pc, #56]	@ (8000e0c <HAL_SPI_MspInit+0x78>)
 8000dd2:	f043 0308 	orr.w	r3, r3, #8
 8000dd6:	6193      	str	r3, [r2, #24]
 8000dd8:	4b0c      	ldr	r3, [pc, #48]	@ (8000e0c <HAL_SPI_MspInit+0x78>)
 8000dda:	699b      	ldr	r3, [r3, #24]
 8000ddc:	f003 0308 	and.w	r3, r3, #8
 8000de0:	60bb      	str	r3, [r7, #8]
 8000de2:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PB12     ------> SPI2_NSS
    PB13     ------> SPI2_SCK
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_15;
 8000de4:	f44f 4330 	mov.w	r3, #45056	@ 0xb000
 8000de8:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000dea:	2300      	movs	r3, #0
 8000dec:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dee:	2300      	movs	r3, #0
 8000df0:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000df2:	f107 0310 	add.w	r3, r7, #16
 8000df6:	4619      	mov	r1, r3
 8000df8:	4805      	ldr	r0, [pc, #20]	@ (8000e10 <HAL_SPI_MspInit+0x7c>)
 8000dfa:	f000 f9cd 	bl	8001198 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8000dfe:	bf00      	nop
 8000e00:	3720      	adds	r7, #32
 8000e02:	46bd      	mov	sp, r7
 8000e04:	bd80      	pop	{r7, pc}
 8000e06:	bf00      	nop
 8000e08:	40003800 	.word	0x40003800
 8000e0c:	40021000 	.word	0x40021000
 8000e10:	40010c00 	.word	0x40010c00

08000e14 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000e14:	b480      	push	{r7}
 8000e16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000e18:	bf00      	nop
 8000e1a:	e7fd      	b.n	8000e18 <NMI_Handler+0x4>

08000e1c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000e1c:	b480      	push	{r7}
 8000e1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e20:	bf00      	nop
 8000e22:	e7fd      	b.n	8000e20 <HardFault_Handler+0x4>

08000e24 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000e24:	b480      	push	{r7}
 8000e26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e28:	bf00      	nop
 8000e2a:	e7fd      	b.n	8000e28 <MemManage_Handler+0x4>

08000e2c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000e2c:	b480      	push	{r7}
 8000e2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e30:	bf00      	nop
 8000e32:	e7fd      	b.n	8000e30 <BusFault_Handler+0x4>

08000e34 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000e34:	b480      	push	{r7}
 8000e36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e38:	bf00      	nop
 8000e3a:	e7fd      	b.n	8000e38 <UsageFault_Handler+0x4>

08000e3c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000e3c:	b480      	push	{r7}
 8000e3e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000e40:	bf00      	nop
 8000e42:	46bd      	mov	sp, r7
 8000e44:	bc80      	pop	{r7}
 8000e46:	4770      	bx	lr

08000e48 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000e48:	b480      	push	{r7}
 8000e4a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e4c:	bf00      	nop
 8000e4e:	46bd      	mov	sp, r7
 8000e50:	bc80      	pop	{r7}
 8000e52:	4770      	bx	lr

08000e54 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000e54:	b480      	push	{r7}
 8000e56:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000e58:	bf00      	nop
 8000e5a:	46bd      	mov	sp, r7
 8000e5c:	bc80      	pop	{r7}
 8000e5e:	4770      	bx	lr

08000e60 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000e60:	b580      	push	{r7, lr}
 8000e62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000e64:	f000 f874 	bl	8000f50 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000e68:	bf00      	nop
 8000e6a:	bd80      	pop	{r7, pc}

08000e6c <SystemInit>:
 8000e6c:	b480      	push	{r7}
 8000e6e:	af00      	add	r7, sp, #0
 8000e70:	bf00      	nop
 8000e72:	46bd      	mov	sp, r7
 8000e74:	bc80      	pop	{r7}
 8000e76:	4770      	bx	lr

08000e78 <Reset_Handler>:
 8000e78:	f7ff fff8 	bl	8000e6c <SystemInit>
 8000e7c:	480b      	ldr	r0, [pc, #44]	@ (8000eac <LoopFillZerobss+0xe>)
 8000e7e:	490c      	ldr	r1, [pc, #48]	@ (8000eb0 <LoopFillZerobss+0x12>)
 8000e80:	4a0c      	ldr	r2, [pc, #48]	@ (8000eb4 <LoopFillZerobss+0x16>)
 8000e82:	2300      	movs	r3, #0
 8000e84:	e002      	b.n	8000e8c <LoopCopyDataInit>

08000e86 <CopyDataInit>:
 8000e86:	58d4      	ldr	r4, [r2, r3]
 8000e88:	50c4      	str	r4, [r0, r3]
 8000e8a:	3304      	adds	r3, #4

08000e8c <LoopCopyDataInit>:
 8000e8c:	18c4      	adds	r4, r0, r3
 8000e8e:	428c      	cmp	r4, r1
 8000e90:	d3f9      	bcc.n	8000e86 <CopyDataInit>
 8000e92:	4a09      	ldr	r2, [pc, #36]	@ (8000eb8 <LoopFillZerobss+0x1a>)
 8000e94:	4c09      	ldr	r4, [pc, #36]	@ (8000ebc <LoopFillZerobss+0x1e>)
 8000e96:	2300      	movs	r3, #0
 8000e98:	e001      	b.n	8000e9e <LoopFillZerobss>

08000e9a <FillZerobss>:
 8000e9a:	6013      	str	r3, [r2, #0]
 8000e9c:	3204      	adds	r2, #4

08000e9e <LoopFillZerobss>:
 8000e9e:	42a2      	cmp	r2, r4
 8000ea0:	d3fb      	bcc.n	8000e9a <FillZerobss>
 8000ea2:	f001 fc39 	bl	8002718 <__libc_init_array>
 8000ea6:	f7ff fd7d 	bl	80009a4 <main>
 8000eaa:	4770      	bx	lr
 8000eac:	20000000 	.word	0x20000000
 8000eb0:	2000000c 	.word	0x2000000c
 8000eb4:	080027b8 	.word	0x080027b8
 8000eb8:	2000000c 	.word	0x2000000c
 8000ebc:	200000d8 	.word	0x200000d8

08000ec0 <ADC1_2_IRQHandler>:
 8000ec0:	e7fe      	b.n	8000ec0 <ADC1_2_IRQHandler>
	...

08000ec4 <HAL_Init>:
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	af00      	add	r7, sp, #0
 8000ec8:	4b08      	ldr	r3, [pc, #32]	@ (8000eec <HAL_Init+0x28>)
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	4a07      	ldr	r2, [pc, #28]	@ (8000eec <HAL_Init+0x28>)
 8000ece:	f043 0310 	orr.w	r3, r3, #16
 8000ed2:	6013      	str	r3, [r2, #0]
 8000ed4:	2003      	movs	r0, #3
 8000ed6:	f000 f92b 	bl	8001130 <HAL_NVIC_SetPriorityGrouping>
 8000eda:	200f      	movs	r0, #15
 8000edc:	f000 f808 	bl	8000ef0 <HAL_InitTick>
 8000ee0:	f7ff fee6 	bl	8000cb0 <HAL_MspInit>
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	4618      	mov	r0, r3
 8000ee8:	bd80      	pop	{r7, pc}
 8000eea:	bf00      	nop
 8000eec:	40022000 	.word	0x40022000

08000ef0 <HAL_InitTick>:
 8000ef0:	b580      	push	{r7, lr}
 8000ef2:	b082      	sub	sp, #8
 8000ef4:	af00      	add	r7, sp, #0
 8000ef6:	6078      	str	r0, [r7, #4]
 8000ef8:	4b12      	ldr	r3, [pc, #72]	@ (8000f44 <HAL_InitTick+0x54>)
 8000efa:	681a      	ldr	r2, [r3, #0]
 8000efc:	4b12      	ldr	r3, [pc, #72]	@ (8000f48 <HAL_InitTick+0x58>)
 8000efe:	781b      	ldrb	r3, [r3, #0]
 8000f00:	4619      	mov	r1, r3
 8000f02:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000f06:	fbb3 f3f1 	udiv	r3, r3, r1
 8000f0a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f0e:	4618      	mov	r0, r3
 8000f10:	f000 f935 	bl	800117e <HAL_SYSTICK_Config>
 8000f14:	4603      	mov	r3, r0
 8000f16:	2b00      	cmp	r3, #0
 8000f18:	d001      	beq.n	8000f1e <HAL_InitTick+0x2e>
 8000f1a:	2301      	movs	r3, #1
 8000f1c:	e00e      	b.n	8000f3c <HAL_InitTick+0x4c>
 8000f1e:	687b      	ldr	r3, [r7, #4]
 8000f20:	2b0f      	cmp	r3, #15
 8000f22:	d80a      	bhi.n	8000f3a <HAL_InitTick+0x4a>
 8000f24:	2200      	movs	r2, #0
 8000f26:	6879      	ldr	r1, [r7, #4]
 8000f28:	f04f 30ff 	mov.w	r0, #4294967295
 8000f2c:	f000 f90b 	bl	8001146 <HAL_NVIC_SetPriority>
 8000f30:	4a06      	ldr	r2, [pc, #24]	@ (8000f4c <HAL_InitTick+0x5c>)
 8000f32:	687b      	ldr	r3, [r7, #4]
 8000f34:	6013      	str	r3, [r2, #0]
 8000f36:	2300      	movs	r3, #0
 8000f38:	e000      	b.n	8000f3c <HAL_InitTick+0x4c>
 8000f3a:	2301      	movs	r3, #1
 8000f3c:	4618      	mov	r0, r3
 8000f3e:	3708      	adds	r7, #8
 8000f40:	46bd      	mov	sp, r7
 8000f42:	bd80      	pop	{r7, pc}
 8000f44:	20000000 	.word	0x20000000
 8000f48:	20000008 	.word	0x20000008
 8000f4c:	20000004 	.word	0x20000004

08000f50 <HAL_IncTick>:
 8000f50:	b480      	push	{r7}
 8000f52:	af00      	add	r7, sp, #0
 8000f54:	4b05      	ldr	r3, [pc, #20]	@ (8000f6c <HAL_IncTick+0x1c>)
 8000f56:	781b      	ldrb	r3, [r3, #0]
 8000f58:	461a      	mov	r2, r3
 8000f5a:	4b05      	ldr	r3, [pc, #20]	@ (8000f70 <HAL_IncTick+0x20>)
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	4413      	add	r3, r2
 8000f60:	4a03      	ldr	r2, [pc, #12]	@ (8000f70 <HAL_IncTick+0x20>)
 8000f62:	6013      	str	r3, [r2, #0]
 8000f64:	bf00      	nop
 8000f66:	46bd      	mov	sp, r7
 8000f68:	bc80      	pop	{r7}
 8000f6a:	4770      	bx	lr
 8000f6c:	20000008 	.word	0x20000008
 8000f70:	200000d4 	.word	0x200000d4

08000f74 <HAL_GetTick>:
 8000f74:	b480      	push	{r7}
 8000f76:	af00      	add	r7, sp, #0
 8000f78:	4b02      	ldr	r3, [pc, #8]	@ (8000f84 <HAL_GetTick+0x10>)
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	46bd      	mov	sp, r7
 8000f80:	bc80      	pop	{r7}
 8000f82:	4770      	bx	lr
 8000f84:	200000d4 	.word	0x200000d4

08000f88 <HAL_Delay>:
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	b084      	sub	sp, #16
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	6078      	str	r0, [r7, #4]
 8000f90:	f7ff fff0 	bl	8000f74 <HAL_GetTick>
 8000f94:	60b8      	str	r0, [r7, #8]
 8000f96:	687b      	ldr	r3, [r7, #4]
 8000f98:	60fb      	str	r3, [r7, #12]
 8000f9a:	68fb      	ldr	r3, [r7, #12]
 8000f9c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000fa0:	d005      	beq.n	8000fae <HAL_Delay+0x26>
 8000fa2:	4b0a      	ldr	r3, [pc, #40]	@ (8000fcc <HAL_Delay+0x44>)
 8000fa4:	781b      	ldrb	r3, [r3, #0]
 8000fa6:	461a      	mov	r2, r3
 8000fa8:	68fb      	ldr	r3, [r7, #12]
 8000faa:	4413      	add	r3, r2
 8000fac:	60fb      	str	r3, [r7, #12]
 8000fae:	bf00      	nop
 8000fb0:	f7ff ffe0 	bl	8000f74 <HAL_GetTick>
 8000fb4:	4602      	mov	r2, r0
 8000fb6:	68bb      	ldr	r3, [r7, #8]
 8000fb8:	1ad3      	subs	r3, r2, r3
 8000fba:	68fa      	ldr	r2, [r7, #12]
 8000fbc:	429a      	cmp	r2, r3
 8000fbe:	d8f7      	bhi.n	8000fb0 <HAL_Delay+0x28>
 8000fc0:	bf00      	nop
 8000fc2:	bf00      	nop
 8000fc4:	3710      	adds	r7, #16
 8000fc6:	46bd      	mov	sp, r7
 8000fc8:	bd80      	pop	{r7, pc}
 8000fca:	bf00      	nop
 8000fcc:	20000008 	.word	0x20000008

08000fd0 <__NVIC_SetPriorityGrouping>:
 8000fd0:	b480      	push	{r7}
 8000fd2:	b085      	sub	sp, #20
 8000fd4:	af00      	add	r7, sp, #0
 8000fd6:	6078      	str	r0, [r7, #4]
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	f003 0307 	and.w	r3, r3, #7
 8000fde:	60fb      	str	r3, [r7, #12]
 8000fe0:	4b0c      	ldr	r3, [pc, #48]	@ (8001014 <__NVIC_SetPriorityGrouping+0x44>)
 8000fe2:	68db      	ldr	r3, [r3, #12]
 8000fe4:	60bb      	str	r3, [r7, #8]
 8000fe6:	68ba      	ldr	r2, [r7, #8]
 8000fe8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000fec:	4013      	ands	r3, r2
 8000fee:	60bb      	str	r3, [r7, #8]
 8000ff0:	68fb      	ldr	r3, [r7, #12]
 8000ff2:	021a      	lsls	r2, r3, #8
 8000ff4:	68bb      	ldr	r3, [r7, #8]
 8000ff6:	4313      	orrs	r3, r2
 8000ff8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000ffc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001000:	60bb      	str	r3, [r7, #8]
 8001002:	4a04      	ldr	r2, [pc, #16]	@ (8001014 <__NVIC_SetPriorityGrouping+0x44>)
 8001004:	68bb      	ldr	r3, [r7, #8]
 8001006:	60d3      	str	r3, [r2, #12]
 8001008:	bf00      	nop
 800100a:	3714      	adds	r7, #20
 800100c:	46bd      	mov	sp, r7
 800100e:	bc80      	pop	{r7}
 8001010:	4770      	bx	lr
 8001012:	bf00      	nop
 8001014:	e000ed00 	.word	0xe000ed00

08001018 <__NVIC_GetPriorityGrouping>:
 8001018:	b480      	push	{r7}
 800101a:	af00      	add	r7, sp, #0
 800101c:	4b04      	ldr	r3, [pc, #16]	@ (8001030 <__NVIC_GetPriorityGrouping+0x18>)
 800101e:	68db      	ldr	r3, [r3, #12]
 8001020:	0a1b      	lsrs	r3, r3, #8
 8001022:	f003 0307 	and.w	r3, r3, #7
 8001026:	4618      	mov	r0, r3
 8001028:	46bd      	mov	sp, r7
 800102a:	bc80      	pop	{r7}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000ed00 	.word	0xe000ed00

08001034 <__NVIC_SetPriority>:
 8001034:	b480      	push	{r7}
 8001036:	b083      	sub	sp, #12
 8001038:	af00      	add	r7, sp, #0
 800103a:	4603      	mov	r3, r0
 800103c:	6039      	str	r1, [r7, #0]
 800103e:	71fb      	strb	r3, [r7, #7]
 8001040:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001044:	2b00      	cmp	r3, #0
 8001046:	db0a      	blt.n	800105e <__NVIC_SetPriority+0x2a>
 8001048:	683b      	ldr	r3, [r7, #0]
 800104a:	b2da      	uxtb	r2, r3
 800104c:	490c      	ldr	r1, [pc, #48]	@ (8001080 <__NVIC_SetPriority+0x4c>)
 800104e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001052:	0112      	lsls	r2, r2, #4
 8001054:	b2d2      	uxtb	r2, r2
 8001056:	440b      	add	r3, r1
 8001058:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800105c:	e00a      	b.n	8001074 <__NVIC_SetPriority+0x40>
 800105e:	683b      	ldr	r3, [r7, #0]
 8001060:	b2da      	uxtb	r2, r3
 8001062:	4908      	ldr	r1, [pc, #32]	@ (8001084 <__NVIC_SetPriority+0x50>)
 8001064:	79fb      	ldrb	r3, [r7, #7]
 8001066:	f003 030f 	and.w	r3, r3, #15
 800106a:	3b04      	subs	r3, #4
 800106c:	0112      	lsls	r2, r2, #4
 800106e:	b2d2      	uxtb	r2, r2
 8001070:	440b      	add	r3, r1
 8001072:	761a      	strb	r2, [r3, #24]
 8001074:	bf00      	nop
 8001076:	370c      	adds	r7, #12
 8001078:	46bd      	mov	sp, r7
 800107a:	bc80      	pop	{r7}
 800107c:	4770      	bx	lr
 800107e:	bf00      	nop
 8001080:	e000e100 	.word	0xe000e100
 8001084:	e000ed00 	.word	0xe000ed00

08001088 <NVIC_EncodePriority>:
 8001088:	b480      	push	{r7}
 800108a:	b089      	sub	sp, #36	@ 0x24
 800108c:	af00      	add	r7, sp, #0
 800108e:	60f8      	str	r0, [r7, #12]
 8001090:	60b9      	str	r1, [r7, #8]
 8001092:	607a      	str	r2, [r7, #4]
 8001094:	68fb      	ldr	r3, [r7, #12]
 8001096:	f003 0307 	and.w	r3, r3, #7
 800109a:	61fb      	str	r3, [r7, #28]
 800109c:	69fb      	ldr	r3, [r7, #28]
 800109e:	f1c3 0307 	rsb	r3, r3, #7
 80010a2:	2b04      	cmp	r3, #4
 80010a4:	bf28      	it	cs
 80010a6:	2304      	movcs	r3, #4
 80010a8:	61bb      	str	r3, [r7, #24]
 80010aa:	69fb      	ldr	r3, [r7, #28]
 80010ac:	3304      	adds	r3, #4
 80010ae:	2b06      	cmp	r3, #6
 80010b0:	d902      	bls.n	80010b8 <NVIC_EncodePriority+0x30>
 80010b2:	69fb      	ldr	r3, [r7, #28]
 80010b4:	3b03      	subs	r3, #3
 80010b6:	e000      	b.n	80010ba <NVIC_EncodePriority+0x32>
 80010b8:	2300      	movs	r3, #0
 80010ba:	617b      	str	r3, [r7, #20]
 80010bc:	f04f 32ff 	mov.w	r2, #4294967295
 80010c0:	69bb      	ldr	r3, [r7, #24]
 80010c2:	fa02 f303 	lsl.w	r3, r2, r3
 80010c6:	43da      	mvns	r2, r3
 80010c8:	68bb      	ldr	r3, [r7, #8]
 80010ca:	401a      	ands	r2, r3
 80010cc:	697b      	ldr	r3, [r7, #20]
 80010ce:	409a      	lsls	r2, r3
 80010d0:	f04f 31ff 	mov.w	r1, #4294967295
 80010d4:	697b      	ldr	r3, [r7, #20]
 80010d6:	fa01 f303 	lsl.w	r3, r1, r3
 80010da:	43d9      	mvns	r1, r3
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	400b      	ands	r3, r1
 80010e0:	4313      	orrs	r3, r2
 80010e2:	4618      	mov	r0, r3
 80010e4:	3724      	adds	r7, #36	@ 0x24
 80010e6:	46bd      	mov	sp, r7
 80010e8:	bc80      	pop	{r7}
 80010ea:	4770      	bx	lr

080010ec <SysTick_Config>:
 80010ec:	b580      	push	{r7, lr}
 80010ee:	b082      	sub	sp, #8
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	6078      	str	r0, [r7, #4]
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	3b01      	subs	r3, #1
 80010f8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80010fc:	d301      	bcc.n	8001102 <SysTick_Config+0x16>
 80010fe:	2301      	movs	r3, #1
 8001100:	e00f      	b.n	8001122 <SysTick_Config+0x36>
 8001102:	4a0a      	ldr	r2, [pc, #40]	@ (800112c <SysTick_Config+0x40>)
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	3b01      	subs	r3, #1
 8001108:	6053      	str	r3, [r2, #4]
 800110a:	210f      	movs	r1, #15
 800110c:	f04f 30ff 	mov.w	r0, #4294967295
 8001110:	f7ff ff90 	bl	8001034 <__NVIC_SetPriority>
 8001114:	4b05      	ldr	r3, [pc, #20]	@ (800112c <SysTick_Config+0x40>)
 8001116:	2200      	movs	r2, #0
 8001118:	609a      	str	r2, [r3, #8]
 800111a:	4b04      	ldr	r3, [pc, #16]	@ (800112c <SysTick_Config+0x40>)
 800111c:	2207      	movs	r2, #7
 800111e:	601a      	str	r2, [r3, #0]
 8001120:	2300      	movs	r3, #0
 8001122:	4618      	mov	r0, r3
 8001124:	3708      	adds	r7, #8
 8001126:	46bd      	mov	sp, r7
 8001128:	bd80      	pop	{r7, pc}
 800112a:	bf00      	nop
 800112c:	e000e010 	.word	0xe000e010

08001130 <HAL_NVIC_SetPriorityGrouping>:
 8001130:	b580      	push	{r7, lr}
 8001132:	b082      	sub	sp, #8
 8001134:	af00      	add	r7, sp, #0
 8001136:	6078      	str	r0, [r7, #4]
 8001138:	6878      	ldr	r0, [r7, #4]
 800113a:	f7ff ff49 	bl	8000fd0 <__NVIC_SetPriorityGrouping>
 800113e:	bf00      	nop
 8001140:	3708      	adds	r7, #8
 8001142:	46bd      	mov	sp, r7
 8001144:	bd80      	pop	{r7, pc}

08001146 <HAL_NVIC_SetPriority>:
 8001146:	b580      	push	{r7, lr}
 8001148:	b086      	sub	sp, #24
 800114a:	af00      	add	r7, sp, #0
 800114c:	4603      	mov	r3, r0
 800114e:	60b9      	str	r1, [r7, #8]
 8001150:	607a      	str	r2, [r7, #4]
 8001152:	73fb      	strb	r3, [r7, #15]
 8001154:	2300      	movs	r3, #0
 8001156:	617b      	str	r3, [r7, #20]
 8001158:	f7ff ff5e 	bl	8001018 <__NVIC_GetPriorityGrouping>
 800115c:	6178      	str	r0, [r7, #20]
 800115e:	687a      	ldr	r2, [r7, #4]
 8001160:	68b9      	ldr	r1, [r7, #8]
 8001162:	6978      	ldr	r0, [r7, #20]
 8001164:	f7ff ff90 	bl	8001088 <NVIC_EncodePriority>
 8001168:	4602      	mov	r2, r0
 800116a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800116e:	4611      	mov	r1, r2
 8001170:	4618      	mov	r0, r3
 8001172:	f7ff ff5f 	bl	8001034 <__NVIC_SetPriority>
 8001176:	bf00      	nop
 8001178:	3718      	adds	r7, #24
 800117a:	46bd      	mov	sp, r7
 800117c:	bd80      	pop	{r7, pc}

0800117e <HAL_SYSTICK_Config>:
 800117e:	b580      	push	{r7, lr}
 8001180:	b082      	sub	sp, #8
 8001182:	af00      	add	r7, sp, #0
 8001184:	6078      	str	r0, [r7, #4]
 8001186:	6878      	ldr	r0, [r7, #4]
 8001188:	f7ff ffb0 	bl	80010ec <SysTick_Config>
 800118c:	4603      	mov	r3, r0
 800118e:	4618      	mov	r0, r3
 8001190:	3708      	adds	r7, #8
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}
	...

08001198 <HAL_GPIO_Init>:
 8001198:	b480      	push	{r7}
 800119a:	b08b      	sub	sp, #44	@ 0x2c
 800119c:	af00      	add	r7, sp, #0
 800119e:	6078      	str	r0, [r7, #4]
 80011a0:	6039      	str	r1, [r7, #0]
 80011a2:	2300      	movs	r3, #0
 80011a4:	627b      	str	r3, [r7, #36]	@ 0x24
 80011a6:	2300      	movs	r3, #0
 80011a8:	623b      	str	r3, [r7, #32]
 80011aa:	e169      	b.n	8001480 <HAL_GPIO_Init+0x2e8>
 80011ac:	2201      	movs	r2, #1
 80011ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80011b0:	fa02 f303 	lsl.w	r3, r2, r3
 80011b4:	61fb      	str	r3, [r7, #28]
 80011b6:	683b      	ldr	r3, [r7, #0]
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	69fa      	ldr	r2, [r7, #28]
 80011bc:	4013      	ands	r3, r2
 80011be:	61bb      	str	r3, [r7, #24]
 80011c0:	69ba      	ldr	r2, [r7, #24]
 80011c2:	69fb      	ldr	r3, [r7, #28]
 80011c4:	429a      	cmp	r2, r3
 80011c6:	f040 8158 	bne.w	800147a <HAL_GPIO_Init+0x2e2>
 80011ca:	683b      	ldr	r3, [r7, #0]
 80011cc:	685b      	ldr	r3, [r3, #4]
 80011ce:	4a9a      	ldr	r2, [pc, #616]	@ (8001438 <HAL_GPIO_Init+0x2a0>)
 80011d0:	4293      	cmp	r3, r2
 80011d2:	d05e      	beq.n	8001292 <HAL_GPIO_Init+0xfa>
 80011d4:	4a98      	ldr	r2, [pc, #608]	@ (8001438 <HAL_GPIO_Init+0x2a0>)
 80011d6:	4293      	cmp	r3, r2
 80011d8:	d875      	bhi.n	80012c6 <HAL_GPIO_Init+0x12e>
 80011da:	4a98      	ldr	r2, [pc, #608]	@ (800143c <HAL_GPIO_Init+0x2a4>)
 80011dc:	4293      	cmp	r3, r2
 80011de:	d058      	beq.n	8001292 <HAL_GPIO_Init+0xfa>
 80011e0:	4a96      	ldr	r2, [pc, #600]	@ (800143c <HAL_GPIO_Init+0x2a4>)
 80011e2:	4293      	cmp	r3, r2
 80011e4:	d86f      	bhi.n	80012c6 <HAL_GPIO_Init+0x12e>
 80011e6:	4a96      	ldr	r2, [pc, #600]	@ (8001440 <HAL_GPIO_Init+0x2a8>)
 80011e8:	4293      	cmp	r3, r2
 80011ea:	d052      	beq.n	8001292 <HAL_GPIO_Init+0xfa>
 80011ec:	4a94      	ldr	r2, [pc, #592]	@ (8001440 <HAL_GPIO_Init+0x2a8>)
 80011ee:	4293      	cmp	r3, r2
 80011f0:	d869      	bhi.n	80012c6 <HAL_GPIO_Init+0x12e>
 80011f2:	4a94      	ldr	r2, [pc, #592]	@ (8001444 <HAL_GPIO_Init+0x2ac>)
 80011f4:	4293      	cmp	r3, r2
 80011f6:	d04c      	beq.n	8001292 <HAL_GPIO_Init+0xfa>
 80011f8:	4a92      	ldr	r2, [pc, #584]	@ (8001444 <HAL_GPIO_Init+0x2ac>)
 80011fa:	4293      	cmp	r3, r2
 80011fc:	d863      	bhi.n	80012c6 <HAL_GPIO_Init+0x12e>
 80011fe:	4a92      	ldr	r2, [pc, #584]	@ (8001448 <HAL_GPIO_Init+0x2b0>)
 8001200:	4293      	cmp	r3, r2
 8001202:	d046      	beq.n	8001292 <HAL_GPIO_Init+0xfa>
 8001204:	4a90      	ldr	r2, [pc, #576]	@ (8001448 <HAL_GPIO_Init+0x2b0>)
 8001206:	4293      	cmp	r3, r2
 8001208:	d85d      	bhi.n	80012c6 <HAL_GPIO_Init+0x12e>
 800120a:	2b12      	cmp	r3, #18
 800120c:	d82a      	bhi.n	8001264 <HAL_GPIO_Init+0xcc>
 800120e:	2b12      	cmp	r3, #18
 8001210:	d859      	bhi.n	80012c6 <HAL_GPIO_Init+0x12e>
 8001212:	a201      	add	r2, pc, #4	@ (adr r2, 8001218 <HAL_GPIO_Init+0x80>)
 8001214:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001218:	08001293 	.word	0x08001293
 800121c:	0800126d 	.word	0x0800126d
 8001220:	0800127f 	.word	0x0800127f
 8001224:	080012c1 	.word	0x080012c1
 8001228:	080012c7 	.word	0x080012c7
 800122c:	080012c7 	.word	0x080012c7
 8001230:	080012c7 	.word	0x080012c7
 8001234:	080012c7 	.word	0x080012c7
 8001238:	080012c7 	.word	0x080012c7
 800123c:	080012c7 	.word	0x080012c7
 8001240:	080012c7 	.word	0x080012c7
 8001244:	080012c7 	.word	0x080012c7
 8001248:	080012c7 	.word	0x080012c7
 800124c:	080012c7 	.word	0x080012c7
 8001250:	080012c7 	.word	0x080012c7
 8001254:	080012c7 	.word	0x080012c7
 8001258:	080012c7 	.word	0x080012c7
 800125c:	08001275 	.word	0x08001275
 8001260:	08001289 	.word	0x08001289
 8001264:	4a79      	ldr	r2, [pc, #484]	@ (800144c <HAL_GPIO_Init+0x2b4>)
 8001266:	4293      	cmp	r3, r2
 8001268:	d013      	beq.n	8001292 <HAL_GPIO_Init+0xfa>
 800126a:	e02c      	b.n	80012c6 <HAL_GPIO_Init+0x12e>
 800126c:	683b      	ldr	r3, [r7, #0]
 800126e:	68db      	ldr	r3, [r3, #12]
 8001270:	623b      	str	r3, [r7, #32]
 8001272:	e029      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 8001274:	683b      	ldr	r3, [r7, #0]
 8001276:	68db      	ldr	r3, [r3, #12]
 8001278:	3304      	adds	r3, #4
 800127a:	623b      	str	r3, [r7, #32]
 800127c:	e024      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 800127e:	683b      	ldr	r3, [r7, #0]
 8001280:	68db      	ldr	r3, [r3, #12]
 8001282:	3308      	adds	r3, #8
 8001284:	623b      	str	r3, [r7, #32]
 8001286:	e01f      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 8001288:	683b      	ldr	r3, [r7, #0]
 800128a:	68db      	ldr	r3, [r3, #12]
 800128c:	330c      	adds	r3, #12
 800128e:	623b      	str	r3, [r7, #32]
 8001290:	e01a      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 8001292:	683b      	ldr	r3, [r7, #0]
 8001294:	689b      	ldr	r3, [r3, #8]
 8001296:	2b00      	cmp	r3, #0
 8001298:	d102      	bne.n	80012a0 <HAL_GPIO_Init+0x108>
 800129a:	2304      	movs	r3, #4
 800129c:	623b      	str	r3, [r7, #32]
 800129e:	e013      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 80012a0:	683b      	ldr	r3, [r7, #0]
 80012a2:	689b      	ldr	r3, [r3, #8]
 80012a4:	2b01      	cmp	r3, #1
 80012a6:	d105      	bne.n	80012b4 <HAL_GPIO_Init+0x11c>
 80012a8:	2308      	movs	r3, #8
 80012aa:	623b      	str	r3, [r7, #32]
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	69fa      	ldr	r2, [r7, #28]
 80012b0:	611a      	str	r2, [r3, #16]
 80012b2:	e009      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 80012b4:	2308      	movs	r3, #8
 80012b6:	623b      	str	r3, [r7, #32]
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	69fa      	ldr	r2, [r7, #28]
 80012bc:	615a      	str	r2, [r3, #20]
 80012be:	e003      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 80012c0:	2300      	movs	r3, #0
 80012c2:	623b      	str	r3, [r7, #32]
 80012c4:	e000      	b.n	80012c8 <HAL_GPIO_Init+0x130>
 80012c6:	bf00      	nop
 80012c8:	69bb      	ldr	r3, [r7, #24]
 80012ca:	2bff      	cmp	r3, #255	@ 0xff
 80012cc:	d801      	bhi.n	80012d2 <HAL_GPIO_Init+0x13a>
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	e001      	b.n	80012d6 <HAL_GPIO_Init+0x13e>
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	3304      	adds	r3, #4
 80012d6:	617b      	str	r3, [r7, #20]
 80012d8:	69bb      	ldr	r3, [r7, #24]
 80012da:	2bff      	cmp	r3, #255	@ 0xff
 80012dc:	d802      	bhi.n	80012e4 <HAL_GPIO_Init+0x14c>
 80012de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80012e0:	009b      	lsls	r3, r3, #2
 80012e2:	e002      	b.n	80012ea <HAL_GPIO_Init+0x152>
 80012e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80012e6:	3b08      	subs	r3, #8
 80012e8:	009b      	lsls	r3, r3, #2
 80012ea:	613b      	str	r3, [r7, #16]
 80012ec:	697b      	ldr	r3, [r7, #20]
 80012ee:	681a      	ldr	r2, [r3, #0]
 80012f0:	210f      	movs	r1, #15
 80012f2:	693b      	ldr	r3, [r7, #16]
 80012f4:	fa01 f303 	lsl.w	r3, r1, r3
 80012f8:	43db      	mvns	r3, r3
 80012fa:	401a      	ands	r2, r3
 80012fc:	6a39      	ldr	r1, [r7, #32]
 80012fe:	693b      	ldr	r3, [r7, #16]
 8001300:	fa01 f303 	lsl.w	r3, r1, r3
 8001304:	431a      	orrs	r2, r3
 8001306:	697b      	ldr	r3, [r7, #20]
 8001308:	601a      	str	r2, [r3, #0]
 800130a:	683b      	ldr	r3, [r7, #0]
 800130c:	685b      	ldr	r3, [r3, #4]
 800130e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001312:	2b00      	cmp	r3, #0
 8001314:	f000 80b1 	beq.w	800147a <HAL_GPIO_Init+0x2e2>
 8001318:	4b4d      	ldr	r3, [pc, #308]	@ (8001450 <HAL_GPIO_Init+0x2b8>)
 800131a:	699b      	ldr	r3, [r3, #24]
 800131c:	4a4c      	ldr	r2, [pc, #304]	@ (8001450 <HAL_GPIO_Init+0x2b8>)
 800131e:	f043 0301 	orr.w	r3, r3, #1
 8001322:	6193      	str	r3, [r2, #24]
 8001324:	4b4a      	ldr	r3, [pc, #296]	@ (8001450 <HAL_GPIO_Init+0x2b8>)
 8001326:	699b      	ldr	r3, [r3, #24]
 8001328:	f003 0301 	and.w	r3, r3, #1
 800132c:	60bb      	str	r3, [r7, #8]
 800132e:	68bb      	ldr	r3, [r7, #8]
 8001330:	4a48      	ldr	r2, [pc, #288]	@ (8001454 <HAL_GPIO_Init+0x2bc>)
 8001332:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001334:	089b      	lsrs	r3, r3, #2
 8001336:	3302      	adds	r3, #2
 8001338:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800133c:	60fb      	str	r3, [r7, #12]
 800133e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001340:	f003 0303 	and.w	r3, r3, #3
 8001344:	009b      	lsls	r3, r3, #2
 8001346:	220f      	movs	r2, #15
 8001348:	fa02 f303 	lsl.w	r3, r2, r3
 800134c:	43db      	mvns	r3, r3
 800134e:	68fa      	ldr	r2, [r7, #12]
 8001350:	4013      	ands	r3, r2
 8001352:	60fb      	str	r3, [r7, #12]
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	4a40      	ldr	r2, [pc, #256]	@ (8001458 <HAL_GPIO_Init+0x2c0>)
 8001358:	4293      	cmp	r3, r2
 800135a:	d013      	beq.n	8001384 <HAL_GPIO_Init+0x1ec>
 800135c:	687b      	ldr	r3, [r7, #4]
 800135e:	4a3f      	ldr	r2, [pc, #252]	@ (800145c <HAL_GPIO_Init+0x2c4>)
 8001360:	4293      	cmp	r3, r2
 8001362:	d00d      	beq.n	8001380 <HAL_GPIO_Init+0x1e8>
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	4a3e      	ldr	r2, [pc, #248]	@ (8001460 <HAL_GPIO_Init+0x2c8>)
 8001368:	4293      	cmp	r3, r2
 800136a:	d007      	beq.n	800137c <HAL_GPIO_Init+0x1e4>
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	4a3d      	ldr	r2, [pc, #244]	@ (8001464 <HAL_GPIO_Init+0x2cc>)
 8001370:	4293      	cmp	r3, r2
 8001372:	d101      	bne.n	8001378 <HAL_GPIO_Init+0x1e0>
 8001374:	2303      	movs	r3, #3
 8001376:	e006      	b.n	8001386 <HAL_GPIO_Init+0x1ee>
 8001378:	2304      	movs	r3, #4
 800137a:	e004      	b.n	8001386 <HAL_GPIO_Init+0x1ee>
 800137c:	2302      	movs	r3, #2
 800137e:	e002      	b.n	8001386 <HAL_GPIO_Init+0x1ee>
 8001380:	2301      	movs	r3, #1
 8001382:	e000      	b.n	8001386 <HAL_GPIO_Init+0x1ee>
 8001384:	2300      	movs	r3, #0
 8001386:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001388:	f002 0203 	and.w	r2, r2, #3
 800138c:	0092      	lsls	r2, r2, #2
 800138e:	4093      	lsls	r3, r2
 8001390:	68fa      	ldr	r2, [r7, #12]
 8001392:	4313      	orrs	r3, r2
 8001394:	60fb      	str	r3, [r7, #12]
 8001396:	492f      	ldr	r1, [pc, #188]	@ (8001454 <HAL_GPIO_Init+0x2bc>)
 8001398:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800139a:	089b      	lsrs	r3, r3, #2
 800139c:	3302      	adds	r3, #2
 800139e:	68fa      	ldr	r2, [r7, #12]
 80013a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80013a4:	683b      	ldr	r3, [r7, #0]
 80013a6:	685b      	ldr	r3, [r3, #4]
 80013a8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d006      	beq.n	80013be <HAL_GPIO_Init+0x226>
 80013b0:	4b2d      	ldr	r3, [pc, #180]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013b2:	689a      	ldr	r2, [r3, #8]
 80013b4:	492c      	ldr	r1, [pc, #176]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013b6:	69bb      	ldr	r3, [r7, #24]
 80013b8:	4313      	orrs	r3, r2
 80013ba:	608b      	str	r3, [r1, #8]
 80013bc:	e006      	b.n	80013cc <HAL_GPIO_Init+0x234>
 80013be:	4b2a      	ldr	r3, [pc, #168]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013c0:	689a      	ldr	r2, [r3, #8]
 80013c2:	69bb      	ldr	r3, [r7, #24]
 80013c4:	43db      	mvns	r3, r3
 80013c6:	4928      	ldr	r1, [pc, #160]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013c8:	4013      	ands	r3, r2
 80013ca:	608b      	str	r3, [r1, #8]
 80013cc:	683b      	ldr	r3, [r7, #0]
 80013ce:	685b      	ldr	r3, [r3, #4]
 80013d0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80013d4:	2b00      	cmp	r3, #0
 80013d6:	d006      	beq.n	80013e6 <HAL_GPIO_Init+0x24e>
 80013d8:	4b23      	ldr	r3, [pc, #140]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013da:	68da      	ldr	r2, [r3, #12]
 80013dc:	4922      	ldr	r1, [pc, #136]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013de:	69bb      	ldr	r3, [r7, #24]
 80013e0:	4313      	orrs	r3, r2
 80013e2:	60cb      	str	r3, [r1, #12]
 80013e4:	e006      	b.n	80013f4 <HAL_GPIO_Init+0x25c>
 80013e6:	4b20      	ldr	r3, [pc, #128]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013e8:	68da      	ldr	r2, [r3, #12]
 80013ea:	69bb      	ldr	r3, [r7, #24]
 80013ec:	43db      	mvns	r3, r3
 80013ee:	491e      	ldr	r1, [pc, #120]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 80013f0:	4013      	ands	r3, r2
 80013f2:	60cb      	str	r3, [r1, #12]
 80013f4:	683b      	ldr	r3, [r7, #0]
 80013f6:	685b      	ldr	r3, [r3, #4]
 80013f8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d006      	beq.n	800140e <HAL_GPIO_Init+0x276>
 8001400:	4b19      	ldr	r3, [pc, #100]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 8001402:	685a      	ldr	r2, [r3, #4]
 8001404:	4918      	ldr	r1, [pc, #96]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 8001406:	69bb      	ldr	r3, [r7, #24]
 8001408:	4313      	orrs	r3, r2
 800140a:	604b      	str	r3, [r1, #4]
 800140c:	e006      	b.n	800141c <HAL_GPIO_Init+0x284>
 800140e:	4b16      	ldr	r3, [pc, #88]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 8001410:	685a      	ldr	r2, [r3, #4]
 8001412:	69bb      	ldr	r3, [r7, #24]
 8001414:	43db      	mvns	r3, r3
 8001416:	4914      	ldr	r1, [pc, #80]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 8001418:	4013      	ands	r3, r2
 800141a:	604b      	str	r3, [r1, #4]
 800141c:	683b      	ldr	r3, [r7, #0]
 800141e:	685b      	ldr	r3, [r3, #4]
 8001420:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001424:	2b00      	cmp	r3, #0
 8001426:	d021      	beq.n	800146c <HAL_GPIO_Init+0x2d4>
 8001428:	4b0f      	ldr	r3, [pc, #60]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 800142a:	681a      	ldr	r2, [r3, #0]
 800142c:	490e      	ldr	r1, [pc, #56]	@ (8001468 <HAL_GPIO_Init+0x2d0>)
 800142e:	69bb      	ldr	r3, [r7, #24]
 8001430:	4313      	orrs	r3, r2
 8001432:	600b      	str	r3, [r1, #0]
 8001434:	e021      	b.n	800147a <HAL_GPIO_Init+0x2e2>
 8001436:	bf00      	nop
 8001438:	10320000 	.word	0x10320000
 800143c:	10310000 	.word	0x10310000
 8001440:	10220000 	.word	0x10220000
 8001444:	10210000 	.word	0x10210000
 8001448:	10120000 	.word	0x10120000
 800144c:	10110000 	.word	0x10110000
 8001450:	40021000 	.word	0x40021000
 8001454:	40010000 	.word	0x40010000
 8001458:	40010800 	.word	0x40010800
 800145c:	40010c00 	.word	0x40010c00
 8001460:	40011000 	.word	0x40011000
 8001464:	40011400 	.word	0x40011400
 8001468:	40010400 	.word	0x40010400
 800146c:	4b0b      	ldr	r3, [pc, #44]	@ (800149c <HAL_GPIO_Init+0x304>)
 800146e:	681a      	ldr	r2, [r3, #0]
 8001470:	69bb      	ldr	r3, [r7, #24]
 8001472:	43db      	mvns	r3, r3
 8001474:	4909      	ldr	r1, [pc, #36]	@ (800149c <HAL_GPIO_Init+0x304>)
 8001476:	4013      	ands	r3, r2
 8001478:	600b      	str	r3, [r1, #0]
 800147a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800147c:	3301      	adds	r3, #1
 800147e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001480:	683b      	ldr	r3, [r7, #0]
 8001482:	681a      	ldr	r2, [r3, #0]
 8001484:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001486:	fa22 f303 	lsr.w	r3, r2, r3
 800148a:	2b00      	cmp	r3, #0
 800148c:	f47f ae8e 	bne.w	80011ac <HAL_GPIO_Init+0x14>
 8001490:	bf00      	nop
 8001492:	bf00      	nop
 8001494:	372c      	adds	r7, #44	@ 0x2c
 8001496:	46bd      	mov	sp, r7
 8001498:	bc80      	pop	{r7}
 800149a:	4770      	bx	lr
 800149c:	40010400 	.word	0x40010400

080014a0 <HAL_GPIO_WritePin>:
 80014a0:	b480      	push	{r7}
 80014a2:	b083      	sub	sp, #12
 80014a4:	af00      	add	r7, sp, #0
 80014a6:	6078      	str	r0, [r7, #4]
 80014a8:	460b      	mov	r3, r1
 80014aa:	807b      	strh	r3, [r7, #2]
 80014ac:	4613      	mov	r3, r2
 80014ae:	707b      	strb	r3, [r7, #1]
 80014b0:	787b      	ldrb	r3, [r7, #1]
 80014b2:	2b00      	cmp	r3, #0
 80014b4:	d003      	beq.n	80014be <HAL_GPIO_WritePin+0x1e>
 80014b6:	887a      	ldrh	r2, [r7, #2]
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	611a      	str	r2, [r3, #16]
 80014bc:	e003      	b.n	80014c6 <HAL_GPIO_WritePin+0x26>
 80014be:	887b      	ldrh	r3, [r7, #2]
 80014c0:	041a      	lsls	r2, r3, #16
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	611a      	str	r2, [r3, #16]
 80014c6:	bf00      	nop
 80014c8:	370c      	adds	r7, #12
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bc80      	pop	{r7}
 80014ce:	4770      	bx	lr

080014d0 <HAL_I2C_Init>:
 80014d0:	b580      	push	{r7, lr}
 80014d2:	b084      	sub	sp, #16
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	6078      	str	r0, [r7, #4]
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d101      	bne.n	80014e2 <HAL_I2C_Init+0x12>
 80014de:	2301      	movs	r3, #1
 80014e0:	e12b      	b.n	800173a <HAL_I2C_Init+0x26a>
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80014e8:	b2db      	uxtb	r3, r3
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d106      	bne.n	80014fc <HAL_I2C_Init+0x2c>
 80014ee:	687b      	ldr	r3, [r7, #4]
 80014f0:	2200      	movs	r2, #0
 80014f2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80014f6:	6878      	ldr	r0, [r7, #4]
 80014f8:	f7ff fc0c 	bl	8000d14 <HAL_I2C_MspInit>
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	2224      	movs	r2, #36	@ 0x24
 8001500:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	681a      	ldr	r2, [r3, #0]
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	f022 0201 	bic.w	r2, r2, #1
 8001512:	601a      	str	r2, [r3, #0]
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	681a      	ldr	r2, [r3, #0]
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	681b      	ldr	r3, [r3, #0]
 800151e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001522:	601a      	str	r2, [r3, #0]
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	681a      	ldr	r2, [r3, #0]
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001532:	601a      	str	r2, [r3, #0]
 8001534:	f001 f832 	bl	800259c <HAL_RCC_GetPCLK1Freq>
 8001538:	60f8      	str	r0, [r7, #12]
 800153a:	687b      	ldr	r3, [r7, #4]
 800153c:	685b      	ldr	r3, [r3, #4]
 800153e:	4a81      	ldr	r2, [pc, #516]	@ (8001744 <HAL_I2C_Init+0x274>)
 8001540:	4293      	cmp	r3, r2
 8001542:	d807      	bhi.n	8001554 <HAL_I2C_Init+0x84>
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	4a80      	ldr	r2, [pc, #512]	@ (8001748 <HAL_I2C_Init+0x278>)
 8001548:	4293      	cmp	r3, r2
 800154a:	bf94      	ite	ls
 800154c:	2301      	movls	r3, #1
 800154e:	2300      	movhi	r3, #0
 8001550:	b2db      	uxtb	r3, r3
 8001552:	e006      	b.n	8001562 <HAL_I2C_Init+0x92>
 8001554:	68fb      	ldr	r3, [r7, #12]
 8001556:	4a7d      	ldr	r2, [pc, #500]	@ (800174c <HAL_I2C_Init+0x27c>)
 8001558:	4293      	cmp	r3, r2
 800155a:	bf94      	ite	ls
 800155c:	2301      	movls	r3, #1
 800155e:	2300      	movhi	r3, #0
 8001560:	b2db      	uxtb	r3, r3
 8001562:	2b00      	cmp	r3, #0
 8001564:	d001      	beq.n	800156a <HAL_I2C_Init+0x9a>
 8001566:	2301      	movs	r3, #1
 8001568:	e0e7      	b.n	800173a <HAL_I2C_Init+0x26a>
 800156a:	68fb      	ldr	r3, [r7, #12]
 800156c:	4a78      	ldr	r2, [pc, #480]	@ (8001750 <HAL_I2C_Init+0x280>)
 800156e:	fba2 2303 	umull	r2, r3, r2, r3
 8001572:	0c9b      	lsrs	r3, r3, #18
 8001574:	60bb      	str	r3, [r7, #8]
 8001576:	687b      	ldr	r3, [r7, #4]
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	685b      	ldr	r3, [r3, #4]
 800157c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	68ba      	ldr	r2, [r7, #8]
 8001586:	430a      	orrs	r2, r1
 8001588:	605a      	str	r2, [r3, #4]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	6a1b      	ldr	r3, [r3, #32]
 8001590:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	685b      	ldr	r3, [r3, #4]
 8001598:	4a6a      	ldr	r2, [pc, #424]	@ (8001744 <HAL_I2C_Init+0x274>)
 800159a:	4293      	cmp	r3, r2
 800159c:	d802      	bhi.n	80015a4 <HAL_I2C_Init+0xd4>
 800159e:	68bb      	ldr	r3, [r7, #8]
 80015a0:	3301      	adds	r3, #1
 80015a2:	e009      	b.n	80015b8 <HAL_I2C_Init+0xe8>
 80015a4:	68bb      	ldr	r3, [r7, #8]
 80015a6:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80015aa:	fb02 f303 	mul.w	r3, r2, r3
 80015ae:	4a69      	ldr	r2, [pc, #420]	@ (8001754 <HAL_I2C_Init+0x284>)
 80015b0:	fba2 2303 	umull	r2, r3, r2, r3
 80015b4:	099b      	lsrs	r3, r3, #6
 80015b6:	3301      	adds	r3, #1
 80015b8:	687a      	ldr	r2, [r7, #4]
 80015ba:	6812      	ldr	r2, [r2, #0]
 80015bc:	430b      	orrs	r3, r1
 80015be:	6213      	str	r3, [r2, #32]
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	69db      	ldr	r3, [r3, #28]
 80015c6:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80015ca:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	685b      	ldr	r3, [r3, #4]
 80015d2:	495c      	ldr	r1, [pc, #368]	@ (8001744 <HAL_I2C_Init+0x274>)
 80015d4:	428b      	cmp	r3, r1
 80015d6:	d819      	bhi.n	800160c <HAL_I2C_Init+0x13c>
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	1e59      	subs	r1, r3, #1
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	685b      	ldr	r3, [r3, #4]
 80015e0:	005b      	lsls	r3, r3, #1
 80015e2:	fbb1 f3f3 	udiv	r3, r1, r3
 80015e6:	1c59      	adds	r1, r3, #1
 80015e8:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80015ec:	400b      	ands	r3, r1
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d00a      	beq.n	8001608 <HAL_I2C_Init+0x138>
 80015f2:	68fb      	ldr	r3, [r7, #12]
 80015f4:	1e59      	subs	r1, r3, #1
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	685b      	ldr	r3, [r3, #4]
 80015fa:	005b      	lsls	r3, r3, #1
 80015fc:	fbb1 f3f3 	udiv	r3, r1, r3
 8001600:	3301      	adds	r3, #1
 8001602:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001606:	e051      	b.n	80016ac <HAL_I2C_Init+0x1dc>
 8001608:	2304      	movs	r3, #4
 800160a:	e04f      	b.n	80016ac <HAL_I2C_Init+0x1dc>
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	689b      	ldr	r3, [r3, #8]
 8001610:	2b00      	cmp	r3, #0
 8001612:	d111      	bne.n	8001638 <HAL_I2C_Init+0x168>
 8001614:	68fb      	ldr	r3, [r7, #12]
 8001616:	1e58      	subs	r0, r3, #1
 8001618:	687b      	ldr	r3, [r7, #4]
 800161a:	6859      	ldr	r1, [r3, #4]
 800161c:	460b      	mov	r3, r1
 800161e:	005b      	lsls	r3, r3, #1
 8001620:	440b      	add	r3, r1
 8001622:	fbb0 f3f3 	udiv	r3, r0, r3
 8001626:	3301      	adds	r3, #1
 8001628:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800162c:	2b00      	cmp	r3, #0
 800162e:	bf0c      	ite	eq
 8001630:	2301      	moveq	r3, #1
 8001632:	2300      	movne	r3, #0
 8001634:	b2db      	uxtb	r3, r3
 8001636:	e012      	b.n	800165e <HAL_I2C_Init+0x18e>
 8001638:	68fb      	ldr	r3, [r7, #12]
 800163a:	1e58      	subs	r0, r3, #1
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	6859      	ldr	r1, [r3, #4]
 8001640:	460b      	mov	r3, r1
 8001642:	009b      	lsls	r3, r3, #2
 8001644:	440b      	add	r3, r1
 8001646:	0099      	lsls	r1, r3, #2
 8001648:	440b      	add	r3, r1
 800164a:	fbb0 f3f3 	udiv	r3, r0, r3
 800164e:	3301      	adds	r3, #1
 8001650:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001654:	2b00      	cmp	r3, #0
 8001656:	bf0c      	ite	eq
 8001658:	2301      	moveq	r3, #1
 800165a:	2300      	movne	r3, #0
 800165c:	b2db      	uxtb	r3, r3
 800165e:	2b00      	cmp	r3, #0
 8001660:	d001      	beq.n	8001666 <HAL_I2C_Init+0x196>
 8001662:	2301      	movs	r3, #1
 8001664:	e022      	b.n	80016ac <HAL_I2C_Init+0x1dc>
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	689b      	ldr	r3, [r3, #8]
 800166a:	2b00      	cmp	r3, #0
 800166c:	d10e      	bne.n	800168c <HAL_I2C_Init+0x1bc>
 800166e:	68fb      	ldr	r3, [r7, #12]
 8001670:	1e58      	subs	r0, r3, #1
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	6859      	ldr	r1, [r3, #4]
 8001676:	460b      	mov	r3, r1
 8001678:	005b      	lsls	r3, r3, #1
 800167a:	440b      	add	r3, r1
 800167c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001680:	3301      	adds	r3, #1
 8001682:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001686:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800168a:	e00f      	b.n	80016ac <HAL_I2C_Init+0x1dc>
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	1e58      	subs	r0, r3, #1
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	6859      	ldr	r1, [r3, #4]
 8001694:	460b      	mov	r3, r1
 8001696:	009b      	lsls	r3, r3, #2
 8001698:	440b      	add	r3, r1
 800169a:	0099      	lsls	r1, r3, #2
 800169c:	440b      	add	r3, r1
 800169e:	fbb0 f3f3 	udiv	r3, r0, r3
 80016a2:	3301      	adds	r3, #1
 80016a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80016a8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80016ac:	6879      	ldr	r1, [r7, #4]
 80016ae:	6809      	ldr	r1, [r1, #0]
 80016b0:	4313      	orrs	r3, r2
 80016b2:	61cb      	str	r3, [r1, #28]
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	681b      	ldr	r3, [r3, #0]
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	69da      	ldr	r2, [r3, #28]
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	6a1b      	ldr	r3, [r3, #32]
 80016c6:	431a      	orrs	r2, r3
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	430a      	orrs	r2, r1
 80016ce:	601a      	str	r2, [r3, #0]
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	689b      	ldr	r3, [r3, #8]
 80016d6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80016da:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80016de:	687a      	ldr	r2, [r7, #4]
 80016e0:	6911      	ldr	r1, [r2, #16]
 80016e2:	687a      	ldr	r2, [r7, #4]
 80016e4:	68d2      	ldr	r2, [r2, #12]
 80016e6:	4311      	orrs	r1, r2
 80016e8:	687a      	ldr	r2, [r7, #4]
 80016ea:	6812      	ldr	r2, [r2, #0]
 80016ec:	430b      	orrs	r3, r1
 80016ee:	6093      	str	r3, [r2, #8]
 80016f0:	687b      	ldr	r3, [r7, #4]
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	68db      	ldr	r3, [r3, #12]
 80016f6:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	695a      	ldr	r2, [r3, #20]
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	699b      	ldr	r3, [r3, #24]
 8001702:	431a      	orrs	r2, r3
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	430a      	orrs	r2, r1
 800170a:	60da      	str	r2, [r3, #12]
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	681b      	ldr	r3, [r3, #0]
 8001710:	681a      	ldr	r2, [r3, #0]
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	f042 0201 	orr.w	r2, r2, #1
 800171a:	601a      	str	r2, [r3, #0]
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	2200      	movs	r2, #0
 8001720:	641a      	str	r2, [r3, #64]	@ 0x40
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	2220      	movs	r2, #32
 8001726:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	2200      	movs	r2, #0
 800172e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	2200      	movs	r2, #0
 8001734:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001738:	2300      	movs	r3, #0
 800173a:	4618      	mov	r0, r3
 800173c:	3710      	adds	r7, #16
 800173e:	46bd      	mov	sp, r7
 8001740:	bd80      	pop	{r7, pc}
 8001742:	bf00      	nop
 8001744:	000186a0 	.word	0x000186a0
 8001748:	001e847f 	.word	0x001e847f
 800174c:	003d08ff 	.word	0x003d08ff
 8001750:	431bde83 	.word	0x431bde83
 8001754:	10624dd3 	.word	0x10624dd3

08001758 <HAL_I2C_Master_Transmit>:
 8001758:	b580      	push	{r7, lr}
 800175a:	b088      	sub	sp, #32
 800175c:	af02      	add	r7, sp, #8
 800175e:	60f8      	str	r0, [r7, #12]
 8001760:	607a      	str	r2, [r7, #4]
 8001762:	461a      	mov	r2, r3
 8001764:	460b      	mov	r3, r1
 8001766:	817b      	strh	r3, [r7, #10]
 8001768:	4613      	mov	r3, r2
 800176a:	813b      	strh	r3, [r7, #8]
 800176c:	f7ff fc02 	bl	8000f74 <HAL_GetTick>
 8001770:	6178      	str	r0, [r7, #20]
 8001772:	68fb      	ldr	r3, [r7, #12]
 8001774:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001778:	b2db      	uxtb	r3, r3
 800177a:	2b20      	cmp	r3, #32
 800177c:	f040 80e0 	bne.w	8001940 <HAL_I2C_Master_Transmit+0x1e8>
 8001780:	697b      	ldr	r3, [r7, #20]
 8001782:	9300      	str	r3, [sp, #0]
 8001784:	2319      	movs	r3, #25
 8001786:	2201      	movs	r2, #1
 8001788:	4970      	ldr	r1, [pc, #448]	@ (800194c <HAL_I2C_Master_Transmit+0x1f4>)
 800178a:	68f8      	ldr	r0, [r7, #12]
 800178c:	f000 f964 	bl	8001a58 <I2C_WaitOnFlagUntilTimeout>
 8001790:	4603      	mov	r3, r0
 8001792:	2b00      	cmp	r3, #0
 8001794:	d001      	beq.n	800179a <HAL_I2C_Master_Transmit+0x42>
 8001796:	2302      	movs	r3, #2
 8001798:	e0d3      	b.n	8001942 <HAL_I2C_Master_Transmit+0x1ea>
 800179a:	68fb      	ldr	r3, [r7, #12]
 800179c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80017a0:	2b01      	cmp	r3, #1
 80017a2:	d101      	bne.n	80017a8 <HAL_I2C_Master_Transmit+0x50>
 80017a4:	2302      	movs	r3, #2
 80017a6:	e0cc      	b.n	8001942 <HAL_I2C_Master_Transmit+0x1ea>
 80017a8:	68fb      	ldr	r3, [r7, #12]
 80017aa:	2201      	movs	r2, #1
 80017ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80017b0:	68fb      	ldr	r3, [r7, #12]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	f003 0301 	and.w	r3, r3, #1
 80017ba:	2b01      	cmp	r3, #1
 80017bc:	d007      	beq.n	80017ce <HAL_I2C_Master_Transmit+0x76>
 80017be:	68fb      	ldr	r3, [r7, #12]
 80017c0:	681b      	ldr	r3, [r3, #0]
 80017c2:	681a      	ldr	r2, [r3, #0]
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	f042 0201 	orr.w	r2, r2, #1
 80017cc:	601a      	str	r2, [r3, #0]
 80017ce:	68fb      	ldr	r3, [r7, #12]
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	681a      	ldr	r2, [r3, #0]
 80017d4:	68fb      	ldr	r3, [r7, #12]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80017dc:	601a      	str	r2, [r3, #0]
 80017de:	68fb      	ldr	r3, [r7, #12]
 80017e0:	2221      	movs	r2, #33	@ 0x21
 80017e2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80017e6:	68fb      	ldr	r3, [r7, #12]
 80017e8:	2210      	movs	r2, #16
 80017ea:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80017ee:	68fb      	ldr	r3, [r7, #12]
 80017f0:	2200      	movs	r2, #0
 80017f2:	641a      	str	r2, [r3, #64]	@ 0x40
 80017f4:	68fb      	ldr	r3, [r7, #12]
 80017f6:	687a      	ldr	r2, [r7, #4]
 80017f8:	625a      	str	r2, [r3, #36]	@ 0x24
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	893a      	ldrh	r2, [r7, #8]
 80017fe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001800:	68fb      	ldr	r3, [r7, #12]
 8001802:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001804:	b29a      	uxth	r2, r3
 8001806:	68fb      	ldr	r3, [r7, #12]
 8001808:	851a      	strh	r2, [r3, #40]	@ 0x28
 800180a:	68fb      	ldr	r3, [r7, #12]
 800180c:	4a50      	ldr	r2, [pc, #320]	@ (8001950 <HAL_I2C_Master_Transmit+0x1f8>)
 800180e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001810:	8979      	ldrh	r1, [r7, #10]
 8001812:	697b      	ldr	r3, [r7, #20]
 8001814:	6a3a      	ldr	r2, [r7, #32]
 8001816:	68f8      	ldr	r0, [r7, #12]
 8001818:	f000 f89c 	bl	8001954 <I2C_MasterRequestWrite>
 800181c:	4603      	mov	r3, r0
 800181e:	2b00      	cmp	r3, #0
 8001820:	d001      	beq.n	8001826 <HAL_I2C_Master_Transmit+0xce>
 8001822:	2301      	movs	r3, #1
 8001824:	e08d      	b.n	8001942 <HAL_I2C_Master_Transmit+0x1ea>
 8001826:	2300      	movs	r3, #0
 8001828:	613b      	str	r3, [r7, #16]
 800182a:	68fb      	ldr	r3, [r7, #12]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	695b      	ldr	r3, [r3, #20]
 8001830:	613b      	str	r3, [r7, #16]
 8001832:	68fb      	ldr	r3, [r7, #12]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	699b      	ldr	r3, [r3, #24]
 8001838:	613b      	str	r3, [r7, #16]
 800183a:	693b      	ldr	r3, [r7, #16]
 800183c:	e066      	b.n	800190c <HAL_I2C_Master_Transmit+0x1b4>
 800183e:	697a      	ldr	r2, [r7, #20]
 8001840:	6a39      	ldr	r1, [r7, #32]
 8001842:	68f8      	ldr	r0, [r7, #12]
 8001844:	f000 fa22 	bl	8001c8c <I2C_WaitOnTXEFlagUntilTimeout>
 8001848:	4603      	mov	r3, r0
 800184a:	2b00      	cmp	r3, #0
 800184c:	d00d      	beq.n	800186a <HAL_I2C_Master_Transmit+0x112>
 800184e:	68fb      	ldr	r3, [r7, #12]
 8001850:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001852:	2b04      	cmp	r3, #4
 8001854:	d107      	bne.n	8001866 <HAL_I2C_Master_Transmit+0x10e>
 8001856:	68fb      	ldr	r3, [r7, #12]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	681a      	ldr	r2, [r3, #0]
 800185c:	68fb      	ldr	r3, [r7, #12]
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001864:	601a      	str	r2, [r3, #0]
 8001866:	2301      	movs	r3, #1
 8001868:	e06b      	b.n	8001942 <HAL_I2C_Master_Transmit+0x1ea>
 800186a:	68fb      	ldr	r3, [r7, #12]
 800186c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800186e:	781a      	ldrb	r2, [r3, #0]
 8001870:	68fb      	ldr	r3, [r7, #12]
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	611a      	str	r2, [r3, #16]
 8001876:	68fb      	ldr	r3, [r7, #12]
 8001878:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800187a:	1c5a      	adds	r2, r3, #1
 800187c:	68fb      	ldr	r3, [r7, #12]
 800187e:	625a      	str	r2, [r3, #36]	@ 0x24
 8001880:	68fb      	ldr	r3, [r7, #12]
 8001882:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001884:	b29b      	uxth	r3, r3
 8001886:	3b01      	subs	r3, #1
 8001888:	b29a      	uxth	r2, r3
 800188a:	68fb      	ldr	r3, [r7, #12]
 800188c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800188e:	68fb      	ldr	r3, [r7, #12]
 8001890:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001892:	3b01      	subs	r3, #1
 8001894:	b29a      	uxth	r2, r3
 8001896:	68fb      	ldr	r3, [r7, #12]
 8001898:	851a      	strh	r2, [r3, #40]	@ 0x28
 800189a:	68fb      	ldr	r3, [r7, #12]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	695b      	ldr	r3, [r3, #20]
 80018a0:	f003 0304 	and.w	r3, r3, #4
 80018a4:	2b04      	cmp	r3, #4
 80018a6:	d11b      	bne.n	80018e0 <HAL_I2C_Master_Transmit+0x188>
 80018a8:	68fb      	ldr	r3, [r7, #12]
 80018aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d017      	beq.n	80018e0 <HAL_I2C_Master_Transmit+0x188>
 80018b0:	68fb      	ldr	r3, [r7, #12]
 80018b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80018b4:	781a      	ldrb	r2, [r3, #0]
 80018b6:	68fb      	ldr	r3, [r7, #12]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	611a      	str	r2, [r3, #16]
 80018bc:	68fb      	ldr	r3, [r7, #12]
 80018be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80018c0:	1c5a      	adds	r2, r3, #1
 80018c2:	68fb      	ldr	r3, [r7, #12]
 80018c4:	625a      	str	r2, [r3, #36]	@ 0x24
 80018c6:	68fb      	ldr	r3, [r7, #12]
 80018c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80018ca:	b29b      	uxth	r3, r3
 80018cc:	3b01      	subs	r3, #1
 80018ce:	b29a      	uxth	r2, r3
 80018d0:	68fb      	ldr	r3, [r7, #12]
 80018d2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80018d4:	68fb      	ldr	r3, [r7, #12]
 80018d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80018d8:	3b01      	subs	r3, #1
 80018da:	b29a      	uxth	r2, r3
 80018dc:	68fb      	ldr	r3, [r7, #12]
 80018de:	851a      	strh	r2, [r3, #40]	@ 0x28
 80018e0:	697a      	ldr	r2, [r7, #20]
 80018e2:	6a39      	ldr	r1, [r7, #32]
 80018e4:	68f8      	ldr	r0, [r7, #12]
 80018e6:	f000 fa19 	bl	8001d1c <I2C_WaitOnBTFFlagUntilTimeout>
 80018ea:	4603      	mov	r3, r0
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d00d      	beq.n	800190c <HAL_I2C_Master_Transmit+0x1b4>
 80018f0:	68fb      	ldr	r3, [r7, #12]
 80018f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018f4:	2b04      	cmp	r3, #4
 80018f6:	d107      	bne.n	8001908 <HAL_I2C_Master_Transmit+0x1b0>
 80018f8:	68fb      	ldr	r3, [r7, #12]
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	681a      	ldr	r2, [r3, #0]
 80018fe:	68fb      	ldr	r3, [r7, #12]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001906:	601a      	str	r2, [r3, #0]
 8001908:	2301      	movs	r3, #1
 800190a:	e01a      	b.n	8001942 <HAL_I2C_Master_Transmit+0x1ea>
 800190c:	68fb      	ldr	r3, [r7, #12]
 800190e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001910:	2b00      	cmp	r3, #0
 8001912:	d194      	bne.n	800183e <HAL_I2C_Master_Transmit+0xe6>
 8001914:	68fb      	ldr	r3, [r7, #12]
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	681a      	ldr	r2, [r3, #0]
 800191a:	68fb      	ldr	r3, [r7, #12]
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001922:	601a      	str	r2, [r3, #0]
 8001924:	68fb      	ldr	r3, [r7, #12]
 8001926:	2220      	movs	r2, #32
 8001928:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800192c:	68fb      	ldr	r3, [r7, #12]
 800192e:	2200      	movs	r2, #0
 8001930:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001934:	68fb      	ldr	r3, [r7, #12]
 8001936:	2200      	movs	r2, #0
 8001938:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800193c:	2300      	movs	r3, #0
 800193e:	e000      	b.n	8001942 <HAL_I2C_Master_Transmit+0x1ea>
 8001940:	2302      	movs	r3, #2
 8001942:	4618      	mov	r0, r3
 8001944:	3718      	adds	r7, #24
 8001946:	46bd      	mov	sp, r7
 8001948:	bd80      	pop	{r7, pc}
 800194a:	bf00      	nop
 800194c:	00100002 	.word	0x00100002
 8001950:	ffff0000 	.word	0xffff0000

08001954 <I2C_MasterRequestWrite>:
 8001954:	b580      	push	{r7, lr}
 8001956:	b088      	sub	sp, #32
 8001958:	af02      	add	r7, sp, #8
 800195a:	60f8      	str	r0, [r7, #12]
 800195c:	607a      	str	r2, [r7, #4]
 800195e:	603b      	str	r3, [r7, #0]
 8001960:	460b      	mov	r3, r1
 8001962:	817b      	strh	r3, [r7, #10]
 8001964:	68fb      	ldr	r3, [r7, #12]
 8001966:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001968:	617b      	str	r3, [r7, #20]
 800196a:	697b      	ldr	r3, [r7, #20]
 800196c:	2b08      	cmp	r3, #8
 800196e:	d006      	beq.n	800197e <I2C_MasterRequestWrite+0x2a>
 8001970:	697b      	ldr	r3, [r7, #20]
 8001972:	2b01      	cmp	r3, #1
 8001974:	d003      	beq.n	800197e <I2C_MasterRequestWrite+0x2a>
 8001976:	697b      	ldr	r3, [r7, #20]
 8001978:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800197c:	d108      	bne.n	8001990 <I2C_MasterRequestWrite+0x3c>
 800197e:	68fb      	ldr	r3, [r7, #12]
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	681a      	ldr	r2, [r3, #0]
 8001984:	68fb      	ldr	r3, [r7, #12]
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800198c:	601a      	str	r2, [r3, #0]
 800198e:	e00b      	b.n	80019a8 <I2C_MasterRequestWrite+0x54>
 8001990:	68fb      	ldr	r3, [r7, #12]
 8001992:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001994:	2b12      	cmp	r3, #18
 8001996:	d107      	bne.n	80019a8 <I2C_MasterRequestWrite+0x54>
 8001998:	68fb      	ldr	r3, [r7, #12]
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	681a      	ldr	r2, [r3, #0]
 800199e:	68fb      	ldr	r3, [r7, #12]
 80019a0:	681b      	ldr	r3, [r3, #0]
 80019a2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80019a6:	601a      	str	r2, [r3, #0]
 80019a8:	683b      	ldr	r3, [r7, #0]
 80019aa:	9300      	str	r3, [sp, #0]
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	2200      	movs	r2, #0
 80019b0:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80019b4:	68f8      	ldr	r0, [r7, #12]
 80019b6:	f000 f84f 	bl	8001a58 <I2C_WaitOnFlagUntilTimeout>
 80019ba:	4603      	mov	r3, r0
 80019bc:	2b00      	cmp	r3, #0
 80019be:	d00d      	beq.n	80019dc <I2C_MasterRequestWrite+0x88>
 80019c0:	68fb      	ldr	r3, [r7, #12]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	681b      	ldr	r3, [r3, #0]
 80019c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80019ca:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80019ce:	d103      	bne.n	80019d8 <I2C_MasterRequestWrite+0x84>
 80019d0:	68fb      	ldr	r3, [r7, #12]
 80019d2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80019d6:	641a      	str	r2, [r3, #64]	@ 0x40
 80019d8:	2303      	movs	r3, #3
 80019da:	e035      	b.n	8001a48 <I2C_MasterRequestWrite+0xf4>
 80019dc:	68fb      	ldr	r3, [r7, #12]
 80019de:	691b      	ldr	r3, [r3, #16]
 80019e0:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80019e4:	d108      	bne.n	80019f8 <I2C_MasterRequestWrite+0xa4>
 80019e6:	897b      	ldrh	r3, [r7, #10]
 80019e8:	b2db      	uxtb	r3, r3
 80019ea:	461a      	mov	r2, r3
 80019ec:	68fb      	ldr	r3, [r7, #12]
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80019f4:	611a      	str	r2, [r3, #16]
 80019f6:	e01b      	b.n	8001a30 <I2C_MasterRequestWrite+0xdc>
 80019f8:	897b      	ldrh	r3, [r7, #10]
 80019fa:	11db      	asrs	r3, r3, #7
 80019fc:	b2db      	uxtb	r3, r3
 80019fe:	f003 0306 	and.w	r3, r3, #6
 8001a02:	b2db      	uxtb	r3, r3
 8001a04:	f063 030f 	orn	r3, r3, #15
 8001a08:	b2da      	uxtb	r2, r3
 8001a0a:	68fb      	ldr	r3, [r7, #12]
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	611a      	str	r2, [r3, #16]
 8001a10:	683b      	ldr	r3, [r7, #0]
 8001a12:	687a      	ldr	r2, [r7, #4]
 8001a14:	490e      	ldr	r1, [pc, #56]	@ (8001a50 <I2C_MasterRequestWrite+0xfc>)
 8001a16:	68f8      	ldr	r0, [r7, #12]
 8001a18:	f000 f898 	bl	8001b4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001a1c:	4603      	mov	r3, r0
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d001      	beq.n	8001a26 <I2C_MasterRequestWrite+0xd2>
 8001a22:	2301      	movs	r3, #1
 8001a24:	e010      	b.n	8001a48 <I2C_MasterRequestWrite+0xf4>
 8001a26:	897b      	ldrh	r3, [r7, #10]
 8001a28:	b2da      	uxtb	r2, r3
 8001a2a:	68fb      	ldr	r3, [r7, #12]
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	611a      	str	r2, [r3, #16]
 8001a30:	683b      	ldr	r3, [r7, #0]
 8001a32:	687a      	ldr	r2, [r7, #4]
 8001a34:	4907      	ldr	r1, [pc, #28]	@ (8001a54 <I2C_MasterRequestWrite+0x100>)
 8001a36:	68f8      	ldr	r0, [r7, #12]
 8001a38:	f000 f888 	bl	8001b4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001a3c:	4603      	mov	r3, r0
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	d001      	beq.n	8001a46 <I2C_MasterRequestWrite+0xf2>
 8001a42:	2301      	movs	r3, #1
 8001a44:	e000      	b.n	8001a48 <I2C_MasterRequestWrite+0xf4>
 8001a46:	2300      	movs	r3, #0
 8001a48:	4618      	mov	r0, r3
 8001a4a:	3718      	adds	r7, #24
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	bd80      	pop	{r7, pc}
 8001a50:	00010008 	.word	0x00010008
 8001a54:	00010002 	.word	0x00010002

08001a58 <I2C_WaitOnFlagUntilTimeout>:
 8001a58:	b580      	push	{r7, lr}
 8001a5a:	b084      	sub	sp, #16
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	60f8      	str	r0, [r7, #12]
 8001a60:	60b9      	str	r1, [r7, #8]
 8001a62:	603b      	str	r3, [r7, #0]
 8001a64:	4613      	mov	r3, r2
 8001a66:	71fb      	strb	r3, [r7, #7]
 8001a68:	e048      	b.n	8001afc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001a6a:	683b      	ldr	r3, [r7, #0]
 8001a6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a70:	d044      	beq.n	8001afc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001a72:	f7ff fa7f 	bl	8000f74 <HAL_GetTick>
 8001a76:	4602      	mov	r2, r0
 8001a78:	69bb      	ldr	r3, [r7, #24]
 8001a7a:	1ad3      	subs	r3, r2, r3
 8001a7c:	683a      	ldr	r2, [r7, #0]
 8001a7e:	429a      	cmp	r2, r3
 8001a80:	d302      	bcc.n	8001a88 <I2C_WaitOnFlagUntilTimeout+0x30>
 8001a82:	683b      	ldr	r3, [r7, #0]
 8001a84:	2b00      	cmp	r3, #0
 8001a86:	d139      	bne.n	8001afc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001a88:	68bb      	ldr	r3, [r7, #8]
 8001a8a:	0c1b      	lsrs	r3, r3, #16
 8001a8c:	b2db      	uxtb	r3, r3
 8001a8e:	2b01      	cmp	r3, #1
 8001a90:	d10d      	bne.n	8001aae <I2C_WaitOnFlagUntilTimeout+0x56>
 8001a92:	68fb      	ldr	r3, [r7, #12]
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	695b      	ldr	r3, [r3, #20]
 8001a98:	43da      	mvns	r2, r3
 8001a9a:	68bb      	ldr	r3, [r7, #8]
 8001a9c:	4013      	ands	r3, r2
 8001a9e:	b29b      	uxth	r3, r3
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	bf0c      	ite	eq
 8001aa4:	2301      	moveq	r3, #1
 8001aa6:	2300      	movne	r3, #0
 8001aa8:	b2db      	uxtb	r3, r3
 8001aaa:	461a      	mov	r2, r3
 8001aac:	e00c      	b.n	8001ac8 <I2C_WaitOnFlagUntilTimeout+0x70>
 8001aae:	68fb      	ldr	r3, [r7, #12]
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	699b      	ldr	r3, [r3, #24]
 8001ab4:	43da      	mvns	r2, r3
 8001ab6:	68bb      	ldr	r3, [r7, #8]
 8001ab8:	4013      	ands	r3, r2
 8001aba:	b29b      	uxth	r3, r3
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	bf0c      	ite	eq
 8001ac0:	2301      	moveq	r3, #1
 8001ac2:	2300      	movne	r3, #0
 8001ac4:	b2db      	uxtb	r3, r3
 8001ac6:	461a      	mov	r2, r3
 8001ac8:	79fb      	ldrb	r3, [r7, #7]
 8001aca:	429a      	cmp	r2, r3
 8001acc:	d116      	bne.n	8001afc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ad4:	68fb      	ldr	r3, [r7, #12]
 8001ad6:	2220      	movs	r2, #32
 8001ad8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001adc:	68fb      	ldr	r3, [r7, #12]
 8001ade:	2200      	movs	r2, #0
 8001ae0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001ae4:	68fb      	ldr	r3, [r7, #12]
 8001ae6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ae8:	f043 0220 	orr.w	r2, r3, #32
 8001aec:	68fb      	ldr	r3, [r7, #12]
 8001aee:	641a      	str	r2, [r3, #64]	@ 0x40
 8001af0:	68fb      	ldr	r3, [r7, #12]
 8001af2:	2200      	movs	r2, #0
 8001af4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001af8:	2301      	movs	r3, #1
 8001afa:	e023      	b.n	8001b44 <I2C_WaitOnFlagUntilTimeout+0xec>
 8001afc:	68bb      	ldr	r3, [r7, #8]
 8001afe:	0c1b      	lsrs	r3, r3, #16
 8001b00:	b2db      	uxtb	r3, r3
 8001b02:	2b01      	cmp	r3, #1
 8001b04:	d10d      	bne.n	8001b22 <I2C_WaitOnFlagUntilTimeout+0xca>
 8001b06:	68fb      	ldr	r3, [r7, #12]
 8001b08:	681b      	ldr	r3, [r3, #0]
 8001b0a:	695b      	ldr	r3, [r3, #20]
 8001b0c:	43da      	mvns	r2, r3
 8001b0e:	68bb      	ldr	r3, [r7, #8]
 8001b10:	4013      	ands	r3, r2
 8001b12:	b29b      	uxth	r3, r3
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	bf0c      	ite	eq
 8001b18:	2301      	moveq	r3, #1
 8001b1a:	2300      	movne	r3, #0
 8001b1c:	b2db      	uxtb	r3, r3
 8001b1e:	461a      	mov	r2, r3
 8001b20:	e00c      	b.n	8001b3c <I2C_WaitOnFlagUntilTimeout+0xe4>
 8001b22:	68fb      	ldr	r3, [r7, #12]
 8001b24:	681b      	ldr	r3, [r3, #0]
 8001b26:	699b      	ldr	r3, [r3, #24]
 8001b28:	43da      	mvns	r2, r3
 8001b2a:	68bb      	ldr	r3, [r7, #8]
 8001b2c:	4013      	ands	r3, r2
 8001b2e:	b29b      	uxth	r3, r3
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	bf0c      	ite	eq
 8001b34:	2301      	moveq	r3, #1
 8001b36:	2300      	movne	r3, #0
 8001b38:	b2db      	uxtb	r3, r3
 8001b3a:	461a      	mov	r2, r3
 8001b3c:	79fb      	ldrb	r3, [r7, #7]
 8001b3e:	429a      	cmp	r2, r3
 8001b40:	d093      	beq.n	8001a6a <I2C_WaitOnFlagUntilTimeout+0x12>
 8001b42:	2300      	movs	r3, #0
 8001b44:	4618      	mov	r0, r3
 8001b46:	3710      	adds	r7, #16
 8001b48:	46bd      	mov	sp, r7
 8001b4a:	bd80      	pop	{r7, pc}

08001b4c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b084      	sub	sp, #16
 8001b50:	af00      	add	r7, sp, #0
 8001b52:	60f8      	str	r0, [r7, #12]
 8001b54:	60b9      	str	r1, [r7, #8]
 8001b56:	607a      	str	r2, [r7, #4]
 8001b58:	603b      	str	r3, [r7, #0]
 8001b5a:	e071      	b.n	8001c40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001b5c:	68fb      	ldr	r3, [r7, #12]
 8001b5e:	681b      	ldr	r3, [r3, #0]
 8001b60:	695b      	ldr	r3, [r3, #20]
 8001b62:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001b66:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001b6a:	d123      	bne.n	8001bb4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	681a      	ldr	r2, [r3, #0]
 8001b72:	68fb      	ldr	r3, [r7, #12]
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001b7a:	601a      	str	r2, [r3, #0]
 8001b7c:	68fb      	ldr	r3, [r7, #12]
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8001b84:	615a      	str	r2, [r3, #20]
 8001b86:	68fb      	ldr	r3, [r7, #12]
 8001b88:	2200      	movs	r2, #0
 8001b8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	2220      	movs	r2, #32
 8001b90:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001b94:	68fb      	ldr	r3, [r7, #12]
 8001b96:	2200      	movs	r2, #0
 8001b98:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001b9c:	68fb      	ldr	r3, [r7, #12]
 8001b9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ba0:	f043 0204 	orr.w	r2, r3, #4
 8001ba4:	68fb      	ldr	r3, [r7, #12]
 8001ba6:	641a      	str	r2, [r3, #64]	@ 0x40
 8001ba8:	68fb      	ldr	r3, [r7, #12]
 8001baa:	2200      	movs	r2, #0
 8001bac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001bb0:	2301      	movs	r3, #1
 8001bb2:	e067      	b.n	8001c84 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001bba:	d041      	beq.n	8001c40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001bbc:	f7ff f9da 	bl	8000f74 <HAL_GetTick>
 8001bc0:	4602      	mov	r2, r0
 8001bc2:	683b      	ldr	r3, [r7, #0]
 8001bc4:	1ad3      	subs	r3, r2, r3
 8001bc6:	687a      	ldr	r2, [r7, #4]
 8001bc8:	429a      	cmp	r2, r3
 8001bca:	d302      	bcc.n	8001bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d136      	bne.n	8001c40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001bd2:	68bb      	ldr	r3, [r7, #8]
 8001bd4:	0c1b      	lsrs	r3, r3, #16
 8001bd6:	b2db      	uxtb	r3, r3
 8001bd8:	2b01      	cmp	r3, #1
 8001bda:	d10c      	bne.n	8001bf6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8001bdc:	68fb      	ldr	r3, [r7, #12]
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	695b      	ldr	r3, [r3, #20]
 8001be2:	43da      	mvns	r2, r3
 8001be4:	68bb      	ldr	r3, [r7, #8]
 8001be6:	4013      	ands	r3, r2
 8001be8:	b29b      	uxth	r3, r3
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	bf14      	ite	ne
 8001bee:	2301      	movne	r3, #1
 8001bf0:	2300      	moveq	r3, #0
 8001bf2:	b2db      	uxtb	r3, r3
 8001bf4:	e00b      	b.n	8001c0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8001bf6:	68fb      	ldr	r3, [r7, #12]
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	699b      	ldr	r3, [r3, #24]
 8001bfc:	43da      	mvns	r2, r3
 8001bfe:	68bb      	ldr	r3, [r7, #8]
 8001c00:	4013      	ands	r3, r2
 8001c02:	b29b      	uxth	r3, r3
 8001c04:	2b00      	cmp	r3, #0
 8001c06:	bf14      	ite	ne
 8001c08:	2301      	movne	r3, #1
 8001c0a:	2300      	moveq	r3, #0
 8001c0c:	b2db      	uxtb	r3, r3
 8001c0e:	2b00      	cmp	r3, #0
 8001c10:	d016      	beq.n	8001c40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	2200      	movs	r2, #0
 8001c16:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c18:	68fb      	ldr	r3, [r7, #12]
 8001c1a:	2220      	movs	r2, #32
 8001c1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001c20:	68fb      	ldr	r3, [r7, #12]
 8001c22:	2200      	movs	r2, #0
 8001c24:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001c28:	68fb      	ldr	r3, [r7, #12]
 8001c2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c2c:	f043 0220 	orr.w	r2, r3, #32
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c34:	68fb      	ldr	r3, [r7, #12]
 8001c36:	2200      	movs	r2, #0
 8001c38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	e021      	b.n	8001c84 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8001c40:	68bb      	ldr	r3, [r7, #8]
 8001c42:	0c1b      	lsrs	r3, r3, #16
 8001c44:	b2db      	uxtb	r3, r3
 8001c46:	2b01      	cmp	r3, #1
 8001c48:	d10c      	bne.n	8001c64 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8001c4a:	68fb      	ldr	r3, [r7, #12]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	695b      	ldr	r3, [r3, #20]
 8001c50:	43da      	mvns	r2, r3
 8001c52:	68bb      	ldr	r3, [r7, #8]
 8001c54:	4013      	ands	r3, r2
 8001c56:	b29b      	uxth	r3, r3
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	bf14      	ite	ne
 8001c5c:	2301      	movne	r3, #1
 8001c5e:	2300      	moveq	r3, #0
 8001c60:	b2db      	uxtb	r3, r3
 8001c62:	e00b      	b.n	8001c7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8001c64:	68fb      	ldr	r3, [r7, #12]
 8001c66:	681b      	ldr	r3, [r3, #0]
 8001c68:	699b      	ldr	r3, [r3, #24]
 8001c6a:	43da      	mvns	r2, r3
 8001c6c:	68bb      	ldr	r3, [r7, #8]
 8001c6e:	4013      	ands	r3, r2
 8001c70:	b29b      	uxth	r3, r3
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	bf14      	ite	ne
 8001c76:	2301      	movne	r3, #1
 8001c78:	2300      	moveq	r3, #0
 8001c7a:	b2db      	uxtb	r3, r3
 8001c7c:	2b00      	cmp	r3, #0
 8001c7e:	f47f af6d 	bne.w	8001b5c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8001c82:	2300      	movs	r3, #0
 8001c84:	4618      	mov	r0, r3
 8001c86:	3710      	adds	r7, #16
 8001c88:	46bd      	mov	sp, r7
 8001c8a:	bd80      	pop	{r7, pc}

08001c8c <I2C_WaitOnTXEFlagUntilTimeout>:
 8001c8c:	b580      	push	{r7, lr}
 8001c8e:	b084      	sub	sp, #16
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	60f8      	str	r0, [r7, #12]
 8001c94:	60b9      	str	r1, [r7, #8]
 8001c96:	607a      	str	r2, [r7, #4]
 8001c98:	e034      	b.n	8001d04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8001c9a:	68f8      	ldr	r0, [r7, #12]
 8001c9c:	f000 f886 	bl	8001dac <I2C_IsAcknowledgeFailed>
 8001ca0:	4603      	mov	r3, r0
 8001ca2:	2b00      	cmp	r3, #0
 8001ca4:	d001      	beq.n	8001caa <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8001ca6:	2301      	movs	r3, #1
 8001ca8:	e034      	b.n	8001d14 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8001caa:	68bb      	ldr	r3, [r7, #8]
 8001cac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cb0:	d028      	beq.n	8001d04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8001cb2:	f7ff f95f 	bl	8000f74 <HAL_GetTick>
 8001cb6:	4602      	mov	r2, r0
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	1ad3      	subs	r3, r2, r3
 8001cbc:	68ba      	ldr	r2, [r7, #8]
 8001cbe:	429a      	cmp	r2, r3
 8001cc0:	d302      	bcc.n	8001cc8 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8001cc2:	68bb      	ldr	r3, [r7, #8]
 8001cc4:	2b00      	cmp	r3, #0
 8001cc6:	d11d      	bne.n	8001d04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8001cc8:	68fb      	ldr	r3, [r7, #12]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	695b      	ldr	r3, [r3, #20]
 8001cce:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001cd2:	2b80      	cmp	r3, #128	@ 0x80
 8001cd4:	d016      	beq.n	8001d04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8001cd6:	68fb      	ldr	r3, [r7, #12]
 8001cd8:	2200      	movs	r2, #0
 8001cda:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cdc:	68fb      	ldr	r3, [r7, #12]
 8001cde:	2220      	movs	r2, #32
 8001ce0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ce4:	68fb      	ldr	r3, [r7, #12]
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001cec:	68fb      	ldr	r3, [r7, #12]
 8001cee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001cf0:	f043 0220 	orr.w	r2, r3, #32
 8001cf4:	68fb      	ldr	r3, [r7, #12]
 8001cf6:	641a      	str	r2, [r3, #64]	@ 0x40
 8001cf8:	68fb      	ldr	r3, [r7, #12]
 8001cfa:	2200      	movs	r2, #0
 8001cfc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d00:	2301      	movs	r3, #1
 8001d02:	e007      	b.n	8001d14 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8001d04:	68fb      	ldr	r3, [r7, #12]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	695b      	ldr	r3, [r3, #20]
 8001d0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001d0e:	2b80      	cmp	r3, #128	@ 0x80
 8001d10:	d1c3      	bne.n	8001c9a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8001d12:	2300      	movs	r3, #0
 8001d14:	4618      	mov	r0, r3
 8001d16:	3710      	adds	r7, #16
 8001d18:	46bd      	mov	sp, r7
 8001d1a:	bd80      	pop	{r7, pc}

08001d1c <I2C_WaitOnBTFFlagUntilTimeout>:
 8001d1c:	b580      	push	{r7, lr}
 8001d1e:	b084      	sub	sp, #16
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	60f8      	str	r0, [r7, #12]
 8001d24:	60b9      	str	r1, [r7, #8]
 8001d26:	607a      	str	r2, [r7, #4]
 8001d28:	e034      	b.n	8001d94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8001d2a:	68f8      	ldr	r0, [r7, #12]
 8001d2c:	f000 f83e 	bl	8001dac <I2C_IsAcknowledgeFailed>
 8001d30:	4603      	mov	r3, r0
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d001      	beq.n	8001d3a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8001d36:	2301      	movs	r3, #1
 8001d38:	e034      	b.n	8001da4 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8001d3a:	68bb      	ldr	r3, [r7, #8]
 8001d3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001d40:	d028      	beq.n	8001d94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8001d42:	f7ff f917 	bl	8000f74 <HAL_GetTick>
 8001d46:	4602      	mov	r2, r0
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	1ad3      	subs	r3, r2, r3
 8001d4c:	68ba      	ldr	r2, [r7, #8]
 8001d4e:	429a      	cmp	r2, r3
 8001d50:	d302      	bcc.n	8001d58 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8001d52:	68bb      	ldr	r3, [r7, #8]
 8001d54:	2b00      	cmp	r3, #0
 8001d56:	d11d      	bne.n	8001d94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8001d58:	68fb      	ldr	r3, [r7, #12]
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	695b      	ldr	r3, [r3, #20]
 8001d5e:	f003 0304 	and.w	r3, r3, #4
 8001d62:	2b04      	cmp	r3, #4
 8001d64:	d016      	beq.n	8001d94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8001d66:	68fb      	ldr	r3, [r7, #12]
 8001d68:	2200      	movs	r2, #0
 8001d6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d6c:	68fb      	ldr	r3, [r7, #12]
 8001d6e:	2220      	movs	r2, #32
 8001d70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	2200      	movs	r2, #0
 8001d78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001d7c:	68fb      	ldr	r3, [r7, #12]
 8001d7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d80:	f043 0220 	orr.w	r2, r3, #32
 8001d84:	68fb      	ldr	r3, [r7, #12]
 8001d86:	641a      	str	r2, [r3, #64]	@ 0x40
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	2200      	movs	r2, #0
 8001d8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d90:	2301      	movs	r3, #1
 8001d92:	e007      	b.n	8001da4 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8001d94:	68fb      	ldr	r3, [r7, #12]
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	695b      	ldr	r3, [r3, #20]
 8001d9a:	f003 0304 	and.w	r3, r3, #4
 8001d9e:	2b04      	cmp	r3, #4
 8001da0:	d1c3      	bne.n	8001d2a <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8001da2:	2300      	movs	r3, #0
 8001da4:	4618      	mov	r0, r3
 8001da6:	3710      	adds	r7, #16
 8001da8:	46bd      	mov	sp, r7
 8001daa:	bd80      	pop	{r7, pc}

08001dac <I2C_IsAcknowledgeFailed>:
 8001dac:	b480      	push	{r7}
 8001dae:	b083      	sub	sp, #12
 8001db0:	af00      	add	r7, sp, #0
 8001db2:	6078      	str	r0, [r7, #4]
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	695b      	ldr	r3, [r3, #20]
 8001dba:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001dbe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001dc2:	d11b      	bne.n	8001dfc <I2C_IsAcknowledgeFailed+0x50>
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8001dcc:	615a      	str	r2, [r3, #20]
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	2200      	movs	r2, #0
 8001dd2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	2220      	movs	r2, #32
 8001dd8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	2200      	movs	r2, #0
 8001de0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001de8:	f043 0204 	orr.w	r2, r3, #4
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	641a      	str	r2, [r3, #64]	@ 0x40
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	2200      	movs	r2, #0
 8001df4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001df8:	2301      	movs	r3, #1
 8001dfa:	e000      	b.n	8001dfe <I2C_IsAcknowledgeFailed+0x52>
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	4618      	mov	r0, r3
 8001e00:	370c      	adds	r7, #12
 8001e02:	46bd      	mov	sp, r7
 8001e04:	bc80      	pop	{r7}
 8001e06:	4770      	bx	lr

08001e08 <HAL_RCC_OscConfig>:
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b086      	sub	sp, #24
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	6078      	str	r0, [r7, #4]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	2b00      	cmp	r3, #0
 8001e14:	d101      	bne.n	8001e1a <HAL_RCC_OscConfig+0x12>
 8001e16:	2301      	movs	r3, #1
 8001e18:	e272      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	f003 0301 	and.w	r3, r3, #1
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	f000 8087 	beq.w	8001f36 <HAL_RCC_OscConfig+0x12e>
 8001e28:	4b92      	ldr	r3, [pc, #584]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e2a:	685b      	ldr	r3, [r3, #4]
 8001e2c:	f003 030c 	and.w	r3, r3, #12
 8001e30:	2b04      	cmp	r3, #4
 8001e32:	d00c      	beq.n	8001e4e <HAL_RCC_OscConfig+0x46>
 8001e34:	4b8f      	ldr	r3, [pc, #572]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e36:	685b      	ldr	r3, [r3, #4]
 8001e38:	f003 030c 	and.w	r3, r3, #12
 8001e3c:	2b08      	cmp	r3, #8
 8001e3e:	d112      	bne.n	8001e66 <HAL_RCC_OscConfig+0x5e>
 8001e40:	4b8c      	ldr	r3, [pc, #560]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e42:	685b      	ldr	r3, [r3, #4]
 8001e44:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e48:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001e4c:	d10b      	bne.n	8001e66 <HAL_RCC_OscConfig+0x5e>
 8001e4e:	4b89      	ldr	r3, [pc, #548]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d06c      	beq.n	8001f34 <HAL_RCC_OscConfig+0x12c>
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	685b      	ldr	r3, [r3, #4]
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d168      	bne.n	8001f34 <HAL_RCC_OscConfig+0x12c>
 8001e62:	2301      	movs	r3, #1
 8001e64:	e24c      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	685b      	ldr	r3, [r3, #4]
 8001e6a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001e6e:	d106      	bne.n	8001e7e <HAL_RCC_OscConfig+0x76>
 8001e70:	4b80      	ldr	r3, [pc, #512]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	4a7f      	ldr	r2, [pc, #508]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e76:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001e7a:	6013      	str	r3, [r2, #0]
 8001e7c:	e02e      	b.n	8001edc <HAL_RCC_OscConfig+0xd4>
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	685b      	ldr	r3, [r3, #4]
 8001e82:	2b00      	cmp	r3, #0
 8001e84:	d10c      	bne.n	8001ea0 <HAL_RCC_OscConfig+0x98>
 8001e86:	4b7b      	ldr	r3, [pc, #492]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	4a7a      	ldr	r2, [pc, #488]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e8c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001e90:	6013      	str	r3, [r2, #0]
 8001e92:	4b78      	ldr	r3, [pc, #480]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	4a77      	ldr	r2, [pc, #476]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001e98:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001e9c:	6013      	str	r3, [r2, #0]
 8001e9e:	e01d      	b.n	8001edc <HAL_RCC_OscConfig+0xd4>
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	685b      	ldr	r3, [r3, #4]
 8001ea4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001ea8:	d10c      	bne.n	8001ec4 <HAL_RCC_OscConfig+0xbc>
 8001eaa:	4b72      	ldr	r3, [pc, #456]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	4a71      	ldr	r2, [pc, #452]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001eb0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001eb4:	6013      	str	r3, [r2, #0]
 8001eb6:	4b6f      	ldr	r3, [pc, #444]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001eb8:	681b      	ldr	r3, [r3, #0]
 8001eba:	4a6e      	ldr	r2, [pc, #440]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001ebc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001ec0:	6013      	str	r3, [r2, #0]
 8001ec2:	e00b      	b.n	8001edc <HAL_RCC_OscConfig+0xd4>
 8001ec4:	4b6b      	ldr	r3, [pc, #428]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	4a6a      	ldr	r2, [pc, #424]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001eca:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001ece:	6013      	str	r3, [r2, #0]
 8001ed0:	4b68      	ldr	r3, [pc, #416]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	4a67      	ldr	r2, [pc, #412]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001ed6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001eda:	6013      	str	r3, [r2, #0]
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	685b      	ldr	r3, [r3, #4]
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d013      	beq.n	8001f0c <HAL_RCC_OscConfig+0x104>
 8001ee4:	f7ff f846 	bl	8000f74 <HAL_GetTick>
 8001ee8:	6138      	str	r0, [r7, #16]
 8001eea:	e008      	b.n	8001efe <HAL_RCC_OscConfig+0xf6>
 8001eec:	f7ff f842 	bl	8000f74 <HAL_GetTick>
 8001ef0:	4602      	mov	r2, r0
 8001ef2:	693b      	ldr	r3, [r7, #16]
 8001ef4:	1ad3      	subs	r3, r2, r3
 8001ef6:	2b64      	cmp	r3, #100	@ 0x64
 8001ef8:	d901      	bls.n	8001efe <HAL_RCC_OscConfig+0xf6>
 8001efa:	2303      	movs	r3, #3
 8001efc:	e200      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001efe:	4b5d      	ldr	r3, [pc, #372]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f06:	2b00      	cmp	r3, #0
 8001f08:	d0f0      	beq.n	8001eec <HAL_RCC_OscConfig+0xe4>
 8001f0a:	e014      	b.n	8001f36 <HAL_RCC_OscConfig+0x12e>
 8001f0c:	f7ff f832 	bl	8000f74 <HAL_GetTick>
 8001f10:	6138      	str	r0, [r7, #16]
 8001f12:	e008      	b.n	8001f26 <HAL_RCC_OscConfig+0x11e>
 8001f14:	f7ff f82e 	bl	8000f74 <HAL_GetTick>
 8001f18:	4602      	mov	r2, r0
 8001f1a:	693b      	ldr	r3, [r7, #16]
 8001f1c:	1ad3      	subs	r3, r2, r3
 8001f1e:	2b64      	cmp	r3, #100	@ 0x64
 8001f20:	d901      	bls.n	8001f26 <HAL_RCC_OscConfig+0x11e>
 8001f22:	2303      	movs	r3, #3
 8001f24:	e1ec      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001f26:	4b53      	ldr	r3, [pc, #332]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	d1f0      	bne.n	8001f14 <HAL_RCC_OscConfig+0x10c>
 8001f32:	e000      	b.n	8001f36 <HAL_RCC_OscConfig+0x12e>
 8001f34:	bf00      	nop
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	f003 0302 	and.w	r3, r3, #2
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d063      	beq.n	800200a <HAL_RCC_OscConfig+0x202>
 8001f42:	4b4c      	ldr	r3, [pc, #304]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	f003 030c 	and.w	r3, r3, #12
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d00b      	beq.n	8001f66 <HAL_RCC_OscConfig+0x15e>
 8001f4e:	4b49      	ldr	r3, [pc, #292]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f50:	685b      	ldr	r3, [r3, #4]
 8001f52:	f003 030c 	and.w	r3, r3, #12
 8001f56:	2b08      	cmp	r3, #8
 8001f58:	d11c      	bne.n	8001f94 <HAL_RCC_OscConfig+0x18c>
 8001f5a:	4b46      	ldr	r3, [pc, #280]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f5c:	685b      	ldr	r3, [r3, #4]
 8001f5e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d116      	bne.n	8001f94 <HAL_RCC_OscConfig+0x18c>
 8001f66:	4b43      	ldr	r3, [pc, #268]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	f003 0302 	and.w	r3, r3, #2
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d005      	beq.n	8001f7e <HAL_RCC_OscConfig+0x176>
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	691b      	ldr	r3, [r3, #16]
 8001f76:	2b01      	cmp	r3, #1
 8001f78:	d001      	beq.n	8001f7e <HAL_RCC_OscConfig+0x176>
 8001f7a:	2301      	movs	r3, #1
 8001f7c:	e1c0      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001f7e:	4b3d      	ldr	r3, [pc, #244]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	695b      	ldr	r3, [r3, #20]
 8001f8a:	00db      	lsls	r3, r3, #3
 8001f8c:	4939      	ldr	r1, [pc, #228]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001f8e:	4313      	orrs	r3, r2
 8001f90:	600b      	str	r3, [r1, #0]
 8001f92:	e03a      	b.n	800200a <HAL_RCC_OscConfig+0x202>
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	691b      	ldr	r3, [r3, #16]
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d020      	beq.n	8001fde <HAL_RCC_OscConfig+0x1d6>
 8001f9c:	4b36      	ldr	r3, [pc, #216]	@ (8002078 <HAL_RCC_OscConfig+0x270>)
 8001f9e:	2201      	movs	r2, #1
 8001fa0:	601a      	str	r2, [r3, #0]
 8001fa2:	f7fe ffe7 	bl	8000f74 <HAL_GetTick>
 8001fa6:	6138      	str	r0, [r7, #16]
 8001fa8:	e008      	b.n	8001fbc <HAL_RCC_OscConfig+0x1b4>
 8001faa:	f7fe ffe3 	bl	8000f74 <HAL_GetTick>
 8001fae:	4602      	mov	r2, r0
 8001fb0:	693b      	ldr	r3, [r7, #16]
 8001fb2:	1ad3      	subs	r3, r2, r3
 8001fb4:	2b02      	cmp	r3, #2
 8001fb6:	d901      	bls.n	8001fbc <HAL_RCC_OscConfig+0x1b4>
 8001fb8:	2303      	movs	r3, #3
 8001fba:	e1a1      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001fbc:	4b2d      	ldr	r3, [pc, #180]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	f003 0302 	and.w	r3, r3, #2
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d0f0      	beq.n	8001faa <HAL_RCC_OscConfig+0x1a2>
 8001fc8:	4b2a      	ldr	r3, [pc, #168]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	695b      	ldr	r3, [r3, #20]
 8001fd4:	00db      	lsls	r3, r3, #3
 8001fd6:	4927      	ldr	r1, [pc, #156]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8001fd8:	4313      	orrs	r3, r2
 8001fda:	600b      	str	r3, [r1, #0]
 8001fdc:	e015      	b.n	800200a <HAL_RCC_OscConfig+0x202>
 8001fde:	4b26      	ldr	r3, [pc, #152]	@ (8002078 <HAL_RCC_OscConfig+0x270>)
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	601a      	str	r2, [r3, #0]
 8001fe4:	f7fe ffc6 	bl	8000f74 <HAL_GetTick>
 8001fe8:	6138      	str	r0, [r7, #16]
 8001fea:	e008      	b.n	8001ffe <HAL_RCC_OscConfig+0x1f6>
 8001fec:	f7fe ffc2 	bl	8000f74 <HAL_GetTick>
 8001ff0:	4602      	mov	r2, r0
 8001ff2:	693b      	ldr	r3, [r7, #16]
 8001ff4:	1ad3      	subs	r3, r2, r3
 8001ff6:	2b02      	cmp	r3, #2
 8001ff8:	d901      	bls.n	8001ffe <HAL_RCC_OscConfig+0x1f6>
 8001ffa:	2303      	movs	r3, #3
 8001ffc:	e180      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8001ffe:	4b1d      	ldr	r3, [pc, #116]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	f003 0302 	and.w	r3, r3, #2
 8002006:	2b00      	cmp	r3, #0
 8002008:	d1f0      	bne.n	8001fec <HAL_RCC_OscConfig+0x1e4>
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f003 0308 	and.w	r3, r3, #8
 8002012:	2b00      	cmp	r3, #0
 8002014:	d03a      	beq.n	800208c <HAL_RCC_OscConfig+0x284>
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	699b      	ldr	r3, [r3, #24]
 800201a:	2b00      	cmp	r3, #0
 800201c:	d019      	beq.n	8002052 <HAL_RCC_OscConfig+0x24a>
 800201e:	4b17      	ldr	r3, [pc, #92]	@ (800207c <HAL_RCC_OscConfig+0x274>)
 8002020:	2201      	movs	r2, #1
 8002022:	601a      	str	r2, [r3, #0]
 8002024:	f7fe ffa6 	bl	8000f74 <HAL_GetTick>
 8002028:	6138      	str	r0, [r7, #16]
 800202a:	e008      	b.n	800203e <HAL_RCC_OscConfig+0x236>
 800202c:	f7fe ffa2 	bl	8000f74 <HAL_GetTick>
 8002030:	4602      	mov	r2, r0
 8002032:	693b      	ldr	r3, [r7, #16]
 8002034:	1ad3      	subs	r3, r2, r3
 8002036:	2b02      	cmp	r3, #2
 8002038:	d901      	bls.n	800203e <HAL_RCC_OscConfig+0x236>
 800203a:	2303      	movs	r3, #3
 800203c:	e160      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 800203e:	4b0d      	ldr	r3, [pc, #52]	@ (8002074 <HAL_RCC_OscConfig+0x26c>)
 8002040:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002042:	f003 0302 	and.w	r3, r3, #2
 8002046:	2b00      	cmp	r3, #0
 8002048:	d0f0      	beq.n	800202c <HAL_RCC_OscConfig+0x224>
 800204a:	2001      	movs	r0, #1
 800204c:	f000 faba 	bl	80025c4 <RCC_Delay>
 8002050:	e01c      	b.n	800208c <HAL_RCC_OscConfig+0x284>
 8002052:	4b0a      	ldr	r3, [pc, #40]	@ (800207c <HAL_RCC_OscConfig+0x274>)
 8002054:	2200      	movs	r2, #0
 8002056:	601a      	str	r2, [r3, #0]
 8002058:	f7fe ff8c 	bl	8000f74 <HAL_GetTick>
 800205c:	6138      	str	r0, [r7, #16]
 800205e:	e00f      	b.n	8002080 <HAL_RCC_OscConfig+0x278>
 8002060:	f7fe ff88 	bl	8000f74 <HAL_GetTick>
 8002064:	4602      	mov	r2, r0
 8002066:	693b      	ldr	r3, [r7, #16]
 8002068:	1ad3      	subs	r3, r2, r3
 800206a:	2b02      	cmp	r3, #2
 800206c:	d908      	bls.n	8002080 <HAL_RCC_OscConfig+0x278>
 800206e:	2303      	movs	r3, #3
 8002070:	e146      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8002072:	bf00      	nop
 8002074:	40021000 	.word	0x40021000
 8002078:	42420000 	.word	0x42420000
 800207c:	42420480 	.word	0x42420480
 8002080:	4b92      	ldr	r3, [pc, #584]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002082:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002084:	f003 0302 	and.w	r3, r3, #2
 8002088:	2b00      	cmp	r3, #0
 800208a:	d1e9      	bne.n	8002060 <HAL_RCC_OscConfig+0x258>
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	f003 0304 	and.w	r3, r3, #4
 8002094:	2b00      	cmp	r3, #0
 8002096:	f000 80a6 	beq.w	80021e6 <HAL_RCC_OscConfig+0x3de>
 800209a:	2300      	movs	r3, #0
 800209c:	75fb      	strb	r3, [r7, #23]
 800209e:	4b8b      	ldr	r3, [pc, #556]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80020a0:	69db      	ldr	r3, [r3, #28]
 80020a2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020a6:	2b00      	cmp	r3, #0
 80020a8:	d10d      	bne.n	80020c6 <HAL_RCC_OscConfig+0x2be>
 80020aa:	4b88      	ldr	r3, [pc, #544]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80020ac:	69db      	ldr	r3, [r3, #28]
 80020ae:	4a87      	ldr	r2, [pc, #540]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80020b0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80020b4:	61d3      	str	r3, [r2, #28]
 80020b6:	4b85      	ldr	r3, [pc, #532]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80020b8:	69db      	ldr	r3, [r3, #28]
 80020ba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020be:	60bb      	str	r3, [r7, #8]
 80020c0:	68bb      	ldr	r3, [r7, #8]
 80020c2:	2301      	movs	r3, #1
 80020c4:	75fb      	strb	r3, [r7, #23]
 80020c6:	4b82      	ldr	r3, [pc, #520]	@ (80022d0 <HAL_RCC_OscConfig+0x4c8>)
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	d118      	bne.n	8002104 <HAL_RCC_OscConfig+0x2fc>
 80020d2:	4b7f      	ldr	r3, [pc, #508]	@ (80022d0 <HAL_RCC_OscConfig+0x4c8>)
 80020d4:	681b      	ldr	r3, [r3, #0]
 80020d6:	4a7e      	ldr	r2, [pc, #504]	@ (80022d0 <HAL_RCC_OscConfig+0x4c8>)
 80020d8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80020dc:	6013      	str	r3, [r2, #0]
 80020de:	f7fe ff49 	bl	8000f74 <HAL_GetTick>
 80020e2:	6138      	str	r0, [r7, #16]
 80020e4:	e008      	b.n	80020f8 <HAL_RCC_OscConfig+0x2f0>
 80020e6:	f7fe ff45 	bl	8000f74 <HAL_GetTick>
 80020ea:	4602      	mov	r2, r0
 80020ec:	693b      	ldr	r3, [r7, #16]
 80020ee:	1ad3      	subs	r3, r2, r3
 80020f0:	2b64      	cmp	r3, #100	@ 0x64
 80020f2:	d901      	bls.n	80020f8 <HAL_RCC_OscConfig+0x2f0>
 80020f4:	2303      	movs	r3, #3
 80020f6:	e103      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 80020f8:	4b75      	ldr	r3, [pc, #468]	@ (80022d0 <HAL_RCC_OscConfig+0x4c8>)
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002100:	2b00      	cmp	r3, #0
 8002102:	d0f0      	beq.n	80020e6 <HAL_RCC_OscConfig+0x2de>
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	68db      	ldr	r3, [r3, #12]
 8002108:	2b01      	cmp	r3, #1
 800210a:	d106      	bne.n	800211a <HAL_RCC_OscConfig+0x312>
 800210c:	4b6f      	ldr	r3, [pc, #444]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 800210e:	6a1b      	ldr	r3, [r3, #32]
 8002110:	4a6e      	ldr	r2, [pc, #440]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002112:	f043 0301 	orr.w	r3, r3, #1
 8002116:	6213      	str	r3, [r2, #32]
 8002118:	e02d      	b.n	8002176 <HAL_RCC_OscConfig+0x36e>
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	68db      	ldr	r3, [r3, #12]
 800211e:	2b00      	cmp	r3, #0
 8002120:	d10c      	bne.n	800213c <HAL_RCC_OscConfig+0x334>
 8002122:	4b6a      	ldr	r3, [pc, #424]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002124:	6a1b      	ldr	r3, [r3, #32]
 8002126:	4a69      	ldr	r2, [pc, #420]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002128:	f023 0301 	bic.w	r3, r3, #1
 800212c:	6213      	str	r3, [r2, #32]
 800212e:	4b67      	ldr	r3, [pc, #412]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002130:	6a1b      	ldr	r3, [r3, #32]
 8002132:	4a66      	ldr	r2, [pc, #408]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002134:	f023 0304 	bic.w	r3, r3, #4
 8002138:	6213      	str	r3, [r2, #32]
 800213a:	e01c      	b.n	8002176 <HAL_RCC_OscConfig+0x36e>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	68db      	ldr	r3, [r3, #12]
 8002140:	2b05      	cmp	r3, #5
 8002142:	d10c      	bne.n	800215e <HAL_RCC_OscConfig+0x356>
 8002144:	4b61      	ldr	r3, [pc, #388]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002146:	6a1b      	ldr	r3, [r3, #32]
 8002148:	4a60      	ldr	r2, [pc, #384]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 800214a:	f043 0304 	orr.w	r3, r3, #4
 800214e:	6213      	str	r3, [r2, #32]
 8002150:	4b5e      	ldr	r3, [pc, #376]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002152:	6a1b      	ldr	r3, [r3, #32]
 8002154:	4a5d      	ldr	r2, [pc, #372]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002156:	f043 0301 	orr.w	r3, r3, #1
 800215a:	6213      	str	r3, [r2, #32]
 800215c:	e00b      	b.n	8002176 <HAL_RCC_OscConfig+0x36e>
 800215e:	4b5b      	ldr	r3, [pc, #364]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002160:	6a1b      	ldr	r3, [r3, #32]
 8002162:	4a5a      	ldr	r2, [pc, #360]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002164:	f023 0301 	bic.w	r3, r3, #1
 8002168:	6213      	str	r3, [r2, #32]
 800216a:	4b58      	ldr	r3, [pc, #352]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 800216c:	6a1b      	ldr	r3, [r3, #32]
 800216e:	4a57      	ldr	r2, [pc, #348]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002170:	f023 0304 	bic.w	r3, r3, #4
 8002174:	6213      	str	r3, [r2, #32]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	68db      	ldr	r3, [r3, #12]
 800217a:	2b00      	cmp	r3, #0
 800217c:	d015      	beq.n	80021aa <HAL_RCC_OscConfig+0x3a2>
 800217e:	f7fe fef9 	bl	8000f74 <HAL_GetTick>
 8002182:	6138      	str	r0, [r7, #16]
 8002184:	e00a      	b.n	800219c <HAL_RCC_OscConfig+0x394>
 8002186:	f7fe fef5 	bl	8000f74 <HAL_GetTick>
 800218a:	4602      	mov	r2, r0
 800218c:	693b      	ldr	r3, [r7, #16]
 800218e:	1ad3      	subs	r3, r2, r3
 8002190:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002194:	4293      	cmp	r3, r2
 8002196:	d901      	bls.n	800219c <HAL_RCC_OscConfig+0x394>
 8002198:	2303      	movs	r3, #3
 800219a:	e0b1      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 800219c:	4b4b      	ldr	r3, [pc, #300]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 800219e:	6a1b      	ldr	r3, [r3, #32]
 80021a0:	f003 0302 	and.w	r3, r3, #2
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d0ee      	beq.n	8002186 <HAL_RCC_OscConfig+0x37e>
 80021a8:	e014      	b.n	80021d4 <HAL_RCC_OscConfig+0x3cc>
 80021aa:	f7fe fee3 	bl	8000f74 <HAL_GetTick>
 80021ae:	6138      	str	r0, [r7, #16]
 80021b0:	e00a      	b.n	80021c8 <HAL_RCC_OscConfig+0x3c0>
 80021b2:	f7fe fedf 	bl	8000f74 <HAL_GetTick>
 80021b6:	4602      	mov	r2, r0
 80021b8:	693b      	ldr	r3, [r7, #16]
 80021ba:	1ad3      	subs	r3, r2, r3
 80021bc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80021c0:	4293      	cmp	r3, r2
 80021c2:	d901      	bls.n	80021c8 <HAL_RCC_OscConfig+0x3c0>
 80021c4:	2303      	movs	r3, #3
 80021c6:	e09b      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 80021c8:	4b40      	ldr	r3, [pc, #256]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80021ca:	6a1b      	ldr	r3, [r3, #32]
 80021cc:	f003 0302 	and.w	r3, r3, #2
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d1ee      	bne.n	80021b2 <HAL_RCC_OscConfig+0x3aa>
 80021d4:	7dfb      	ldrb	r3, [r7, #23]
 80021d6:	2b01      	cmp	r3, #1
 80021d8:	d105      	bne.n	80021e6 <HAL_RCC_OscConfig+0x3de>
 80021da:	4b3c      	ldr	r3, [pc, #240]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80021dc:	69db      	ldr	r3, [r3, #28]
 80021de:	4a3b      	ldr	r2, [pc, #236]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80021e0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80021e4:	61d3      	str	r3, [r2, #28]
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	69db      	ldr	r3, [r3, #28]
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	f000 8087 	beq.w	80022fe <HAL_RCC_OscConfig+0x4f6>
 80021f0:	4b36      	ldr	r3, [pc, #216]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80021f2:	685b      	ldr	r3, [r3, #4]
 80021f4:	f003 030c 	and.w	r3, r3, #12
 80021f8:	2b08      	cmp	r3, #8
 80021fa:	d061      	beq.n	80022c0 <HAL_RCC_OscConfig+0x4b8>
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	69db      	ldr	r3, [r3, #28]
 8002200:	2b02      	cmp	r3, #2
 8002202:	d146      	bne.n	8002292 <HAL_RCC_OscConfig+0x48a>
 8002204:	4b33      	ldr	r3, [pc, #204]	@ (80022d4 <HAL_RCC_OscConfig+0x4cc>)
 8002206:	2200      	movs	r2, #0
 8002208:	601a      	str	r2, [r3, #0]
 800220a:	f7fe feb3 	bl	8000f74 <HAL_GetTick>
 800220e:	6138      	str	r0, [r7, #16]
 8002210:	e008      	b.n	8002224 <HAL_RCC_OscConfig+0x41c>
 8002212:	f7fe feaf 	bl	8000f74 <HAL_GetTick>
 8002216:	4602      	mov	r2, r0
 8002218:	693b      	ldr	r3, [r7, #16]
 800221a:	1ad3      	subs	r3, r2, r3
 800221c:	2b02      	cmp	r3, #2
 800221e:	d901      	bls.n	8002224 <HAL_RCC_OscConfig+0x41c>
 8002220:	2303      	movs	r3, #3
 8002222:	e06d      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8002224:	4b29      	ldr	r3, [pc, #164]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800222c:	2b00      	cmp	r3, #0
 800222e:	d1f0      	bne.n	8002212 <HAL_RCC_OscConfig+0x40a>
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	6a1b      	ldr	r3, [r3, #32]
 8002234:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002238:	d108      	bne.n	800224c <HAL_RCC_OscConfig+0x444>
 800223a:	4b24      	ldr	r3, [pc, #144]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 800223c:	685b      	ldr	r3, [r3, #4]
 800223e:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	689b      	ldr	r3, [r3, #8]
 8002246:	4921      	ldr	r1, [pc, #132]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002248:	4313      	orrs	r3, r2
 800224a:	604b      	str	r3, [r1, #4]
 800224c:	4b1f      	ldr	r3, [pc, #124]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 800224e:	685b      	ldr	r3, [r3, #4]
 8002250:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	6a19      	ldr	r1, [r3, #32]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800225c:	430b      	orrs	r3, r1
 800225e:	491b      	ldr	r1, [pc, #108]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002260:	4313      	orrs	r3, r2
 8002262:	604b      	str	r3, [r1, #4]
 8002264:	4b1b      	ldr	r3, [pc, #108]	@ (80022d4 <HAL_RCC_OscConfig+0x4cc>)
 8002266:	2201      	movs	r2, #1
 8002268:	601a      	str	r2, [r3, #0]
 800226a:	f7fe fe83 	bl	8000f74 <HAL_GetTick>
 800226e:	6138      	str	r0, [r7, #16]
 8002270:	e008      	b.n	8002284 <HAL_RCC_OscConfig+0x47c>
 8002272:	f7fe fe7f 	bl	8000f74 <HAL_GetTick>
 8002276:	4602      	mov	r2, r0
 8002278:	693b      	ldr	r3, [r7, #16]
 800227a:	1ad3      	subs	r3, r2, r3
 800227c:	2b02      	cmp	r3, #2
 800227e:	d901      	bls.n	8002284 <HAL_RCC_OscConfig+0x47c>
 8002280:	2303      	movs	r3, #3
 8002282:	e03d      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 8002284:	4b11      	ldr	r3, [pc, #68]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800228c:	2b00      	cmp	r3, #0
 800228e:	d0f0      	beq.n	8002272 <HAL_RCC_OscConfig+0x46a>
 8002290:	e035      	b.n	80022fe <HAL_RCC_OscConfig+0x4f6>
 8002292:	4b10      	ldr	r3, [pc, #64]	@ (80022d4 <HAL_RCC_OscConfig+0x4cc>)
 8002294:	2200      	movs	r2, #0
 8002296:	601a      	str	r2, [r3, #0]
 8002298:	f7fe fe6c 	bl	8000f74 <HAL_GetTick>
 800229c:	6138      	str	r0, [r7, #16]
 800229e:	e008      	b.n	80022b2 <HAL_RCC_OscConfig+0x4aa>
 80022a0:	f7fe fe68 	bl	8000f74 <HAL_GetTick>
 80022a4:	4602      	mov	r2, r0
 80022a6:	693b      	ldr	r3, [r7, #16]
 80022a8:	1ad3      	subs	r3, r2, r3
 80022aa:	2b02      	cmp	r3, #2
 80022ac:	d901      	bls.n	80022b2 <HAL_RCC_OscConfig+0x4aa>
 80022ae:	2303      	movs	r3, #3
 80022b0:	e026      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 80022b2:	4b06      	ldr	r3, [pc, #24]	@ (80022cc <HAL_RCC_OscConfig+0x4c4>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d1f0      	bne.n	80022a0 <HAL_RCC_OscConfig+0x498>
 80022be:	e01e      	b.n	80022fe <HAL_RCC_OscConfig+0x4f6>
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	69db      	ldr	r3, [r3, #28]
 80022c4:	2b01      	cmp	r3, #1
 80022c6:	d107      	bne.n	80022d8 <HAL_RCC_OscConfig+0x4d0>
 80022c8:	2301      	movs	r3, #1
 80022ca:	e019      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 80022cc:	40021000 	.word	0x40021000
 80022d0:	40007000 	.word	0x40007000
 80022d4:	42420060 	.word	0x42420060
 80022d8:	4b0b      	ldr	r3, [pc, #44]	@ (8002308 <HAL_RCC_OscConfig+0x500>)
 80022da:	685b      	ldr	r3, [r3, #4]
 80022dc:	60fb      	str	r3, [r7, #12]
 80022de:	68fb      	ldr	r3, [r7, #12]
 80022e0:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	6a1b      	ldr	r3, [r3, #32]
 80022e8:	429a      	cmp	r2, r3
 80022ea:	d106      	bne.n	80022fa <HAL_RCC_OscConfig+0x4f2>
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022f6:	429a      	cmp	r2, r3
 80022f8:	d001      	beq.n	80022fe <HAL_RCC_OscConfig+0x4f6>
 80022fa:	2301      	movs	r3, #1
 80022fc:	e000      	b.n	8002300 <HAL_RCC_OscConfig+0x4f8>
 80022fe:	2300      	movs	r3, #0
 8002300:	4618      	mov	r0, r3
 8002302:	3718      	adds	r7, #24
 8002304:	46bd      	mov	sp, r7
 8002306:	bd80      	pop	{r7, pc}
 8002308:	40021000 	.word	0x40021000

0800230c <HAL_RCC_ClockConfig>:
 800230c:	b580      	push	{r7, lr}
 800230e:	b084      	sub	sp, #16
 8002310:	af00      	add	r7, sp, #0
 8002312:	6078      	str	r0, [r7, #4]
 8002314:	6039      	str	r1, [r7, #0]
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	2b00      	cmp	r3, #0
 800231a:	d101      	bne.n	8002320 <HAL_RCC_ClockConfig+0x14>
 800231c:	2301      	movs	r3, #1
 800231e:	e0d0      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 8002320:	4b6a      	ldr	r3, [pc, #424]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	f003 0307 	and.w	r3, r3, #7
 8002328:	683a      	ldr	r2, [r7, #0]
 800232a:	429a      	cmp	r2, r3
 800232c:	d910      	bls.n	8002350 <HAL_RCC_ClockConfig+0x44>
 800232e:	4b67      	ldr	r3, [pc, #412]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	f023 0207 	bic.w	r2, r3, #7
 8002336:	4965      	ldr	r1, [pc, #404]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 8002338:	683b      	ldr	r3, [r7, #0]
 800233a:	4313      	orrs	r3, r2
 800233c:	600b      	str	r3, [r1, #0]
 800233e:	4b63      	ldr	r3, [pc, #396]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f003 0307 	and.w	r3, r3, #7
 8002346:	683a      	ldr	r2, [r7, #0]
 8002348:	429a      	cmp	r2, r3
 800234a:	d001      	beq.n	8002350 <HAL_RCC_ClockConfig+0x44>
 800234c:	2301      	movs	r3, #1
 800234e:	e0b8      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	681b      	ldr	r3, [r3, #0]
 8002354:	f003 0302 	and.w	r3, r3, #2
 8002358:	2b00      	cmp	r3, #0
 800235a:	d020      	beq.n	800239e <HAL_RCC_ClockConfig+0x92>
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f003 0304 	and.w	r3, r3, #4
 8002364:	2b00      	cmp	r3, #0
 8002366:	d005      	beq.n	8002374 <HAL_RCC_ClockConfig+0x68>
 8002368:	4b59      	ldr	r3, [pc, #356]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 800236a:	685b      	ldr	r3, [r3, #4]
 800236c:	4a58      	ldr	r2, [pc, #352]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 800236e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002372:	6053      	str	r3, [r2, #4]
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	f003 0308 	and.w	r3, r3, #8
 800237c:	2b00      	cmp	r3, #0
 800237e:	d005      	beq.n	800238c <HAL_RCC_ClockConfig+0x80>
 8002380:	4b53      	ldr	r3, [pc, #332]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002382:	685b      	ldr	r3, [r3, #4]
 8002384:	4a52      	ldr	r2, [pc, #328]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002386:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 800238a:	6053      	str	r3, [r2, #4]
 800238c:	4b50      	ldr	r3, [pc, #320]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 800238e:	685b      	ldr	r3, [r3, #4]
 8002390:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	689b      	ldr	r3, [r3, #8]
 8002398:	494d      	ldr	r1, [pc, #308]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 800239a:	4313      	orrs	r3, r2
 800239c:	604b      	str	r3, [r1, #4]
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	f003 0301 	and.w	r3, r3, #1
 80023a6:	2b00      	cmp	r3, #0
 80023a8:	d040      	beq.n	800242c <HAL_RCC_ClockConfig+0x120>
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	685b      	ldr	r3, [r3, #4]
 80023ae:	2b01      	cmp	r3, #1
 80023b0:	d107      	bne.n	80023c2 <HAL_RCC_ClockConfig+0xb6>
 80023b2:	4b47      	ldr	r3, [pc, #284]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d115      	bne.n	80023ea <HAL_RCC_ClockConfig+0xde>
 80023be:	2301      	movs	r3, #1
 80023c0:	e07f      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	685b      	ldr	r3, [r3, #4]
 80023c6:	2b02      	cmp	r3, #2
 80023c8:	d107      	bne.n	80023da <HAL_RCC_ClockConfig+0xce>
 80023ca:	4b41      	ldr	r3, [pc, #260]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 80023cc:	681b      	ldr	r3, [r3, #0]
 80023ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80023d2:	2b00      	cmp	r3, #0
 80023d4:	d109      	bne.n	80023ea <HAL_RCC_ClockConfig+0xde>
 80023d6:	2301      	movs	r3, #1
 80023d8:	e073      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 80023da:	4b3d      	ldr	r3, [pc, #244]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	f003 0302 	and.w	r3, r3, #2
 80023e2:	2b00      	cmp	r3, #0
 80023e4:	d101      	bne.n	80023ea <HAL_RCC_ClockConfig+0xde>
 80023e6:	2301      	movs	r3, #1
 80023e8:	e06b      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 80023ea:	4b39      	ldr	r3, [pc, #228]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 80023ec:	685b      	ldr	r3, [r3, #4]
 80023ee:	f023 0203 	bic.w	r2, r3, #3
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	685b      	ldr	r3, [r3, #4]
 80023f6:	4936      	ldr	r1, [pc, #216]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 80023f8:	4313      	orrs	r3, r2
 80023fa:	604b      	str	r3, [r1, #4]
 80023fc:	f7fe fdba 	bl	8000f74 <HAL_GetTick>
 8002400:	60f8      	str	r0, [r7, #12]
 8002402:	e00a      	b.n	800241a <HAL_RCC_ClockConfig+0x10e>
 8002404:	f7fe fdb6 	bl	8000f74 <HAL_GetTick>
 8002408:	4602      	mov	r2, r0
 800240a:	68fb      	ldr	r3, [r7, #12]
 800240c:	1ad3      	subs	r3, r2, r3
 800240e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002412:	4293      	cmp	r3, r2
 8002414:	d901      	bls.n	800241a <HAL_RCC_ClockConfig+0x10e>
 8002416:	2303      	movs	r3, #3
 8002418:	e053      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 800241a:	4b2d      	ldr	r3, [pc, #180]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 800241c:	685b      	ldr	r3, [r3, #4]
 800241e:	f003 020c 	and.w	r2, r3, #12
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	685b      	ldr	r3, [r3, #4]
 8002426:	009b      	lsls	r3, r3, #2
 8002428:	429a      	cmp	r2, r3
 800242a:	d1eb      	bne.n	8002404 <HAL_RCC_ClockConfig+0xf8>
 800242c:	4b27      	ldr	r3, [pc, #156]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	f003 0307 	and.w	r3, r3, #7
 8002434:	683a      	ldr	r2, [r7, #0]
 8002436:	429a      	cmp	r2, r3
 8002438:	d210      	bcs.n	800245c <HAL_RCC_ClockConfig+0x150>
 800243a:	4b24      	ldr	r3, [pc, #144]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 800243c:	681b      	ldr	r3, [r3, #0]
 800243e:	f023 0207 	bic.w	r2, r3, #7
 8002442:	4922      	ldr	r1, [pc, #136]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 8002444:	683b      	ldr	r3, [r7, #0]
 8002446:	4313      	orrs	r3, r2
 8002448:	600b      	str	r3, [r1, #0]
 800244a:	4b20      	ldr	r3, [pc, #128]	@ (80024cc <HAL_RCC_ClockConfig+0x1c0>)
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	f003 0307 	and.w	r3, r3, #7
 8002452:	683a      	ldr	r2, [r7, #0]
 8002454:	429a      	cmp	r2, r3
 8002456:	d001      	beq.n	800245c <HAL_RCC_ClockConfig+0x150>
 8002458:	2301      	movs	r3, #1
 800245a:	e032      	b.n	80024c2 <HAL_RCC_ClockConfig+0x1b6>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	f003 0304 	and.w	r3, r3, #4
 8002464:	2b00      	cmp	r3, #0
 8002466:	d008      	beq.n	800247a <HAL_RCC_ClockConfig+0x16e>
 8002468:	4b19      	ldr	r3, [pc, #100]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 800246a:	685b      	ldr	r3, [r3, #4]
 800246c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	68db      	ldr	r3, [r3, #12]
 8002474:	4916      	ldr	r1, [pc, #88]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002476:	4313      	orrs	r3, r2
 8002478:	604b      	str	r3, [r1, #4]
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	f003 0308 	and.w	r3, r3, #8
 8002482:	2b00      	cmp	r3, #0
 8002484:	d009      	beq.n	800249a <HAL_RCC_ClockConfig+0x18e>
 8002486:	4b12      	ldr	r3, [pc, #72]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002488:	685b      	ldr	r3, [r3, #4]
 800248a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	691b      	ldr	r3, [r3, #16]
 8002492:	00db      	lsls	r3, r3, #3
 8002494:	490e      	ldr	r1, [pc, #56]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 8002496:	4313      	orrs	r3, r2
 8002498:	604b      	str	r3, [r1, #4]
 800249a:	f000 f821 	bl	80024e0 <HAL_RCC_GetSysClockFreq>
 800249e:	4602      	mov	r2, r0
 80024a0:	4b0b      	ldr	r3, [pc, #44]	@ (80024d0 <HAL_RCC_ClockConfig+0x1c4>)
 80024a2:	685b      	ldr	r3, [r3, #4]
 80024a4:	091b      	lsrs	r3, r3, #4
 80024a6:	f003 030f 	and.w	r3, r3, #15
 80024aa:	490a      	ldr	r1, [pc, #40]	@ (80024d4 <HAL_RCC_ClockConfig+0x1c8>)
 80024ac:	5ccb      	ldrb	r3, [r1, r3]
 80024ae:	fa22 f303 	lsr.w	r3, r2, r3
 80024b2:	4a09      	ldr	r2, [pc, #36]	@ (80024d8 <HAL_RCC_ClockConfig+0x1cc>)
 80024b4:	6013      	str	r3, [r2, #0]
 80024b6:	4b09      	ldr	r3, [pc, #36]	@ (80024dc <HAL_RCC_ClockConfig+0x1d0>)
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	4618      	mov	r0, r3
 80024bc:	f7fe fd18 	bl	8000ef0 <HAL_InitTick>
 80024c0:	2300      	movs	r3, #0
 80024c2:	4618      	mov	r0, r3
 80024c4:	3710      	adds	r7, #16
 80024c6:	46bd      	mov	sp, r7
 80024c8:	bd80      	pop	{r7, pc}
 80024ca:	bf00      	nop
 80024cc:	40022000 	.word	0x40022000
 80024d0:	40021000 	.word	0x40021000
 80024d4:	08002784 	.word	0x08002784
 80024d8:	20000000 	.word	0x20000000
 80024dc:	20000004 	.word	0x20000004

080024e0 <HAL_RCC_GetSysClockFreq>:
 80024e0:	b480      	push	{r7}
 80024e2:	b087      	sub	sp, #28
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	2300      	movs	r3, #0
 80024e8:	60fb      	str	r3, [r7, #12]
 80024ea:	2300      	movs	r3, #0
 80024ec:	60bb      	str	r3, [r7, #8]
 80024ee:	2300      	movs	r3, #0
 80024f0:	617b      	str	r3, [r7, #20]
 80024f2:	2300      	movs	r3, #0
 80024f4:	607b      	str	r3, [r7, #4]
 80024f6:	2300      	movs	r3, #0
 80024f8:	613b      	str	r3, [r7, #16]
 80024fa:	4b1e      	ldr	r3, [pc, #120]	@ (8002574 <HAL_RCC_GetSysClockFreq+0x94>)
 80024fc:	685b      	ldr	r3, [r3, #4]
 80024fe:	60fb      	str	r3, [r7, #12]
 8002500:	68fb      	ldr	r3, [r7, #12]
 8002502:	f003 030c 	and.w	r3, r3, #12
 8002506:	2b04      	cmp	r3, #4
 8002508:	d002      	beq.n	8002510 <HAL_RCC_GetSysClockFreq+0x30>
 800250a:	2b08      	cmp	r3, #8
 800250c:	d003      	beq.n	8002516 <HAL_RCC_GetSysClockFreq+0x36>
 800250e:	e027      	b.n	8002560 <HAL_RCC_GetSysClockFreq+0x80>
 8002510:	4b19      	ldr	r3, [pc, #100]	@ (8002578 <HAL_RCC_GetSysClockFreq+0x98>)
 8002512:	613b      	str	r3, [r7, #16]
 8002514:	e027      	b.n	8002566 <HAL_RCC_GetSysClockFreq+0x86>
 8002516:	68fb      	ldr	r3, [r7, #12]
 8002518:	0c9b      	lsrs	r3, r3, #18
 800251a:	f003 030f 	and.w	r3, r3, #15
 800251e:	4a17      	ldr	r2, [pc, #92]	@ (800257c <HAL_RCC_GetSysClockFreq+0x9c>)
 8002520:	5cd3      	ldrb	r3, [r2, r3]
 8002522:	607b      	str	r3, [r7, #4]
 8002524:	68fb      	ldr	r3, [r7, #12]
 8002526:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800252a:	2b00      	cmp	r3, #0
 800252c:	d010      	beq.n	8002550 <HAL_RCC_GetSysClockFreq+0x70>
 800252e:	4b11      	ldr	r3, [pc, #68]	@ (8002574 <HAL_RCC_GetSysClockFreq+0x94>)
 8002530:	685b      	ldr	r3, [r3, #4]
 8002532:	0c5b      	lsrs	r3, r3, #17
 8002534:	f003 0301 	and.w	r3, r3, #1
 8002538:	4a11      	ldr	r2, [pc, #68]	@ (8002580 <HAL_RCC_GetSysClockFreq+0xa0>)
 800253a:	5cd3      	ldrb	r3, [r2, r3]
 800253c:	60bb      	str	r3, [r7, #8]
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	4a0d      	ldr	r2, [pc, #52]	@ (8002578 <HAL_RCC_GetSysClockFreq+0x98>)
 8002542:	fb03 f202 	mul.w	r2, r3, r2
 8002546:	68bb      	ldr	r3, [r7, #8]
 8002548:	fbb2 f3f3 	udiv	r3, r2, r3
 800254c:	617b      	str	r3, [r7, #20]
 800254e:	e004      	b.n	800255a <HAL_RCC_GetSysClockFreq+0x7a>
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	4a0c      	ldr	r2, [pc, #48]	@ (8002584 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002554:	fb02 f303 	mul.w	r3, r2, r3
 8002558:	617b      	str	r3, [r7, #20]
 800255a:	697b      	ldr	r3, [r7, #20]
 800255c:	613b      	str	r3, [r7, #16]
 800255e:	e002      	b.n	8002566 <HAL_RCC_GetSysClockFreq+0x86>
 8002560:	4b05      	ldr	r3, [pc, #20]	@ (8002578 <HAL_RCC_GetSysClockFreq+0x98>)
 8002562:	613b      	str	r3, [r7, #16]
 8002564:	bf00      	nop
 8002566:	693b      	ldr	r3, [r7, #16]
 8002568:	4618      	mov	r0, r3
 800256a:	371c      	adds	r7, #28
 800256c:	46bd      	mov	sp, r7
 800256e:	bc80      	pop	{r7}
 8002570:	4770      	bx	lr
 8002572:	bf00      	nop
 8002574:	40021000 	.word	0x40021000
 8002578:	007a1200 	.word	0x007a1200
 800257c:	0800279c 	.word	0x0800279c
 8002580:	080027ac 	.word	0x080027ac
 8002584:	003d0900 	.word	0x003d0900

08002588 <HAL_RCC_GetHCLKFreq>:
 8002588:	b480      	push	{r7}
 800258a:	af00      	add	r7, sp, #0
 800258c:	4b02      	ldr	r3, [pc, #8]	@ (8002598 <HAL_RCC_GetHCLKFreq+0x10>)
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	4618      	mov	r0, r3
 8002592:	46bd      	mov	sp, r7
 8002594:	bc80      	pop	{r7}
 8002596:	4770      	bx	lr
 8002598:	20000000 	.word	0x20000000

0800259c <HAL_RCC_GetPCLK1Freq>:
 800259c:	b580      	push	{r7, lr}
 800259e:	af00      	add	r7, sp, #0
 80025a0:	f7ff fff2 	bl	8002588 <HAL_RCC_GetHCLKFreq>
 80025a4:	4602      	mov	r2, r0
 80025a6:	4b05      	ldr	r3, [pc, #20]	@ (80025bc <HAL_RCC_GetPCLK1Freq+0x20>)
 80025a8:	685b      	ldr	r3, [r3, #4]
 80025aa:	0a1b      	lsrs	r3, r3, #8
 80025ac:	f003 0307 	and.w	r3, r3, #7
 80025b0:	4903      	ldr	r1, [pc, #12]	@ (80025c0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80025b2:	5ccb      	ldrb	r3, [r1, r3]
 80025b4:	fa22 f303 	lsr.w	r3, r2, r3
 80025b8:	4618      	mov	r0, r3
 80025ba:	bd80      	pop	{r7, pc}
 80025bc:	40021000 	.word	0x40021000
 80025c0:	08002794 	.word	0x08002794

080025c4 <RCC_Delay>:
 80025c4:	b480      	push	{r7}
 80025c6:	b085      	sub	sp, #20
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	4b0a      	ldr	r3, [pc, #40]	@ (80025f8 <RCC_Delay+0x34>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	4a0a      	ldr	r2, [pc, #40]	@ (80025fc <RCC_Delay+0x38>)
 80025d2:	fba2 2303 	umull	r2, r3, r2, r3
 80025d6:	0a5b      	lsrs	r3, r3, #9
 80025d8:	687a      	ldr	r2, [r7, #4]
 80025da:	fb02 f303 	mul.w	r3, r2, r3
 80025de:	60fb      	str	r3, [r7, #12]
 80025e0:	bf00      	nop
 80025e2:	68fb      	ldr	r3, [r7, #12]
 80025e4:	1e5a      	subs	r2, r3, #1
 80025e6:	60fa      	str	r2, [r7, #12]
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d1f9      	bne.n	80025e0 <RCC_Delay+0x1c>
 80025ec:	bf00      	nop
 80025ee:	bf00      	nop
 80025f0:	3714      	adds	r7, #20
 80025f2:	46bd      	mov	sp, r7
 80025f4:	bc80      	pop	{r7}
 80025f6:	4770      	bx	lr
 80025f8:	20000000 	.word	0x20000000
 80025fc:	10624dd3 	.word	0x10624dd3

08002600 <HAL_SPI_Init>:
 8002600:	b580      	push	{r7, lr}
 8002602:	b082      	sub	sp, #8
 8002604:	af00      	add	r7, sp, #0
 8002606:	6078      	str	r0, [r7, #4]
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	2b00      	cmp	r3, #0
 800260c:	d101      	bne.n	8002612 <HAL_SPI_Init+0x12>
 800260e:	2301      	movs	r3, #1
 8002610:	e076      	b.n	8002700 <HAL_SPI_Init+0x100>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002616:	2b00      	cmp	r3, #0
 8002618:	d108      	bne.n	800262c <HAL_SPI_Init+0x2c>
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	685b      	ldr	r3, [r3, #4]
 800261e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8002622:	d009      	beq.n	8002638 <HAL_SPI_Init+0x38>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	2200      	movs	r2, #0
 8002628:	61da      	str	r2, [r3, #28]
 800262a:	e005      	b.n	8002638 <HAL_SPI_Init+0x38>
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	2200      	movs	r2, #0
 8002630:	611a      	str	r2, [r3, #16]
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	2200      	movs	r2, #0
 8002636:	615a      	str	r2, [r3, #20]
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	2200      	movs	r2, #0
 800263c:	629a      	str	r2, [r3, #40]	@ 0x28
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8002644:	b2db      	uxtb	r3, r3
 8002646:	2b00      	cmp	r3, #0
 8002648:	d106      	bne.n	8002658 <HAL_SPI_Init+0x58>
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	2200      	movs	r2, #0
 800264e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002652:	6878      	ldr	r0, [r7, #4]
 8002654:	f7fe fb9e 	bl	8000d94 <HAL_SPI_MspInit>
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	2202      	movs	r2, #2
 800265c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	681a      	ldr	r2, [r3, #0]
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800266e:	601a      	str	r2, [r3, #0]
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	685b      	ldr	r3, [r3, #4]
 8002674:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	689b      	ldr	r3, [r3, #8]
 800267c:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8002680:	431a      	orrs	r2, r3
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	68db      	ldr	r3, [r3, #12]
 8002686:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800268a:	431a      	orrs	r2, r3
 800268c:	687b      	ldr	r3, [r7, #4]
 800268e:	691b      	ldr	r3, [r3, #16]
 8002690:	f003 0302 	and.w	r3, r3, #2
 8002694:	431a      	orrs	r2, r3
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	695b      	ldr	r3, [r3, #20]
 800269a:	f003 0301 	and.w	r3, r3, #1
 800269e:	431a      	orrs	r2, r3
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	699b      	ldr	r3, [r3, #24]
 80026a4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80026a8:	431a      	orrs	r2, r3
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	69db      	ldr	r3, [r3, #28]
 80026ae:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80026b2:	431a      	orrs	r2, r3
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	6a1b      	ldr	r3, [r3, #32]
 80026b8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026bc:	ea42 0103 	orr.w	r1, r2, r3
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80026c4:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	430a      	orrs	r2, r1
 80026ce:	601a      	str	r2, [r3, #0]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	699b      	ldr	r3, [r3, #24]
 80026d4:	0c1a      	lsrs	r2, r3, #16
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	f002 0204 	and.w	r2, r2, #4
 80026de:	605a      	str	r2, [r3, #4]
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	69da      	ldr	r2, [r3, #28]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80026ee:	61da      	str	r2, [r3, #28]
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	2200      	movs	r2, #0
 80026f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	2201      	movs	r2, #1
 80026fa:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80026fe:	2300      	movs	r3, #0
 8002700:	4618      	mov	r0, r3
 8002702:	3708      	adds	r7, #8
 8002704:	46bd      	mov	sp, r7
 8002706:	bd80      	pop	{r7, pc}

08002708 <memset>:
 8002708:	4603      	mov	r3, r0
 800270a:	4402      	add	r2, r0
 800270c:	4293      	cmp	r3, r2
 800270e:	d100      	bne.n	8002712 <memset+0xa>
 8002710:	4770      	bx	lr
 8002712:	f803 1b01 	strb.w	r1, [r3], #1
 8002716:	e7f9      	b.n	800270c <memset+0x4>

08002718 <__libc_init_array>:
 8002718:	b570      	push	{r4, r5, r6, lr}
 800271a:	2600      	movs	r6, #0
 800271c:	4d0c      	ldr	r5, [pc, #48]	@ (8002750 <__libc_init_array+0x38>)
 800271e:	4c0d      	ldr	r4, [pc, #52]	@ (8002754 <__libc_init_array+0x3c>)
 8002720:	1b64      	subs	r4, r4, r5
 8002722:	10a4      	asrs	r4, r4, #2
 8002724:	42a6      	cmp	r6, r4
 8002726:	d109      	bne.n	800273c <__libc_init_array+0x24>
 8002728:	f000 f81a 	bl	8002760 <_init>
 800272c:	2600      	movs	r6, #0
 800272e:	4d0a      	ldr	r5, [pc, #40]	@ (8002758 <__libc_init_array+0x40>)
 8002730:	4c0a      	ldr	r4, [pc, #40]	@ (800275c <__libc_init_array+0x44>)
 8002732:	1b64      	subs	r4, r4, r5
 8002734:	10a4      	asrs	r4, r4, #2
 8002736:	42a6      	cmp	r6, r4
 8002738:	d105      	bne.n	8002746 <__libc_init_array+0x2e>
 800273a:	bd70      	pop	{r4, r5, r6, pc}
 800273c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002740:	4798      	blx	r3
 8002742:	3601      	adds	r6, #1
 8002744:	e7ee      	b.n	8002724 <__libc_init_array+0xc>
 8002746:	f855 3b04 	ldr.w	r3, [r5], #4
 800274a:	4798      	blx	r3
 800274c:	3601      	adds	r6, #1
 800274e:	e7f2      	b.n	8002736 <__libc_init_array+0x1e>
 8002750:	080027b0 	.word	0x080027b0
 8002754:	080027b0 	.word	0x080027b0
 8002758:	080027b0 	.word	0x080027b0
 800275c:	080027b4 	.word	0x080027b4

08002760 <_init>:
 8002760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002762:	bf00      	nop
 8002764:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002766:	bc08      	pop	{r3}
 8002768:	469e      	mov	lr, r3
 800276a:	4770      	bx	lr

0800276c <_fini>:
 800276c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800276e:	bf00      	nop
 8002770:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002772:	bc08      	pop	{r3}
 8002774:	469e      	mov	lr, r3
 8002776:	4770      	bx	lr
